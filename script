-- Gui to Lua
-- Version: 3.2

-- Instances:

local VEXGUI = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Close = Instance.new("TextButton")
local UIGradient = Instance.new("UIGradient")
local VexFrame = Instance.new("Frame")
local Tabs = Instance.new("Folder")
local Home = Instance.new("Frame")
local PlayerImage = Instance.new("ImageLabel")
local Thanks = Instance.new("TextLabel")
local Info = Instance.new("Folder")
local PlrName = Instance.new("TextLabel")
local AccAge = Instance.new("TextLabel")
local plrid = Instance.new("TextLabel")
local VersionLabel = Instance.new("TextLabel")
local ChangeTheme = Instance.new("Frame")
local Header = Instance.new("TextLabel")
local Colors = Instance.new("Folder")
local Pink = Instance.new("TextButton")
local Blue = Instance.new("TextButton")
local Purple = Instance.new("TextButton")
local Yellow = Instance.new("TextButton")
local White = Instance.new("TextButton")
local Red = Instance.new("TextButton")
local Orange = Instance.new("TextButton")
local Green = Instance.new("TextButton")
local DarkMode = Instance.new("TextButton")
local CustomColor = Instance.new("TextBox")
local VexButtons = Instance.new("Folder")
local ScrollingFrame = Instance.new("ScrollingFrame")
local HomeButton = Instance.new("TextButton")
local UIGradient_2 = Instance.new("UIGradient")
local GeneralButton = Instance.new("TextButton")
local UIGradient_3 = Instance.new("UIGradient")
local ClientButton = Instance.new("TextButton")
local UIGradient_4 = Instance.new("UIGradient")
local SpectateButton = Instance.new("TextButton")
local UIGradient_5 = Instance.new("UIGradient")
local TeleportButton = Instance.new("TextButton")
local UIGradient_6 = Instance.new("UIGradient")
local TargetButton = Instance.new("TextButton")
local UIGradient_7 = Instance.new("UIGradient")
local GiveToolButton = Instance.new("TextButton")
local UIGradient_8 = Instance.new("UIGradient")
local ChatBypassButton = Instance.new("TextButton")
local UIGradient_9 = Instance.new("UIGradient")
local NotesButton = Instance.new("TextButton")
local UIGradient_10 = Instance.new("UIGradient")
local CreditsButton = Instance.new("TextButton")
local UIGradient_11 = Instance.new("UIGradient")
local Settings = Instance.new("TextButton")
local UIGradient_12 = Instance.new("UIGradient")
local Spectate = Instance.new("Frame")
local enterButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UIGradient_13 = Instance.new("UIGradient")
local TextBox = Instance.new("TextBox")
local UICorner_2 = Instance.new("UICorner")
local UICorner_3 = Instance.new("UICorner")
local UIGradient_14 = Instance.new("UIGradient")
local resetButton = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_15 = Instance.new("UIGradient")
local Teleport = Instance.new("Frame")
local teleportenter = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local UIGradient_16 = Instance.new("UIGradient")
local ImageLabel = Instance.new("ImageLabel")
local TextBox_2 = Instance.new("TextBox")
local UICorner_6 = Instance.new("UICorner")
local UICorner_7 = Instance.new("UICorner")
local UIGradient_17 = Instance.new("UIGradient")
local Credits = Instance.new("Frame")
local Header_2 = Instance.new("TextLabel")
local Names = Instance.new("Folder")
local Participant = Instance.new("TextLabel")
local Participant_2 = Instance.new("TextLabel")
local Thanks_2 = Instance.new("TextLabel")
local General = Instance.new("ScrollingFrame")
local FlingButton = Instance.new("TextButton")
local UIGradient_18 = Instance.new("UIGradient")
local TextLabel = Instance.new("TextLabel")
local SpazButton = Instance.new("TextButton")
local UIGradient_19 = Instance.new("UIGradient")
local FreezeButton = Instance.new("TextButton")
local UIGradient_20 = Instance.new("UIGradient")
local XRayButton = Instance.new("TextButton")
local UIGradient_21 = Instance.new("UIGradient")
local JumpPowerButton = Instance.new("TextButton")
local UIGradient_22 = Instance.new("UIGradient")
local WalkSpeedButton = Instance.new("TextButton")
local UIGradient_23 = Instance.new("UIGradient")
local ToggleTexturesButton = Instance.new("TextButton")
local UIGradient_24 = Instance.new("UIGradient")
local InfJump = Instance.new("TextButton")
local UIGradient_25 = Instance.new("UIGradient")
local SwimInAirButton = Instance.new("TextButton")
local UIGradient_26 = Instance.new("UIGradient")
local GravityButton = Instance.new("TextButton")
local UIGradient_27 = Instance.new("UIGradient")
local SitButton = Instance.new("TextButton")
local UIGradient_28 = Instance.new("UIGradient")
local ParalyzeButton = Instance.new("TextButton")
local UIGradient_29 = Instance.new("UIGradient")
local HelicopterButton = Instance.new("TextButton")
local UIGradient_30 = Instance.new("UIGradient")
local MoonwalkButton = Instance.new("TextButton")
local UIGradient_31 = Instance.new("UIGradient")
local SeizureButton = Instance.new("TextButton")
local UIGradient_32 = Instance.new("UIGradient")
local NoclipButton = Instance.new("TextButton")
local UIGradient_33 = Instance.new("UIGradient")
local FlyButton = Instance.new("TextButton")
local UIGradient_34 = Instance.new("UIGradient")
local AntiVoidButton = Instance.new("TextButton")
local UIGradient_35 = Instance.new("UIGradient")
local ChatSpam = Instance.new("TextButton")
local UIGradient_36 = Instance.new("UIGradient")
local ChatlogButton = Instance.new("TextButton")
local UIGradient_37 = Instance.new("UIGradient")
local ClickToMove = Instance.new("TextButton")
local UIGradient_38 = Instance.new("UIGradient")
local DashButton = Instance.new("TextButton")
local UIGradient_39 = Instance.new("UIGradient")
local ESP = Instance.new("TextButton")
local UIGradient_40 = Instance.new("UIGradient")
local FakeLagButton = Instance.new("TextButton")
local UIGradient_41 = Instance.new("UIGradient")
local FieldOfViewButton = Instance.new("TextButton")
local UIGradient_42 = Instance.new("UIGradient")
local AntiFlingButton = Instance.new("TextButton")
local UIGradient_43 = Instance.new("UIGradient")
local Notes = Instance.new("Frame")
local TextBox_3 = Instance.new("TextBox")
local Settings_2 = Instance.new("Frame")
local Header_3 = Instance.new("TextLabel")
local Buttons = Instance.new("Folder")
local Panic = Instance.new("TextButton")
local UIGradient_44 = Instance.new("UIGradient")
local DiscordLink = Instance.new("TextButton")
local UIGradient_45 = Instance.new("UIGradient")
local Client = Instance.new("ScrollingFrame")
local DihButton = Instance.new("TextButton")
local UIGradient_46 = Instance.new("UIGradient")
local TextLabel_2 = Instance.new("TextLabel")
local RainbowSkinButton = Instance.new("TextButton")
local UIGradient_47 = Instance.new("UIGradient")
local FartButton = Instance.new("TextButton")
local UIGradient_48 = Instance.new("UIGradient")
local NightButton = Instance.new("TextButton")
local UIGradient_49 = Instance.new("UIGradient")
local DayButton = Instance.new("TextButton")
local UIGradient_50 = Instance.new("UIGradient")
local RemoveFogButton = Instance.new("TextButton")
local UIGradient_51 = Instance.new("UIGradient")
local ClickToDeleteButton = Instance.new("TextButton")
local UIGradient_52 = Instance.new("UIGradient")
local ClickToCollisionButton = Instance.new("TextButton")
local UIGradient_53 = Instance.new("UIGradient")
local TextBoxs = Instance.new("Folder")
local TextBoxFrame = Instance.new("Frame")
local TypeBelow = Instance.new("TextLabel")
local TextBox_4 = Instance.new("TextBox")
local IntTextBoxFrame = Instance.new("Frame")
local TypeBelow_2 = Instance.new("TextLabel")
local TextBox_5 = Instance.new("TextBox")
local Close_2 = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local UIGradient_54 = Instance.new("UIGradient")
local FPS = Instance.new("TextLabel")
local Logo = Instance.new("ImageLabel")
local UICorner_8 = Instance.new("UICorner")
local ChatLog = Instance.new("Frame")
local UIGradient_55 = Instance.new("UIGradient")
local Text = Instance.new("Folder")
local Chats = Instance.new("Folder")
local Other = Instance.new("Folder")
local Title_2 = Instance.new("TextLabel")
local ScrollingMainFrame = Instance.new("ScrollingFrame")
local Template = Instance.new("Folder")
local UserSent = Instance.new("TextLabel")
local MessageSent = Instance.new("TextLabel")
local DeathText = Instance.new("TextLabel")
local NotificationTop = Instance.new("Frame")
local UICorner_9 = Instance.new("UICorner")
local Text_2 = Instance.new("Folder")
local Title_3 = Instance.new("TextLabel")
local Text_3 = Instance.new("TextLabel")
local GUI = Instance.new("TextLabel")
local UIGradient_56 = Instance.new("UIGradient")

--Properties:

VEXGUI.Name = "VEXGUI"
VEXGUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
VEXGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
VEXGUI.ResetOnSpawn = false

Main.Name = "Main"
Main.Parent = VEXGUI
Main.BackgroundColor3 = Color3.fromRGB(155, 57, 235)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.291692317, 0, 0.269984961, 0)
Main.Size = UDim2.new(0.322498202, 0, 0.0228989273, 0)

Close.Name = "Close"
Close.Parent = Main
Close.BackgroundColor3 = Color3.fromRGB(84, 5, 5)
Close.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close.BorderSizePixel = 0
Close.Size = UDim2.new(0.0439009927, 0, 1.00000215, 0)
Close.Font = Enum.Font.SourceSansBold
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.TextSize = 18.000
Close.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(125, 125, 125))}
UIGradient.Rotation = 90
UIGradient.Parent = Close

VexFrame.Name = "VexFrame"
VexFrame.Parent = Main
VexFrame.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
VexFrame.BackgroundTransparency = 0.400
VexFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
VexFrame.BorderSizePixel = 0
VexFrame.Position = UDim2.new(0, 0, 0.973731935, 0)
VexFrame.Size = UDim2.new(0.999999821, 0, 12.8323545, 0)

Tabs.Name = "Tabs"
Tabs.Parent = VexFrame

Home.Name = "Home"
Home.Parent = Tabs
Home.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Home.BackgroundTransparency = 0.500
Home.BorderColor3 = Color3.fromRGB(0, 0, 0)
Home.BorderSizePixel = 0
Home.Position = UDim2.new(0.168624222, 0, 0.00204701652, 0)
Home.Size = UDim2.new(0.831375957, 0, 0.997952998, 0)

PlayerImage.Name = "PlayerImage"
PlayerImage.Parent = Home
PlayerImage.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
PlayerImage.BackgroundTransparency = 0.500
PlayerImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerImage.BorderSizePixel = 0
PlayerImage.Position = UDim2.new(0.0291989986, 0, 0.222916275, 0)
PlayerImage.Size = UDim2.new(0.164554194, 0, 0.330308825, 0)
PlayerImage.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

Thanks.Name = "Thanks"
Thanks.Parent = Home
Thanks.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Thanks.BackgroundTransparency = 1.000
Thanks.BorderColor3 = Color3.fromRGB(0, 0, 0)
Thanks.BorderSizePixel = 0
Thanks.Position = UDim2.new(0.358504444, 0, 0.0347208269, 0)
Thanks.Size = UDim2.new(0.417319775, 0, 0.100000009, 0)
Thanks.Font = Enum.Font.SourceSansBold
Thanks.Text = "Thanks for using VEXSPLOIT!"
Thanks.TextColor3 = Color3.fromRGB(255, 255, 255)
Thanks.TextScaled = true
Thanks.TextSize = 14.000
Thanks.TextWrapped = true

Info.Name = "Info"
Info.Parent = Home

PlrName.Name = "PlrName"
PlrName.Parent = Info
PlrName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlrName.BackgroundTransparency = 1.000
PlrName.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlrName.BorderSizePixel = 0
PlrName.Position = UDim2.new(0.0177175831, 0, 0.56527257, 0)
PlrName.Size = UDim2.new(0.188666403, 0, 0.143952146, 0)
PlrName.Font = Enum.Font.SourceSansBold
PlrName.Text = "Welcome"
PlrName.TextColor3 = Color3.fromRGB(255, 255, 255)
PlrName.TextScaled = true
PlrName.TextSize = 14.000
PlrName.TextWrapped = true
PlrName.TextXAlignment = Enum.TextXAlignment.Left

AccAge.Name = "AccAge"
AccAge.Parent = Info
AccAge.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AccAge.BackgroundTransparency = 1.000
AccAge.BorderColor3 = Color3.fromRGB(0, 0, 0)
AccAge.BorderSizePixel = 0
AccAge.Position = UDim2.new(0.0177176222, 0, 0.704065561, 0)
AccAge.Size = UDim2.new(0.188666359, 0, 0.202641979, 0)
AccAge.Font = Enum.Font.SourceSansBold
AccAge.Text = "Your account age is"
AccAge.TextColor3 = Color3.fromRGB(180, 180, 180)
AccAge.TextScaled = true
AccAge.TextSize = 14.000
AccAge.TextWrapped = true
AccAge.TextXAlignment = Enum.TextXAlignment.Left

plrid.Name = "plrid"
plrid.Parent = Info
plrid.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
plrid.BackgroundTransparency = 1.000
plrid.BorderColor3 = Color3.fromRGB(0, 0, 0)
plrid.BorderSizePixel = 0
plrid.Position = UDim2.new(0.670748353, 0, 0.903230071, 0)
plrid.Size = UDim2.new(0.327473313, 0, 0.0474019833, 0)
plrid.Font = Enum.Font.SourceSansBold
plrid.Text = "USER ID"
plrid.TextColor3 = Color3.fromRGB(255, 255, 255)
plrid.TextWrapped = true
plrid.TextXAlignment = Enum.TextXAlignment.Right

VersionLabel.Name = "VersionLabel"
VersionLabel.Parent = Info
VersionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
VersionLabel.BackgroundTransparency = 1.000
VersionLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
VersionLabel.BorderSizePixel = 0
VersionLabel.Position = UDim2.new(0.722528696, 0, 0.948783696, 0)
VersionLabel.Size = UDim2.new(0.275692999, 0, 0.0512164049, 0)
VersionLabel.Font = Enum.Font.SourceSans
VersionLabel.Text = "VERSION 0.1"
VersionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VersionLabel.TextScaled = true
VersionLabel.TextSize = 14.000
VersionLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
VersionLabel.TextWrapped = true
VersionLabel.TextXAlignment = Enum.TextXAlignment.Right

ChangeTheme.Name = "ChangeTheme"
ChangeTheme.Parent = Home
ChangeTheme.BackgroundColor3 = Color3.fromRGB(104, 104, 104)
ChangeTheme.BackgroundTransparency = 0.700
ChangeTheme.BorderColor3 = Color3.fromRGB(0, 0, 0)
ChangeTheme.BorderSizePixel = 0
ChangeTheme.Position = UDim2.new(0.266876072, 0, 0.182070568, 0)
ChangeTheme.Size = UDim2.new(0.599764228, 0, 0.682624638, 0)

Header.Name = "Header"
Header.Parent = ChangeTheme
Header.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
Header.BackgroundTransparency = 0.600
Header.BorderColor3 = Color3.fromRGB(0, 0, 0)
Header.BorderSizePixel = 0
Header.Position = UDim2.new(-1.81057771e-06, 0, 0, 0)
Header.Size = UDim2.new(1.00000024, 0, 0.129635647, 0)
Header.Font = Enum.Font.SourceSansBold
Header.Text = "Theme"
Header.TextColor3 = Color3.fromRGB(255, 255, 255)
Header.TextScaled = true
Header.TextSize = 14.000
Header.TextWrapped = true

Colors.Name = "Colors"
Colors.Parent = ChangeTheme

Pink.Name = "Pink"
Pink.Parent = Colors
Pink.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
Pink.BorderColor3 = Color3.fromRGB(0, 0, 0)
Pink.BorderSizePixel = 0
Pink.Position = UDim2.new(0.763584077, 0, 0.2074489, 0)
Pink.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Pink.Font = Enum.Font.SourceSans
Pink.Text = ""
Pink.TextColor3 = Color3.fromRGB(255, 0, 0)
Pink.TextSize = 14.000

Blue.Name = "Blue"
Blue.Parent = Colors
Blue.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
Blue.BorderColor3 = Color3.fromRGB(0, 0, 0)
Blue.BorderSizePixel = 0
Blue.Position = UDim2.new(0.637298524, 0, 0.2074489, 0)
Blue.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Blue.Font = Enum.Font.SourceSans
Blue.Text = ""
Blue.TextColor3 = Color3.fromRGB(255, 0, 0)
Blue.TextSize = 14.000

Purple.Name = "Purple"
Purple.Parent = Colors
Purple.BackgroundColor3 = Color3.fromRGB(85, 0, 127)
Purple.BorderColor3 = Color3.fromRGB(0, 0, 0)
Purple.BorderSizePixel = 0
Purple.Position = UDim2.new(0.88604331, 0, 0.2074489, 0)
Purple.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Purple.Font = Enum.Font.SourceSans
Purple.Text = ""
Purple.TextColor3 = Color3.fromRGB(255, 0, 0)
Purple.TextSize = 14.000

Yellow.Name = "Yellow"
Yellow.Parent = Colors
Yellow.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
Yellow.BorderColor3 = Color3.fromRGB(0, 0, 0)
Yellow.BorderSizePixel = 0
Yellow.Position = UDim2.new(0.392380118, 0, 0.2074489, 0)
Yellow.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Yellow.Font = Enum.Font.SourceSans
Yellow.Text = ""
Yellow.TextColor3 = Color3.fromRGB(255, 0, 0)
Yellow.TextSize = 14.000

White.Name = "White"
White.Parent = Colors
White.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
White.BorderColor3 = Color3.fromRGB(0, 0, 0)
White.BorderSizePixel = 0
White.Position = UDim2.new(0.0296642855, 0, 0.207449019, 0)
White.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
White.Font = Enum.Font.SourceSans
White.Text = ""
White.TextColor3 = Color3.fromRGB(0, 0, 0)
White.TextSize = 14.000

Red.Name = "Red"
Red.Parent = Colors
Red.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Red.BorderColor3 = Color3.fromRGB(0, 0, 0)
Red.BorderSizePixel = 0
Red.Position = UDim2.new(0.15128848, 0, 0.207449019, 0)
Red.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Red.Font = Enum.Font.SourceSans
Red.Text = ""
Red.TextColor3 = Color3.fromRGB(255, 0, 0)
Red.TextSize = 14.000

Orange.Name = "Orange"
Orange.Parent = Colors
Orange.BackgroundColor3 = Color3.fromRGB(255, 127, 0)
Orange.BorderColor3 = Color3.fromRGB(0, 0, 0)
Orange.BorderSizePixel = 0
Orange.Position = UDim2.new(0.269920915, 0, 0.2074489, 0)
Orange.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Orange.Font = Enum.Font.SourceSans
Orange.Text = ""
Orange.TextColor3 = Color3.fromRGB(255, 0, 0)
Orange.TextSize = 14.000

Green.Name = "Green"
Green.Parent = Colors
Green.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Green.BorderColor3 = Color3.fromRGB(0, 0, 0)
Green.BorderSizePixel = 0
Green.Position = UDim2.new(0.518666148, 0, 0.2074489, 0)
Green.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Green.Font = Enum.Font.SourceSans
Green.Text = ""
Green.TextColor3 = Color3.fromRGB(255, 0, 0)
Green.TextSize = 14.000

DarkMode.Name = "DarkMode"
DarkMode.Parent = Colors
DarkMode.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
DarkMode.BorderColor3 = Color3.fromRGB(0, 0, 0)
DarkMode.BorderSizePixel = 0
DarkMode.Position = UDim2.new(0.0288293734, 0, 0.463473767, 0)
DarkMode.Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
DarkMode.Font = Enum.Font.SourceSans
DarkMode.Text = ""
DarkMode.TextColor3 = Color3.fromRGB(255, 0, 0)
DarkMode.TextSize = 14.000

CustomColor.Name = "CustomColor"
CustomColor.Parent = ChangeTheme
CustomColor.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
CustomColor.BorderColor3 = Color3.fromRGB(0, 0, 0)
CustomColor.BorderSizePixel = 0
CustomColor.Position = UDim2.new(0.0229603983, 0, 0.717182338, 0)
CustomColor.Size = UDim2.new(0.952256024, 0, 0.200761169, 0)
CustomColor.Font = Enum.Font.SourceSans
CustomColor.PlaceholderColor3 = Color3.fromRGB(199, 199, 199)
CustomColor.PlaceholderText = "Custom Color (255,255,255)"
CustomColor.Text = ""
CustomColor.TextColor3 = Color3.fromRGB(255, 255, 255)
CustomColor.TextScaled = true
CustomColor.TextSize = 14.000
CustomColor.TextWrapped = true

VexButtons.Name = "VexButtons"
VexButtons.Parent = Tabs

ScrollingFrame.Parent = VexButtons
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
ScrollingFrame.BackgroundTransparency = 0.300
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(1.76217313e-07, 0, 0.00204709591, 0)
ScrollingFrame.Size = UDim2.new(0.168854252, 0, 0.997953355, 0)
ScrollingFrame.ScrollBarThickness = 5

HomeButton.Name = "HomeButton"
HomeButton.Parent = ScrollingFrame
HomeButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
HomeButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
HomeButton.BorderSizePixel = 0
HomeButton.Position = UDim2.new(-0, 0, 0.0149999997, 0)
HomeButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
HomeButton.Font = Enum.Font.SourceSansBold
HomeButton.Text = "Home"
HomeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HomeButton.TextScaled = true
HomeButton.TextSize = 14.000
HomeButton.TextWrapped = true

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_2.Rotation = 90
UIGradient_2.Parent = HomeButton

GeneralButton.Name = "GeneralButton"
GeneralButton.Parent = ScrollingFrame
GeneralButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
GeneralButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
GeneralButton.BorderSizePixel = 0
GeneralButton.Position = UDim2.new(-0, 0, 0.063000001, 0)
GeneralButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
GeneralButton.Font = Enum.Font.SourceSansBold
GeneralButton.Text = "General"
GeneralButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GeneralButton.TextScaled = true
GeneralButton.TextSize = 14.000
GeneralButton.TextWrapped = true

UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_3.Rotation = 90
UIGradient_3.Parent = GeneralButton

ClientButton.Name = "ClientButton"
ClientButton.Parent = ScrollingFrame
ClientButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
ClientButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ClientButton.BorderSizePixel = 0
ClientButton.Position = UDim2.new(-0.023, 0, 0.112999998, 0)
ClientButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
ClientButton.Font = Enum.Font.SourceSansBold
ClientButton.Text = "Client"
ClientButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClientButton.TextScaled = true
ClientButton.TextSize = 14.000
ClientButton.TextWrapped = true

UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_4.Rotation = 90
UIGradient_4.Parent = ClientButton

SpectateButton.Name = "SpectateButton"
SpectateButton.Parent = ScrollingFrame
SpectateButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
SpectateButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
SpectateButton.BorderSizePixel = 0
SpectateButton.Position = UDim2.new(-0.0230000336, 0, 0.163404495, 0)
SpectateButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
SpectateButton.Font = Enum.Font.SourceSansBold
SpectateButton.Text = "Spectate"
SpectateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SpectateButton.TextScaled = true
SpectateButton.TextSize = 14.000
SpectateButton.TextWrapped = true

UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_5.Rotation = 90
UIGradient_5.Parent = SpectateButton

TeleportButton.Name = "TeleportButton"
TeleportButton.Parent = ScrollingFrame
TeleportButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
TeleportButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TeleportButton.BorderSizePixel = 0
TeleportButton.Position = UDim2.new(-0.023, 0, 0.210999995, 0)
TeleportButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
TeleportButton.Font = Enum.Font.SourceSansBold
TeleportButton.Text = "Teleport"
TeleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TeleportButton.TextScaled = true
TeleportButton.TextSize = 14.000
TeleportButton.TextWrapped = true

UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_6.Rotation = 90
UIGradient_6.Parent = TeleportButton

TargetButton.Name = "TargetButton"
TargetButton.Parent = ScrollingFrame
TargetButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
TargetButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TargetButton.BorderSizePixel = 0
TargetButton.Position = UDim2.new(-0.0230000336, 0, 0.261785209, 0)
TargetButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
TargetButton.Font = Enum.Font.SourceSansBold
TargetButton.Text = "Target"
TargetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetButton.TextScaled = true
TargetButton.TextSize = 14.000
TargetButton.TextWrapped = true

UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_7.Rotation = 90
UIGradient_7.Parent = TargetButton

GiveToolButton.Name = "GiveToolButton"
GiveToolButton.Parent = ScrollingFrame
GiveToolButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
GiveToolButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
GiveToolButton.BorderSizePixel = 0
GiveToolButton.Position = UDim2.new(0, 0, 0.312999994, 0)
GiveToolButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
GiveToolButton.Font = Enum.Font.SourceSansBold
GiveToolButton.Text = "GiveTool (Client)"
GiveToolButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GiveToolButton.TextScaled = true
GiveToolButton.TextSize = 14.000
GiveToolButton.TextWrapped = true

UIGradient_8.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_8.Rotation = 90
UIGradient_8.Parent = GiveToolButton

ChatBypassButton.Name = "ChatBypassButton"
ChatBypassButton.Parent = ScrollingFrame
ChatBypassButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
ChatBypassButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ChatBypassButton.BorderSizePixel = 0
ChatBypassButton.Position = UDim2.new(0, 0, 0.35800001, 0)
ChatBypassButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
ChatBypassButton.Font = Enum.Font.SourceSansBold
ChatBypassButton.Text = "Bypasser"
ChatBypassButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ChatBypassButton.TextScaled = true
ChatBypassButton.TextSize = 14.000
ChatBypassButton.TextWrapped = true

UIGradient_9.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_9.Rotation = 90
UIGradient_9.Parent = ChatBypassButton

NotesButton.Name = "NotesButton"
NotesButton.Parent = ScrollingFrame
NotesButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
NotesButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
NotesButton.BorderSizePixel = 0
NotesButton.Position = UDim2.new(0, 0, 0.405999988, 0)
NotesButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
NotesButton.Font = Enum.Font.SourceSansBold
NotesButton.Text = "Notes"
NotesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NotesButton.TextScaled = true
NotesButton.TextSize = 14.000
NotesButton.TextWrapped = true

UIGradient_10.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_10.Rotation = 90
UIGradient_10.Parent = NotesButton

CreditsButton.Name = "CreditsButton"
CreditsButton.Parent = ScrollingFrame
CreditsButton.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
CreditsButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
CreditsButton.BorderSizePixel = 0
CreditsButton.Position = UDim2.new(-0.0340000018, 0, 0.453999996, 0)
CreditsButton.Size = UDim2.new(1, 0, 0.0489999987, 0)
CreditsButton.Font = Enum.Font.SourceSansBold
CreditsButton.Text = "Credits"
CreditsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CreditsButton.TextScaled = true
CreditsButton.TextSize = 14.000
CreditsButton.TextWrapped = true

UIGradient_11.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_11.Rotation = 90
UIGradient_11.Parent = CreditsButton

Settings.Name = "Settings"
Settings.Parent = ScrollingFrame
Settings.BackgroundColor3 = Color3.fromRGB(98, 98, 98)
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(-0.0111728022, 0, 0.501218617, 0)
Settings.Size = UDim2.new(1, 0, 0.0489999987, 0)
Settings.Font = Enum.Font.SourceSansBold
Settings.Text = "Settings"
Settings.TextColor3 = Color3.fromRGB(255, 255, 255)
Settings.TextScaled = true
Settings.TextSize = 14.000
Settings.TextWrapped = true

UIGradient_12.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_12.Rotation = 90
UIGradient_12.Parent = Settings

Spectate.Name = "Spectate"
Spectate.Parent = Tabs
Spectate.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Spectate.BackgroundTransparency = 0.500
Spectate.BorderColor3 = Color3.fromRGB(0, 0, 0)
Spectate.BorderSizePixel = 0
Spectate.Position = UDim2.new(0.16885443, 0, -0.00514861383, 0)
Spectate.Size = UDim2.new(0.831145644, 0, 1.00514841, 0)
Spectate.Visible = false

enterButton.Name = "enterButton"
enterButton.Parent = Spectate
enterButton.BackgroundColor3 = Color3.fromRGB(0, 115, 255)
enterButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
enterButton.BorderSizePixel = 0
enterButton.Position = UDim2.new(0.362143785, 0, 0.564714015, 0)
enterButton.Size = UDim2.new(0.203999996, 0, 0.153999999, 0)
enterButton.Font = Enum.Font.SourceSansBold
enterButton.Text = "Enter"
enterButton.TextColor3 = Color3.fromRGB(255, 255, 255)
enterButton.TextScaled = true
enterButton.TextSize = 14.000
enterButton.TextWrapped = true

UICorner.Parent = enterButton

UIGradient_13.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(84, 84, 84))}
UIGradient_13.Rotation = 90
UIGradient_13.Parent = enterButton

TextBox.Parent = Spectate
TextBox.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0.272241354, 0, 0.0634782761, 0)
TextBox.Size = UDim2.new(0.379790425, 0, 0.440499425, 0)
TextBox.Font = Enum.Font.SourceSansBold
TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TextBox.PlaceholderText = "Who do you want to spectate?"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextScaled = true
TextBox.TextSize = 14.000
TextBox.TextWrapped = true

UICorner_2.Parent = TextBox

UICorner_3.Parent = TextBox

UIGradient_14.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(84, 84, 84))}
UIGradient_14.Rotation = 90
UIGradient_14.Parent = TextBox

resetButton.Name = "resetButton"
resetButton.Parent = Spectate
resetButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
resetButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
resetButton.BorderSizePixel = 0
resetButton.Position = UDim2.new(0.362148196, 0, 0.752213359, 0)
resetButton.Size = UDim2.new(0.204176337, 0, 0.15384616, 0)
resetButton.Font = Enum.Font.SourceSansBold
resetButton.Text = "Reset"
resetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
resetButton.TextScaled = true
resetButton.TextSize = 14.000
resetButton.TextWrapped = true

UICorner_4.Parent = resetButton

UIGradient_15.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(84, 84, 84))}
UIGradient_15.Rotation = 90
UIGradient_15.Parent = resetButton

Teleport.Name = "Teleport"
Teleport.Parent = Tabs
Teleport.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Teleport.BackgroundTransparency = 0.500
Teleport.BorderColor3 = Color3.fromRGB(0, 0, 0)
Teleport.BorderSizePixel = 0
Teleport.Position = UDim2.new(0.16885443, 0, 0, 0)
Teleport.Size = UDim2.new(0.831145644, 0, 1, 0)
Teleport.Visible = false

teleportenter.Name = "teleportenter"
teleportenter.Parent = Teleport
teleportenter.BackgroundColor3 = Color3.fromRGB(154, 51, 164)
teleportenter.BorderColor3 = Color3.fromRGB(0, 0, 0)
teleportenter.BorderSizePixel = 0
teleportenter.Position = UDim2.new(0.342937827, 0, 0.782529891, 0)
teleportenter.Size = UDim2.new(0.277895421, 0, 0.154453695, 0)
teleportenter.Font = Enum.Font.SourceSansBold
teleportenter.Text = "Teleport"
teleportenter.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportenter.TextScaled = true
teleportenter.TextSize = 14.000
teleportenter.TextWrapped = true

UICorner_5.Parent = teleportenter

UIGradient_16.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(84, 84, 84))}
UIGradient_16.Rotation = 90
UIGradient_16.Parent = teleportenter

ImageLabel.Parent = Teleport
ImageLabel.BackgroundColor3 = Color3.fromRGB(88, 88, 88)
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.383261681, 0, 0.0734324381, 0)
ImageLabel.Size = UDim2.new(0.196842581, 0, 0.401579618, 0)
ImageLabel.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

TextBox_2.Parent = Teleport
TextBox_2.BackgroundColor3 = Color3.fromRGB(94, 94, 94)
TextBox_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox_2.BorderSizePixel = 0
TextBox_2.Position = UDim2.new(0.258346289, 0, 0.525617242, 0)
TextBox_2.Size = UDim2.new(0.446000695, 0, 0.200279012, 0)
TextBox_2.Font = Enum.Font.SourceSansBold
TextBox_2.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TextBox_2.PlaceholderText = "Enter Target"
TextBox_2.Text = ""
TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_2.TextScaled = true
TextBox_2.TextSize = 14.000
TextBox_2.TextWrapped = true

UICorner_6.Parent = TextBox_2

UICorner_7.Parent = TextBox_2

UIGradient_17.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(84, 84, 84))}
UIGradient_17.Rotation = 90
UIGradient_17.Parent = TextBox_2

Credits.Name = "Credits"
Credits.Parent = Tabs
Credits.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Credits.BackgroundTransparency = 0.500
Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0.166638449, 0, 0.00204625004, 0)
Credits.Size = UDim2.new(0.833361685, 0, 0.997954011, 0)
Credits.Visible = false

Header_2.Name = "Header"
Header_2.Parent = Credits
Header_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Header_2.BackgroundTransparency = 1.000
Header_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Header_2.BorderSizePixel = 0
Header_2.Position = UDim2.new(0.00265900604, 0, 8.42278553e-07, 0)
Header_2.Size = UDim2.new(0.997340441, 0, 0.156349331, 0)
Header_2.Font = Enum.Font.SourceSansBold
Header_2.Text = "CREDITS"
Header_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Header_2.TextScaled = true
Header_2.TextSize = 14.000
Header_2.TextWrapped = true

Names.Name = "Names"
Names.Parent = Credits

Participant.Name = "Participant"
Participant.Parent = Names
Participant.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Participant.BackgroundTransparency = 1.000
Participant.BorderColor3 = Color3.fromRGB(0, 0, 0)
Participant.BorderSizePixel = 0
Participant.Position = UDim2.new(0.136618331, 0, 0.221838295, 0)
Participant.Size = UDim2.new(0.726722956, 0, 0.100482568, 0)
Participant.Font = Enum.Font.SourceSansBold
Participant.Text = "AFLY: SCRIPTER, UI DESIGNER"
Participant.TextColor3 = Color3.fromRGB(255, 255, 255)
Participant.TextScaled = true
Participant.TextSize = 14.000
Participant.TextWrapped = true

Participant_2.Name = "Participant"
Participant_2.Parent = Names
Participant_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Participant_2.BackgroundTransparency = 1.000
Participant_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Participant_2.BorderSizePixel = 0
Participant_2.Position = UDim2.new(0.136618182, 0, 0.325018376, 0)
Participant_2.Size = UDim2.new(0.726723075, 0, 0.116139464, 0)
Participant_2.Font = Enum.Font.SourceSansBold
Participant_2.Text = "QUANTOR: SCRIPTER, UI DESIGNER"
Participant_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Participant_2.TextScaled = true
Participant_2.TextSize = 14.000
Participant_2.TextWrapped = true

Thanks_2.Name = "Thanks"
Thanks_2.Parent = Names
Thanks_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Thanks_2.BackgroundTransparency = 1.000
Thanks_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Thanks_2.BorderSizePixel = 0
Thanks_2.Position = UDim2.new(0.0234458316, 0, 0.54169637, 0)
Thanks_2.Size = UDim2.new(0.953068018, 0, 0.366834581, 0)
Thanks_2.Font = Enum.Font.SourceSansBold
Thanks_2.Text = "Thank you for using this script, it really means alot, trust me.. alot (we stood up till the pm to make this..)"
Thanks_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Thanks_2.TextScaled = true
Thanks_2.TextSize = 14.000
Thanks_2.TextWrapped = true

General.Name = "General"
General.Parent = Tabs
General.Active = true
General.AnchorPoint = Vector2.new(0.5, 0.5)
General.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
General.BackgroundTransparency = 0.500
General.BorderColor3 = Color3.fromRGB(0, 0, 0)
General.BorderSizePixel = 0
General.Position = UDim2.new(0.584427536, 0, 0.50102365, 0)
General.Size = UDim2.new(0.831145883, 0, 0.997952759, 0)
General.Visible = false

FlingButton.Name = "FlingButton"
FlingButton.Parent = General
FlingButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FlingButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FlingButton.BorderSizePixel = 0
FlingButton.Position = UDim2.new(0.219057068, 0, 0.421139896, 0)
FlingButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
FlingButton.Font = Enum.Font.SourceSansBold
FlingButton.Text = "Fling"
FlingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlingButton.TextScaled = true
FlingButton.TextSize = 14.000
FlingButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FlingButton.TextWrapped = true

UIGradient_18.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_18.Rotation = 90
UIGradient_18.Parent = FlingButton

TextLabel.Parent = General
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(-0.00266608456, 0, 9.44643944e-07, 0)
TextLabel.Size = UDim2.new(0.219352901, 0, 0.070451431, 0)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.Text = "General"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

SpazButton.Name = "SpazButton"
SpazButton.Parent = General
SpazButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
SpazButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
SpazButton.BorderSizePixel = 0
SpazButton.Position = UDim2.new(0.723243356, 0, 0.415074348, 0)
SpazButton.Size = UDim2.new(0.150000066, 0, 0.0529505201, 0)
SpazButton.Font = Enum.Font.SourceSansBold
SpazButton.Text = "Spaz"
SpazButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SpazButton.TextScaled = true
SpazButton.TextSize = 14.000
SpazButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
SpazButton.TextWrapped = true

UIGradient_19.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_19.Rotation = 90
UIGradient_19.Parent = SpazButton

FreezeButton.Name = "FreezeButton"
FreezeButton.Parent = General
FreezeButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FreezeButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FreezeButton.BorderSizePixel = 0
FreezeButton.Position = UDim2.new(0.556505859, 0, 0.417764068, 0)
FreezeButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
FreezeButton.Font = Enum.Font.SourceSansBold
FreezeButton.Text = "Freeze"
FreezeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FreezeButton.TextScaled = true
FreezeButton.TextSize = 14.000
FreezeButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FreezeButton.TextWrapped = true

UIGradient_20.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_20.Rotation = 90
UIGradient_20.Parent = FreezeButton

XRayButton.Name = "XRayButton"
XRayButton.Parent = General
XRayButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
XRayButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
XRayButton.BorderSizePixel = 0
XRayButton.Position = UDim2.new(0.39208433, 0, 0.171909139, 0)
XRayButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
XRayButton.Font = Enum.Font.SourceSansBold
XRayButton.Text = "XRay"
XRayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
XRayButton.TextScaled = true
XRayButton.TextSize = 14.000
XRayButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
XRayButton.TextWrapped = true

UIGradient_21.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_21.Rotation = 90
UIGradient_21.Parent = XRayButton

JumpPowerButton.Name = "JumpPowerButton"
JumpPowerButton.Parent = General
JumpPowerButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
JumpPowerButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
JumpPowerButton.BorderSizePixel = 0
JumpPowerButton.Position = UDim2.new(0.219057068, 0, 0.171909139, 0)
JumpPowerButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
JumpPowerButton.Font = Enum.Font.SourceSansBold
JumpPowerButton.Text = "Set JumpPower"
JumpPowerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpPowerButton.TextScaled = true
JumpPowerButton.TextSize = 14.000
JumpPowerButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
JumpPowerButton.TextWrapped = true

UIGradient_22.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_22.Rotation = 90
UIGradient_22.Parent = JumpPowerButton

WalkSpeedButton.Name = "WalkSpeedButton"
WalkSpeedButton.Parent = General
WalkSpeedButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
WalkSpeedButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedButton.BorderSizePixel = 0
WalkSpeedButton.Position = UDim2.new(0.219057068, 0, 0.088097021, 0)
WalkSpeedButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
WalkSpeedButton.Font = Enum.Font.SourceSansBold
WalkSpeedButton.Text = "Set Walkspeed"
WalkSpeedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedButton.TextScaled = true
WalkSpeedButton.TextSize = 14.000
WalkSpeedButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedButton.TextWrapped = true

UIGradient_23.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_23.Rotation = 90
UIGradient_23.Parent = WalkSpeedButton

ToggleTexturesButton.Name = "ToggleTexturesButton"
ToggleTexturesButton.Parent = General
ToggleTexturesButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ToggleTexturesButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
ToggleTexturesButton.BorderSizePixel = 0
ToggleTexturesButton.Position = UDim2.new(0.558211863, 0, 0.088097021, 0)
ToggleTexturesButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
ToggleTexturesButton.Font = Enum.Font.SourceSansBold
ToggleTexturesButton.Text = "Toggle Textures"
ToggleTexturesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleTexturesButton.TextScaled = true
ToggleTexturesButton.TextSize = 14.000
ToggleTexturesButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ToggleTexturesButton.TextWrapped = true

UIGradient_24.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_24.Rotation = 90
UIGradient_24.Parent = ToggleTexturesButton

InfJump.Name = "InfJump"
InfJump.Parent = General
InfJump.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
InfJump.BorderColor3 = Color3.fromRGB(255, 255, 255)
InfJump.BorderSizePixel = 0
InfJump.Position = UDim2.new(0.219057068, 0, 0.257926852, 0)
InfJump.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
InfJump.Font = Enum.Font.SourceSansBold
InfJump.Text = "Inf Jump"
InfJump.TextColor3 = Color3.fromRGB(255, 255, 255)
InfJump.TextScaled = true
InfJump.TextSize = 14.000
InfJump.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
InfJump.TextWrapped = true

UIGradient_25.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_25.Rotation = 90
UIGradient_25.Parent = InfJump

SwimInAirButton.Name = "SwimInAirButton"
SwimInAirButton.Parent = General
SwimInAirButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
SwimInAirButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
SwimInAirButton.BorderSizePixel = 0
SwimInAirButton.Position = UDim2.new(0.39208433, 0, 0.261970401, 0)
SwimInAirButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
SwimInAirButton.Font = Enum.Font.SourceSansBold
SwimInAirButton.Text = "Swim In Air"
SwimInAirButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SwimInAirButton.TextScaled = true
SwimInAirButton.TextSize = 14.000
SwimInAirButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
SwimInAirButton.TextWrapped = true

UIGradient_26.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_26.Rotation = 90
UIGradient_26.Parent = SwimInAirButton

GravityButton.Name = "GravityButton"
GravityButton.Parent = General
GravityButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
GravityButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
GravityButton.BorderSizePixel = 0
GravityButton.Position = UDim2.new(0.219057068, 0, 0.341738969, 0)
GravityButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
GravityButton.Font = Enum.Font.SourceSansBold
GravityButton.Text = "Set Gravity"
GravityButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GravityButton.TextScaled = true
GravityButton.TextSize = 14.000
GravityButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
GravityButton.TextWrapped = true

UIGradient_27.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_27.Rotation = 90
UIGradient_27.Parent = GravityButton

SitButton.Name = "SitButton"
SitButton.Parent = General
SitButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
SitButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
SitButton.BorderSizePixel = 0
SitButton.Position = UDim2.new(0.558211863, 0, 0.1722119, 0)
SitButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
SitButton.Font = Enum.Font.SourceSansBold
SitButton.Text = "Sit"
SitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SitButton.TextScaled = true
SitButton.TextSize = 14.000
SitButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
SitButton.TextWrapped = true

UIGradient_28.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_28.Rotation = 90
UIGradient_28.Parent = SitButton

ParalyzeButton.Name = "ParalyzeButton"
ParalyzeButton.Parent = General
ParalyzeButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ParalyzeButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
ParalyzeButton.BorderSizePixel = 0
ParalyzeButton.Position = UDim2.new(0.723243356, 0, 0.0872257426, 0)
ParalyzeButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
ParalyzeButton.Font = Enum.Font.SourceSansBold
ParalyzeButton.Text = "Paralyze"
ParalyzeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ParalyzeButton.TextScaled = true
ParalyzeButton.TextSize = 14.000
ParalyzeButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ParalyzeButton.TextWrapped = true

UIGradient_29.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_29.Rotation = 90
UIGradient_29.Parent = ParalyzeButton

HelicopterButton.Name = "HelicopterButton"
HelicopterButton.Parent = General
HelicopterButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
HelicopterButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
HelicopterButton.BorderSizePixel = 0
HelicopterButton.Position = UDim2.new(0.723243237, 0, 0.262097925, 0)
HelicopterButton.Size = UDim2.new(0.1500002, 0, 0.0529504418, 0)
HelicopterButton.Font = Enum.Font.SourceSansBold
HelicopterButton.Text = "Helicopter"
HelicopterButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HelicopterButton.TextScaled = true
HelicopterButton.TextSize = 14.000
HelicopterButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
HelicopterButton.TextWrapped = true

UIGradient_30.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_30.Rotation = 90
UIGradient_30.Parent = HelicopterButton

MoonwalkButton.Name = "MoonwalkButton"
MoonwalkButton.Parent = General
MoonwalkButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
MoonwalkButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
MoonwalkButton.BorderSizePixel = 0
MoonwalkButton.Position = UDim2.new(0.723243237, 0, 0.341317803, 0)
MoonwalkButton.Size = UDim2.new(0.1500002, 0, 0.0529505201, 0)
MoonwalkButton.Font = Enum.Font.SourceSansBold
MoonwalkButton.Text = "Moonwalk"
MoonwalkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MoonwalkButton.TextScaled = true
MoonwalkButton.TextSize = 14.000
MoonwalkButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
MoonwalkButton.TextWrapped = true

UIGradient_31.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_31.Rotation = 90
UIGradient_31.Parent = MoonwalkButton

SeizureButton.Name = "SeizureButton"
SeizureButton.Parent = General
SeizureButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
SeizureButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
SeizureButton.BorderSizePixel = 0
SeizureButton.Position = UDim2.new(0.723243237, 0, 0.172695711, 0)
SeizureButton.Size = UDim2.new(0.150000006, 0, 0.0529999994, 0)
SeizureButton.Font = Enum.Font.SourceSansBold
SeizureButton.Text = "Seizure"
SeizureButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SeizureButton.TextScaled = true
SeizureButton.TextSize = 14.000
SeizureButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
SeizureButton.TextWrapped = true

UIGradient_32.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_32.Rotation = 90
UIGradient_32.Parent = SeizureButton

NoclipButton.Name = "NoclipButton"
NoclipButton.Parent = General
NoclipButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
NoclipButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.BorderSizePixel = 0
NoclipButton.Position = UDim2.new(0.0412894562, 0, 0.262140751, 0)
NoclipButton.Size = UDim2.new(0.149865806, 0, 0.0529504009, 0)
NoclipButton.Font = Enum.Font.SourceSansBold
NoclipButton.Text = "Noclip"
NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.TextScaled = true
NoclipButton.TextSize = 14.000
NoclipButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.TextWrapped = true

UIGradient_33.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_33.Rotation = 90
UIGradient_33.Parent = NoclipButton

FlyButton.Name = "FlyButton"
FlyButton.Parent = General
FlyButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FlyButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FlyButton.BorderSizePixel = 0
FlyButton.Position = UDim2.new(0.0412894562, 0, 0.088097021, 0)
FlyButton.Size = UDim2.new(0.149865806, 0, 0.0529504605, 0)
FlyButton.Font = Enum.Font.SourceSansBold
FlyButton.Text = "Fly (X Toggle)"
FlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlyButton.TextScaled = true
FlyButton.TextSize = 14.000
FlyButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FlyButton.TextWrapped = true

UIGradient_34.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_34.Rotation = 90
UIGradient_34.Parent = FlyButton

AntiVoidButton.Name = "AntiVoidButton"
AntiVoidButton.Parent = General
AntiVoidButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
AntiVoidButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
AntiVoidButton.BorderSizePixel = 0
AntiVoidButton.Position = UDim2.new(0.39208433, 0, 0.418934315, 0)
AntiVoidButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
AntiVoidButton.Font = Enum.Font.SourceSansBold
AntiVoidButton.Text = "Anti-Void"
AntiVoidButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiVoidButton.TextScaled = true
AntiVoidButton.TextSize = 14.000
AntiVoidButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
AntiVoidButton.TextWrapped = true

UIGradient_35.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_35.Rotation = 90
UIGradient_35.Parent = AntiVoidButton

ChatSpam.Name = "ChatSpam"
ChatSpam.Parent = General
ChatSpam.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ChatSpam.BorderColor3 = Color3.fromRGB(255, 255, 255)
ChatSpam.BorderSizePixel = 0
ChatSpam.Position = UDim2.new(0.0389191322, 0, 0.423148364, 0)
ChatSpam.Size = UDim2.new(0.149999991, 0, 0.0529505201, 0)
ChatSpam.Font = Enum.Font.SourceSansBold
ChatSpam.Text = "Chat Spam"
ChatSpam.TextColor3 = Color3.fromRGB(255, 255, 255)
ChatSpam.TextScaled = true
ChatSpam.TextSize = 14.000
ChatSpam.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ChatSpam.TextWrapped = true

UIGradient_36.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_36.Rotation = 90
UIGradient_36.Parent = ChatSpam

ChatlogButton.Name = "ChatlogButton"
ChatlogButton.Parent = General
ChatlogButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ChatlogButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
ChatlogButton.BorderSizePixel = 0
ChatlogButton.Position = UDim2.new(0.558211863, 0, 0.338846922, 0)
ChatlogButton.Size = UDim2.new(0.150000066, 0, 0.0529505201, 0)
ChatlogButton.Font = Enum.Font.SourceSansBold
ChatlogButton.Text = "ChatLogs"
ChatlogButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ChatlogButton.TextScaled = true
ChatlogButton.TextSize = 14.000
ChatlogButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ChatlogButton.TextWrapped = true

UIGradient_37.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_37.Rotation = 90
UIGradient_37.Parent = ChatlogButton

ClickToMove.Name = "ClickToMove"
ClickToMove.Parent = General
ClickToMove.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ClickToMove.BorderColor3 = Color3.fromRGB(255, 255, 255)
ClickToMove.BorderSizePixel = 0
ClickToMove.Position = UDim2.new(0.0412891731, 0, 0.174044579, 0)
ClickToMove.Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
ClickToMove.Font = Enum.Font.SourceSansBold
ClickToMove.Text = "Click To Teleport"
ClickToMove.TextColor3 = Color3.fromRGB(255, 255, 255)
ClickToMove.TextScaled = true
ClickToMove.TextSize = 14.000
ClickToMove.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ClickToMove.TextWrapped = true

UIGradient_38.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_38.Rotation = 90
UIGradient_38.Parent = ClickToMove

DashButton.Name = "DashButton"
DashButton.Parent = General
DashButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
DashButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
DashButton.BorderSizePixel = 0
DashButton.Position = UDim2.new(0.39208433, 0, 0.339165747, 0)
DashButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
DashButton.Font = Enum.Font.SourceSansBold
DashButton.Text = "Dash (Q Toggle)"
DashButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DashButton.TextScaled = true
DashButton.TextSize = 14.000
DashButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
DashButton.TextWrapped = true

UIGradient_39.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_39.Rotation = 90
UIGradient_39.Parent = DashButton

ESP.Name = "ESP"
ESP.Parent = General
ESP.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ESP.BorderColor3 = Color3.fromRGB(255, 255, 255)
ESP.BorderSizePixel = 0
ESP.Position = UDim2.new(0.0412894562, 0, 0.34379074, 0)
ESP.Size = UDim2.new(0.149865806, 0, 0.0529504418, 0)
ESP.Font = Enum.Font.SourceSansBold
ESP.Text = "ESP"
ESP.TextColor3 = Color3.fromRGB(255, 255, 255)
ESP.TextScaled = true
ESP.TextSize = 14.000
ESP.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ESP.TextWrapped = true

UIGradient_40.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_40.Rotation = 90
UIGradient_40.Parent = ESP

FakeLagButton.Name = "FakeLagButton"
FakeLagButton.Parent = General
FakeLagButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FakeLagButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FakeLagButton.BorderSizePixel = 0
FakeLagButton.Position = UDim2.new(0.558211863, 0, 0.259627044, 0)
FakeLagButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
FakeLagButton.Font = Enum.Font.SourceSansBold
FakeLagButton.Text = "FakeLag"
FakeLagButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FakeLagButton.TextScaled = true
FakeLagButton.TextSize = 14.000
FakeLagButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FakeLagButton.TextWrapped = true

UIGradient_41.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_41.Rotation = 90
UIGradient_41.Parent = FakeLagButton

FieldOfViewButton.Name = "FieldOfViewButton"
FieldOfViewButton.Parent = General
FieldOfViewButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FieldOfViewButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FieldOfViewButton.BorderSizePixel = 0
FieldOfViewButton.Position = UDim2.new(0.39208433, 0, 0.088097021, 0)
FieldOfViewButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
FieldOfViewButton.Font = Enum.Font.SourceSansBold
FieldOfViewButton.Text = "Field Of View"
FieldOfViewButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FieldOfViewButton.TextScaled = true
FieldOfViewButton.TextSize = 14.000
FieldOfViewButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FieldOfViewButton.TextWrapped = true

UIGradient_42.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_42.Rotation = 90
UIGradient_42.Parent = FieldOfViewButton

AntiFlingButton.Name = "AntiFlingButton"
AntiFlingButton.Parent = General
AntiFlingButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
AntiFlingButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
AntiFlingButton.BorderSizePixel = 0
AntiFlingButton.Position = UDim2.new(0.0412314609, 0, 0.500551879, 0)
AntiFlingButton.Size = UDim2.new(0.150000006, 0, 0.0529999994, 0)
AntiFlingButton.Font = Enum.Font.SourceSansBold
AntiFlingButton.Text = "Anti-Fling"
AntiFlingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiFlingButton.TextScaled = true
AntiFlingButton.TextSize = 14.000
AntiFlingButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
AntiFlingButton.TextWrapped = true

UIGradient_43.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_43.Rotation = 90
UIGradient_43.Parent = AntiFlingButton

Notes.Name = "Notes"
Notes.Parent = Tabs
Notes.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Notes.BackgroundTransparency = 1.000
Notes.BorderColor3 = Color3.fromRGB(0, 0, 0)
Notes.BorderSizePixel = 0
Notes.Position = UDim2.new(0.182055682, 0, 0.0320472084, 0)
Notes.Size = UDim2.new(0.800599992, 0, 0.931915402, 0)
Notes.Visible = false

TextBox_3.Parent = Notes
TextBox_3.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TextBox_3.BackgroundTransparency = 0.500
TextBox_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox_3.BorderSizePixel = 0
TextBox_3.Position = UDim2.new(-0.0164891388, 0, -0.0321917161, 0)
TextBox_3.Size = UDim2.new(1.03815341, 0, 1.07086194, 0)
TextBox_3.ClearTextOnFocus = false
TextBox_3.Font = Enum.Font.Unknown
TextBox_3.MultiLine = true
TextBox_3.PlaceholderText = "Enter notes here..."
TextBox_3.Text = ""
TextBox_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_3.TextSize = 14.000
TextBox_3.TextWrapped = true
TextBox_3.TextXAlignment = Enum.TextXAlignment.Left
TextBox_3.TextYAlignment = Enum.TextYAlignment.Top

Settings_2.Name = "Settings"
Settings_2.Parent = Tabs
Settings_2.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Settings_2.BackgroundTransparency = 0.500
Settings_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings_2.BorderSizePixel = 0
Settings_2.Position = UDim2.new(0.166637972, 0, 0.00204583909, 0)
Settings_2.Size = UDim2.new(0.833363056, 0, 0.997953951, 0)
Settings_2.Visible = false

Header_3.Name = "Header"
Header_3.Parent = Settings_2
Header_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Header_3.BackgroundTransparency = 1.000
Header_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Header_3.BorderSizePixel = 0
Header_3.Position = UDim2.new(0.261659473, 0, 5.51041978e-07, 0)
Header_3.Size = UDim2.new(0.475500792, 0, 0.246118113, 0)
Header_3.Font = Enum.Font.SourceSansBold
Header_3.Text = "Settings"
Header_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Header_3.TextScaled = true
Header_3.TextSize = 14.000
Header_3.TextWrapped = true

Buttons.Name = "Buttons"
Buttons.Parent = Settings_2

Panic.Name = "Panic"
Panic.Parent = Buttons
Panic.BackgroundColor3 = Color3.fromRGB(83, 83, 83)
Panic.BorderColor3 = Color3.fromRGB(255, 255, 255)
Panic.BorderSizePixel = 0
Panic.Position = UDim2.new(0.0712939799, 0, 0.283873349, 0)
Panic.Size = UDim2.new(0.188750252, 0, 0.125795081, 0)
Panic.Font = Enum.Font.SourceSansBold
Panic.Text = "PANIC"
Panic.TextColor3 = Color3.fromRGB(255, 255, 255)
Panic.TextScaled = true
Panic.TextSize = 14.000
Panic.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Panic.TextWrapped = true

UIGradient_44.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_44.Rotation = 90
UIGradient_44.Parent = Panic

DiscordLink.Name = "DiscordLink"
DiscordLink.Parent = Buttons
DiscordLink.BackgroundColor3 = Color3.fromRGB(83, 83, 83)
DiscordLink.BorderColor3 = Color3.fromRGB(255, 255, 255)
DiscordLink.BorderSizePixel = 0
DiscordLink.Position = UDim2.new(0.0712939799, 0, 0.485074818, 0)
DiscordLink.Size = UDim2.new(0.188999996, 0, 0.126000002, 0)
DiscordLink.Font = Enum.Font.SourceSansBold
DiscordLink.Text = "Discord Link"
DiscordLink.TextColor3 = Color3.fromRGB(255, 255, 255)
DiscordLink.TextScaled = true
DiscordLink.TextSize = 14.000
DiscordLink.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
DiscordLink.TextWrapped = true

UIGradient_45.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_45.Rotation = 90
UIGradient_45.Parent = DiscordLink

Client.Name = "Client"
Client.Parent = Tabs
Client.Active = true
Client.AnchorPoint = Vector2.new(0.5, 0.5)
Client.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Client.BackgroundTransparency = 0.500
Client.BorderColor3 = Color3.fromRGB(0, 0, 0)
Client.BorderSizePixel = 0
Client.Position = UDim2.new(0.584427536, 0, 0.50102365, 0)
Client.Size = UDim2.new(0.831145883, 0, 0.997952759, 0)
Client.Visible = false

DihButton.Name = "DihButton"
DihButton.Parent = Client
DihButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
DihButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
DihButton.BorderSizePixel = 0
DihButton.Position = UDim2.new(0.0412894562, 0, 0.088097021, 0)
DihButton.Size = UDim2.new(0.149865806, 0, 0.0529504605, 0)
DihButton.Font = Enum.Font.SourceSansBold
DihButton.Text = "big thing"
DihButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DihButton.TextScaled = true
DihButton.TextSize = 14.000
DihButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
DihButton.TextWrapped = true

UIGradient_46.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_46.Rotation = 90
UIGradient_46.Parent = DihButton

TextLabel_2.Parent = Client
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(-0.00266608456, 0, 9.44643944e-07, 0)
TextLabel_2.Size = UDim2.new(0.219352901, 0, 0.070451431, 0)
TextLabel_2.Font = Enum.Font.SourceSansBold
TextLabel_2.Text = "Client"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

RainbowSkinButton.Name = "RainbowSkinButton"
RainbowSkinButton.Parent = Client
RainbowSkinButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
RainbowSkinButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
RainbowSkinButton.BorderSizePixel = 0
RainbowSkinButton.Position = UDim2.new(0.219057068, 0, 0.088097021, 0)
RainbowSkinButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
RainbowSkinButton.Font = Enum.Font.SourceSansBold
RainbowSkinButton.Text = "Rainbow Skin"
RainbowSkinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RainbowSkinButton.TextScaled = true
RainbowSkinButton.TextSize = 14.000
RainbowSkinButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
RainbowSkinButton.TextWrapped = true

UIGradient_47.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_47.Rotation = 90
UIGradient_47.Parent = RainbowSkinButton

FartButton.Name = "FartButton"
FartButton.Parent = Client
FartButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
FartButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
FartButton.BorderSizePixel = 0
FartButton.Position = UDim2.new(0.39208433, 0, 0.088097021, 0)
FartButton.Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
FartButton.Font = Enum.Font.SourceSansBold
FartButton.Text = "Fart"
FartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FartButton.TextScaled = true
FartButton.TextSize = 14.000
FartButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
FartButton.TextWrapped = true

UIGradient_48.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_48.Rotation = 90
UIGradient_48.Parent = FartButton

NightButton.Name = "NightButton"
NightButton.Parent = Client
NightButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
NightButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
NightButton.BorderSizePixel = 0
NightButton.Position = UDim2.new(0.558211863, 0, 0.088097021, 0)
NightButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
NightButton.Font = Enum.Font.SourceSansBold
NightButton.Text = "Night"
NightButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NightButton.TextScaled = true
NightButton.TextSize = 14.000
NightButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
NightButton.TextWrapped = true

UIGradient_49.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_49.Rotation = 90
UIGradient_49.Parent = NightButton

DayButton.Name = "DayButton"
DayButton.Parent = Client
DayButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
DayButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
DayButton.BorderSizePixel = 0
DayButton.Position = UDim2.new(0.723243356, 0, 0.0872257426, 0)
DayButton.Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
DayButton.Font = Enum.Font.SourceSansBold
DayButton.Text = "Day"
DayButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DayButton.TextScaled = true
DayButton.TextSize = 14.000
DayButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
DayButton.TextWrapped = true

UIGradient_50.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_50.Rotation = 90
UIGradient_50.Parent = DayButton

RemoveFogButton.Name = "RemoveFogButton"
RemoveFogButton.Parent = Client
RemoveFogButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
RemoveFogButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
RemoveFogButton.BorderSizePixel = 0
RemoveFogButton.Position = UDim2.new(0.0412891731, 0, 0.174044579, 0)
RemoveFogButton.Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
RemoveFogButton.Font = Enum.Font.SourceSansBold
RemoveFogButton.Text = "Remove Fog"
RemoveFogButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RemoveFogButton.TextScaled = true
RemoveFogButton.TextSize = 14.000
RemoveFogButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
RemoveFogButton.TextWrapped = true

UIGradient_51.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_51.Rotation = 90
UIGradient_51.Parent = RemoveFogButton

ClickToDeleteButton.Name = "ClickToDeleteButton"
ClickToDeleteButton.Parent = Client
ClickToDeleteButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ClickToDeleteButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
ClickToDeleteButton.BorderSizePixel = 0
ClickToDeleteButton.Position = UDim2.new(0.215189666, 0, 0.173396572, 0)
ClickToDeleteButton.Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
ClickToDeleteButton.Font = Enum.Font.SourceSansBold
ClickToDeleteButton.Text = "Click To Delete"
ClickToDeleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClickToDeleteButton.TextScaled = true
ClickToDeleteButton.TextSize = 14.000
ClickToDeleteButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ClickToDeleteButton.TextWrapped = true

UIGradient_52.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_52.Rotation = 90
UIGradient_52.Parent = ClickToDeleteButton

ClickToCollisionButton.Name = "ClickToCollisionButton"
ClickToCollisionButton.Parent = Client
ClickToCollisionButton.BackgroundColor3 = Color3.fromRGB(67, 19, 83)
ClickToCollisionButton.BorderColor3 = Color3.fromRGB(255, 255, 255)
ClickToCollisionButton.BorderSizePixel = 0
ClickToCollisionButton.Position = UDim2.new(0.391408831, 0, 0.174405143, 0)
ClickToCollisionButton.Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
ClickToCollisionButton.Font = Enum.Font.SourceSansBold
ClickToCollisionButton.Text = "Click To Disable Collision"
ClickToCollisionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClickToCollisionButton.TextScaled = true
ClickToCollisionButton.TextSize = 14.000
ClickToCollisionButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
ClickToCollisionButton.TextWrapped = true

UIGradient_53.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(232, 232, 232)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(148, 148, 148))}
UIGradient_53.Rotation = 90
UIGradient_53.Parent = ClickToCollisionButton

TextBoxs.Name = "TextBoxs"
TextBoxs.Parent = VexFrame

TextBoxFrame.Name = "TextBoxFrame"
TextBoxFrame.Parent = TextBoxs
TextBoxFrame.AnchorPoint = Vector2.new(0.5, 0.5)
TextBoxFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextBoxFrame.BackgroundTransparency = 0.600
TextBoxFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBoxFrame.BorderSizePixel = 0
TextBoxFrame.Position = UDim2.new(0.499621004, 0, 0.459462166, 0)
TextBoxFrame.Size = UDim2.new(0.609928966, 0, 0.690533459, 0)
TextBoxFrame.Visible = false

TypeBelow.Name = "TypeBelow"
TypeBelow.Parent = TextBoxFrame
TypeBelow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow.BackgroundTransparency = 1.000
TypeBelow.BorderColor3 = Color3.fromRGB(0, 0, 0)
TypeBelow.BorderSizePixel = 0
TypeBelow.Position = UDim2.new(-0.00174555229, 0, 0.032015983, 0)
TypeBelow.Size = UDim2.new(0.999999702, 0, 0.321897537, 0)
TypeBelow.Font = Enum.Font.SourceSansBold
TypeBelow.Text = "Type Below"
TypeBelow.TextColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow.TextScaled = true
TypeBelow.TextSize = 14.000
TypeBelow.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow.TextWrapped = true

TextBox_4.Parent = TextBoxFrame
TextBox_4.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
TextBox_4.BackgroundTransparency = 0.200
TextBox_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox_4.BorderSizePixel = 0
TextBox_4.Position = UDim2.new(0.0783952028, 0, 0.410903394, 0)
TextBox_4.Size = UDim2.new(0.840407431, 0, 0.471531719, 0)
TextBox_4.Font = Enum.Font.SourceSansBold
TextBox_4.PlaceholderText = "(Click off or press enter to close.)"
TextBox_4.Text = ""
TextBox_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_4.TextScaled = true
TextBox_4.TextSize = 14.000
TextBox_4.TextWrapped = true

IntTextBoxFrame.Name = "IntTextBoxFrame"
IntTextBoxFrame.Parent = TextBoxs
IntTextBoxFrame.AnchorPoint = Vector2.new(0.5, 0.5)
IntTextBoxFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
IntTextBoxFrame.BackgroundTransparency = 0.600
IntTextBoxFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
IntTextBoxFrame.BorderSizePixel = 0
IntTextBoxFrame.Position = UDim2.new(0.499621004, 0, 0.459462166, 0)
IntTextBoxFrame.Size = UDim2.new(0.609928966, 0, 0.690533459, 0)
IntTextBoxFrame.Visible = false

TypeBelow_2.Name = "TypeBelow"
TypeBelow_2.Parent = IntTextBoxFrame
TypeBelow_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow_2.BackgroundTransparency = 1.000
TypeBelow_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TypeBelow_2.BorderSizePixel = 0
TypeBelow_2.Position = UDim2.new(-0.00174555229, 0, 0.032015983, 0)
TypeBelow_2.Size = UDim2.new(0.999999702, 0, 0.321897537, 0)
TypeBelow_2.Font = Enum.Font.SourceSansBold
TypeBelow_2.Text = "Type Below"
TypeBelow_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow_2.TextScaled = true
TypeBelow_2.TextSize = 14.000
TypeBelow_2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TypeBelow_2.TextWrapped = true

TextBox_5.Parent = IntTextBoxFrame
TextBox_5.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
TextBox_5.BackgroundTransparency = 0.200
TextBox_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox_5.BorderSizePixel = 0
TextBox_5.Position = UDim2.new(0.0783952028, 0, 0.410903394, 0)
TextBox_5.Size = UDim2.new(0.840407431, 0, 0.471531719, 0)
TextBox_5.Font = Enum.Font.SourceSansBold
TextBox_5.PlaceholderColor3 = Color3.fromRGB(140, 140, 140)
TextBox_5.PlaceholderText = "Text"
TextBox_5.Text = ""
TextBox_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox_5.TextScaled = true
TextBox_5.TextSize = 14.000
TextBox_5.TextWrapped = true

Close_2.Name = "Close"
Close_2.Parent = IntTextBoxFrame
Close_2.BackgroundColor3 = Color3.fromRGB(84, 5, 5)
Close_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Close_2.BorderSizePixel = 0
Close_2.Position = UDim2.new(0.930211127, 0, 0, 0)
Close_2.Size = UDim2.new(0.069789052, 0, 0.115035973, 0)
Close_2.Font = Enum.Font.SourceSansBold
Close_2.Text = "X"
Close_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Close_2.TextSize = 25.000
Close_2.TextWrapped = true

Title.Name = "Title"
Title.Parent = Main
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.0591664016, 0, 0.973731339, 0)
Title.Size = UDim2.new(0.177207708, 0, -0.973730862, 0)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "VEXSPLOIT PANEL"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

UIGradient_54.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(38, 32, 42))}
UIGradient_54.Rotation = 90
UIGradient_54.Parent = Main

FPS.Name = "FPS"
FPS.Parent = Main
FPS.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FPS.BackgroundTransparency = 1.000
FPS.BorderColor3 = Color3.fromRGB(0, 0, 0)
FPS.BorderSizePixel = 0
FPS.Position = UDim2.new(0.894647121, 0, 0, 0)
FPS.Size = UDim2.new(0.105354942, 0, 0.973731399, 0)
FPS.Font = Enum.Font.SourceSansBold
FPS.Text = "FPS:"
FPS.TextColor3 = Color3.fromRGB(255, 255, 255)
FPS.TextScaled = true
FPS.TextSize = 14.000
FPS.TextWrapped = true

Logo.Name = "Logo"
Logo.Parent = VEXGUI
Logo.AnchorPoint = Vector2.new(0.5, 0.5)
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1.000
Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0.479643732, 0, 0.498773664, 0)
Logo.Size = UDim2.new(0.317999989, 1, 0.777018666, 1)
Logo.Visible = false
Logo.Image = "rbxassetid://101713159491693"

UICorner_8.CornerRadius = UDim.new(10, 10)
UICorner_8.Parent = Logo

ChatLog.Name = "ChatLog"
ChatLog.Parent = VEXGUI
ChatLog.BackgroundColor3 = Color3.fromRGB(155, 57, 235)
ChatLog.BackgroundTransparency = 0.300
ChatLog.BorderColor3 = Color3.fromRGB(0, 0, 0)
ChatLog.BorderSizePixel = 0
ChatLog.Position = UDim2.new(0.698281348, 0, 0.331900746, 0)
ChatLog.Size = UDim2.new(0.290848941, 0, 0.0324009843, 0)
ChatLog.Visible = false

UIGradient_55.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(180, 180, 180)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 0, 0))}
UIGradient_55.Rotation = 90
UIGradient_55.Parent = ChatLog

Text.Name = "Text"
Text.Parent = ChatLog

Chats.Name = "Chats"
Chats.Parent = Text

Other.Name = "Other"
Other.Parent = Text

Title_2.Name = "Title"
Title_2.Parent = Other
Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_2.BackgroundTransparency = 1.000
Title_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title_2.BorderSizePixel = 0
Title_2.Position = UDim2.new(-3.25434212e-06, 0, 0.053505946, 0)
Title_2.Size = UDim2.new(1.0000056, 0, 0.89564842, 0)
Title_2.Font = Enum.Font.SourceSansBold
Title_2.Text = "Chatlogs"
Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_2.TextScaled = true
Title_2.TextSize = 14.000
Title_2.TextWrapped = true

ScrollingMainFrame.Name = "ScrollingMainFrame"
ScrollingMainFrame.Parent = ChatLog
ScrollingMainFrame.Active = true
ScrollingMainFrame.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
ScrollingMainFrame.BackgroundTransparency = 0.500
ScrollingMainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingMainFrame.BorderSizePixel = 0
ScrollingMainFrame.Position = UDim2.new(-2.43823456e-06, 0, 1.00000143, 0)
ScrollingMainFrame.Size = UDim2.new(1.00000501, 0, 12.7847157, 0)
ScrollingMainFrame.ScrollBarThickness = 14

Template.Name = "Template"
Template.Parent = ChatLog

UserSent.Name = "UserSent"
UserSent.Parent = Template
UserSent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UserSent.BackgroundTransparency = 1.000
UserSent.BorderColor3 = Color3.fromRGB(0, 0, 0)
UserSent.BorderSizePixel = 0
UserSent.Position = UDim2.new(-7.80235041e-06, 0, 1.15994799, 0)
UserSent.Size = UDim2.new(0.243235663, 0, 1.09073603, 0)
UserSent.Visible = false
UserSent.Font = Enum.Font.SourceSansBold
UserSent.Text = "User:"
UserSent.TextColor3 = Color3.fromRGB(255, 255, 255)
UserSent.TextScaled = true
UserSent.TextSize = 14.000
UserSent.TextWrapped = true

MessageSent.Name = "MessageSent"
MessageSent.Parent = UserSent
MessageSent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MessageSent.BackgroundTransparency = 1.000
MessageSent.BorderColor3 = Color3.fromRGB(0, 0, 0)
MessageSent.BorderSizePixel = 0
MessageSent.Position = UDim2.new(0.860667288, 0, 0.241487265, 0)
MessageSent.Size = UDim2.new(3.25060368, 0, 1.8039788, 0)
MessageSent.Visible = false
MessageSent.Font = Enum.Font.SourceSans
MessageSent.Text = "Message"
MessageSent.TextColor3 = Color3.fromRGB(255, 255, 255)
MessageSent.TextScaled = true
MessageSent.TextSize = 14.000
MessageSent.TextWrapped = true

DeathText.Name = "DeathText"
DeathText.Parent = VEXGUI
DeathText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DeathText.BackgroundTransparency = 1.000
DeathText.BorderColor3 = Color3.fromRGB(0, 0, 0)
DeathText.BorderSizePixel = 0
DeathText.Position = UDim2.new(0.150310561, 0, 0.331316173, 0)
DeathText.Size = UDim2.new(0.698447227, 0, 0.256682366, 0)
DeathText.Visible = false
DeathText.Font = Enum.Font.SourceSansBold
DeathText.Text = "PLEASE STAND BY AS WE RE-EXECUTE"
DeathText.TextColor3 = Color3.fromRGB(255, 0, 0)
DeathText.TextScaled = true
DeathText.TextSize = 14.000
DeathText.TextWrapped = true

NotificationTop.Name = "NotificationTop"
NotificationTop.Parent = VEXGUI
NotificationTop.AnchorPoint = Vector2.new(0.5, 0.5)
NotificationTop.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
NotificationTop.BackgroundTransparency = 0.250
NotificationTop.BorderColor3 = Color3.fromRGB(0, 0, 0)
NotificationTop.BorderSizePixel = 0
NotificationTop.Position = UDim2.new(0.452454776, 0, 0.0529500768, 0)
NotificationTop.Size = UDim2.new(0.390584171, 0, 0.106051445, 0)
NotificationTop.Visible = false

UICorner_9.CornerRadius = UDim.new(0.0500000007, 8)
UICorner_9.Parent = NotificationTop

Text_2.Name = "Text"
Text_2.Parent = NotificationTop

Title_3.Name = "Title"
Title_3.Parent = Text_2
Title_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_3.BackgroundTransparency = 1.000
Title_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title_3.BorderSizePixel = 0
Title_3.Position = UDim2.new(-1.94240314e-07, 0, 0, 0)
Title_3.Size = UDim2.new(1.00000036, 0, 0.41369465, 0)
Title_3.Font = Enum.Font.SourceSansBold
Title_3.Text = "Title"
Title_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Title_3.TextScaled = true
Title_3.TextSize = 14.000
Title_3.TextWrapped = true

Text_3.Name = "Text"
Text_3.Parent = Text_2
Text_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text_3.BackgroundTransparency = 1.000
Text_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Text_3.BorderSizePixel = 0
Text_3.Position = UDim2.new(0.00372086745, 0, 0.41369465, 0)
Text_3.Size = UDim2.new(0.99627912, 0, 0.442367971, 0)
Text_3.Font = Enum.Font.SourceSans
Text_3.Text = "Text goes here."
Text_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Text_3.TextScaled = true
Text_3.TextSize = 14.000
Text_3.TextWrapped = true

GUI.Name = "GUI"
GUI.Parent = Text_2
GUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
GUI.BackgroundTransparency = 1.000
GUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
GUI.BorderSizePixel = 0
GUI.Position = UDim2.new(0.875707388, 0, 0.0998572856, 0)
GUI.Size = UDim2.new(0.0984314233, 0, 0.199857354, 0)
GUI.Font = Enum.Font.SourceSansBold
GUI.Text = "VEXsploit"
GUI.TextColor3 = Color3.fromRGB(255, 255, 255)
GUI.TextScaled = true
GUI.TextSize = 14.000
GUI.TextWrapped = true

UIGradient_56.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(178, 123, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(102, 58, 167))}
UIGradient_56.Parent = GUI

-- Module Scripts:

local fake_module_scripts = {}

do -- VexFrame.ButtonModule
	local script = Instance.new('ModuleScript', VexFrame)
	script.Name = "ButtonModule"
	local function module_script()
		local ButtonModule = {}
		
		function ButtonModule.ColorOn(Button)
			Button.BorderSizePixel = 2
		end
		
		function ButtonModule.ColorOff(Button)
			Button.BorderSizePixel = 0
		end
		
		
		return ButtonModule
		
	end
	fake_module_scripts[script] = module_script
end
do -- VexFrame.TextBoxModule
	local script = Instance.new('ModuleScript', VexFrame)
	script.Name = "TextBoxModule"
	local function module_script()
		local TextBoxModule = {}
		local TextBoxFrame = script.Parent.TextBoxs.TextBoxFrame
		local TextBox = TextBoxFrame.TextBox
		
		local main = script.Parent.Parent.Parent.Main
		
		local intTextBoxframe = script.Parent.TextBoxs.IntTextBoxFrame
		local inttextbox = intTextBoxframe.TextBox
		
		local textBoxsFrame = script.Parent.TextBoxs
		
		-- Helper to set transparency of all elements in Main except TextBoxs
		local function setMainTransparency(transparency)
			for _, obj in pairs(main:GetDescendants()) do
				if not textBoxsFrame:IsAncestorOf(obj) then
					if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("Frame") then
						if obj:FindFirstChild("BackgroundTransparency") then
							obj.BackgroundTransparency = transparency
						end
						if obj:IsA("TextLabel") or obj:IsA("TextButton") then
							obj.TextTransparency = transparency
						end
					end
				end
			end
		end
		
		function TextBoxModule.SetProperty(object, propertyName)
			TextBoxFrame.Visible = true
			setMainTransparency(1)
		
			TextBox.FocusLost:Connect(function()
				TextBoxFrame.Visible = false
				local value = tonumber(TextBox.Text) or TextBox.Text
				object[propertyName] = value
				setMainTransparency(0)
			end)
		end
		local notificationmodule = require(script.Parent.NotificationModule)
		
		function TextBoxModule.IntSetProperty(object, propertyName)
			intTextBoxframe.Visible = true
			setMainTransparency(1)
			
			local Names = {"WalkSpeed", "JumpPower", "Gravity", "FieldOfView"}
			local OriginalValues = {"16", "50", "196.2", ""}
		
			for i, v in pairs(Names) do
				if propertyName == v then
					inttextbox.PlaceholderText = OriginalValues[i]
				end
			end
		
			inttextbox.FocusLost:Connect(function()
				intTextBoxframe.Visible = false
		
				local value = tonumber(inttextbox.Text)
				if value then
					object[propertyName] = value
				else
					warn("Invalid input: Must be a number.")
					notificationmodule.Notification("Warning", "Must be a number ‼️.", 3)
				end
		
				inttextbox.Text = ""
				setMainTransparency(0)
			end)
		
			intTextBoxframe.Close.MouseButton1Up:Connect(function()
				intTextBoxframe.Visible = false
				setMainTransparency(0)
			end)
		end
		
		return TextBoxModule
		
	end
	fake_module_scripts[script] = module_script
end
do -- VexFrame.NotificationModule
	local script = Instance.new('ModuleScript', VexFrame)
	script.Name = "NotificationModule"
	local function module_script()
		local NotificationModule = {}
		
		local guiNotificationFrame = script.Parent.Parent.Parent.NotificationTop
		local guiTitle = guiNotificationFrame.Text.Title
		local guiText = guiNotificationFrame.Text.Text
		
		
		local TweenService = game:GetService("TweenService")
		local ti = TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		
		local NotificationAudio
		
		function NotificationModule.Notification(Title, Text, Time)
			local MainIcon = "rbxassetid://6031071050" -- Replace with your actual icon ID
		
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = Title,
				Text = Text,
				Duration = Time or 5,
				Icon = MainIcon,
			})
		end
		
		
		function NotificationModule.GuiNotification(Title, Text, Duration)
			-- Clone the notification frame
			local clone = guiNotificationFrame:Clone()
			clone.Parent = guiNotificationFrame.Parent
			clone.Visible = false
		
			-- Set title and text
			clone.Text.Title.Text = Title
			clone.Text.Text.Text = Text
		
			-- Play notification sound
		
			-- Slide in
			clone.Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, -0.12, 0)
			clone.Visible = true
			TweenService:Create(clone, ti, {
				Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, 0.02, 0)
			}):Play()
			
			local NotificationAudio = Instance.new("Sound")
			NotificationAudio.SoundId = "rbxassetid://4590662766"
			NotificationAudio.Parent = workspace
			NotificationAudio:Play()
			game.Debris:AddItem(NotificationAudio, Duration + 0.5)
		
			-- Wait and slide out
			task.delay(Duration, function()
				TweenService:Create(clone, ti, {
					Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, -1.5, 0)
				}):Play()
		
				task.wait(0.5)
				clone:Destroy()
			end)
		end
		
		
		
		return NotificationModule
		
		
	end
	fake_module_scripts[script] = module_script
end


-- Scripts:

local function VGQDN_fake_script() -- Thanks.RGBLabelScript 
	local script = Instance.new('LocalScript', Thanks)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Button = script.Parent
	local CurrentColor = Color3.new(255, 0 , 0)
	
	function zigzag(X) return math.acos(math.cos(X*math.pi))/math.pi end
	
	counter = 0
	
	while wait(0.1)do
		script.Parent.TextColor3 = Color3.fromHSV(zigzag(counter),1,1)
	
		counter = counter + 0.05
	end
end
coroutine.wrap(VGQDN_fake_script)()
local function VUGM_fake_script() -- ChangeTheme.ThemeScript 
	local script = Instance.new('LocalScript', ChangeTheme)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local HttpService = game:GetService("HttpService")
	local FILE_NAME = "theme_color.json"
	
	local Colors = script.Parent.Colors
	local Frame = script.Parent.Parent.Parent.Parent.Parent.VexFrame
	local Main = Frame.Parent
	local textbox = script.Parent.CustomColor
	
	-- Darkens a Color3 by a given factor (e.g., 0.9 = 10% darker)
	local function darkenColor(color, factor)
		return Color3.new(
			math.clamp(color.R * factor, 0, 1),
			math.clamp(color.G * factor, 0, 1),
			math.clamp(color.B * factor, 0, 1)
		)
	end
	
	-- Saves the color to a local file
	local function saveColor(color)
		local data = {
			R = color.R,
			G = color.G,
			B = color.B
		}
		writefile(FILE_NAME, HttpService:JSONEncode(data))
	end
	
	-- Loads the color from the local file, or returns nil
	local function loadColor()
		if isfile(FILE_NAME) then
			local data = HttpService:JSONDecode(readfile(FILE_NAME))
			return Color3.new(data.R, data.G, data.B)
		end
		return nil
	end
	
	-- Applies the theme color to all target elements
	local function applyColorTheme(color)
		local darkerColor = darkenColor(color, 0.3)
		local darkerColor2 = darkenColor(color, 0.3)
	
		Frame.BackgroundColor3 = color
		Main.BackgroundColor3 = color
	
		for _, button in pairs(script.Parent.Parent.Parent.Parent.Tabs.VexButtons.ScrollingFrame:GetChildren()) do
			if button:IsA("TextButton") then
				button.BackgroundColor3 = darkerColor
			end
		end
	
		for _, button2 in pairs(script.Parent.Parent.Parent.General:GetChildren()) do
			if button2:IsA("TextButton") then
				button2.BackgroundColor3 = darkerColor2
			end
		end
		
		for _ ,button3 in pairs(script.Parent.Parent.Parent.Settings.Buttons:GetChildren()) do
			if button3:IsA("TextButton") then
				button3.BackgroundColor3 = darkerColor2
			end
		end
		
		for _ ,button4 in pairs(script.Parent.Parent.Parent.Client:GetChildren()) do
			if button4:IsA("TextButton") then
				button4.BackgroundColor3 = darkerColor2
			end
		end
	
		for _, textbox in pairs(script.Parent.Parent.Parent.Parent.TextBoxs:GetChildren()) do
			if textbox:IsA("Frame") then
				textbox.BackgroundColor3 = color
			end
		end
	
		script.Parent.Parent.Parent.Parent.Parent.Parent.ChatLog.BackgroundColor3 = color
		script.Parent.Parent.Parent.Teleport.ImageLabel.BackgroundColor3 = darkerColor2
	end
	
	-- Handle color buttons
	for _, v in pairs(Colors:GetChildren()) do
		if v:IsA("TextButton") then
			v.MouseButton1Up:Connect(function()
				local originalColor = v.BackgroundColor3
				applyColorTheme(originalColor)
				saveColor(originalColor)
			end)
		end
	end
	
	-- Handle custom RGB input
	textbox.FocusLost:Connect(function()
		local text = textbox.Text:gsub("[()%[%]{}]", "") -- remove any brackets
		local r, g, b = text:match("^(%d+),%s*(%d+),%s*(%d+)$")
		r, g, b = tonumber(r), tonumber(g), tonumber(b)
	
		if r and g and b and r <= 255 and g <= 255 and b <= 255 then
			local color = Color3.fromRGB(r, g, b)
			applyColorTheme(color)
			saveColor(color)
			textbox.Text = string.format("%d,%d,%d is your theme color", r, g, b)
		else
			warn("Invalid RGB input. Please enter in the format: 255,0,0")
		end
	end)
	
	-- Load saved color on startup
	local savedColor = loadColor()
	if savedColor then
		applyColorTheme(savedColor)
	end
	
end
coroutine.wrap(VUGM_fake_script)()
local function TZVFRNY_fake_script() -- Tabs.TextHandler 
	local script = Instance.new('LocalScript', Tabs)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Players = game:GetService("Players")
	local Player = game.Players.LocalPlayer
	local char = Player.Character or Player.CharacterAdded:Wait()  -- Wait for the character to fully load
	
	local image = script.Parent.Home.PlayerImage
	
	-- Load player thumbnail
	local content = Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size150x150)
	image.Image = content
	
	local NotificationModule = require(script.Parent.Parent.NotificationModule)
	
	local accage = Player.AccountAge
	local id = Player.UserId
	local username = char.Name
	
	local info = script.Parent.Home.Info
	local ts = game:GetService("TweenService")
	
	info.PlrName.Text = "Welcome "..username.."!"
	info.AccAge.Text = "Your account age is "..accage.." Days old"
	info.plrid.Text = "USER ID "..id
	
	local charLoaded = false
	local ti = TweenInfo.new(3, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
	
	local nocc = false
	
	-- Wait for the character to load properly
	while not charLoaded do
		wait()
	
		script.Parent.Parent.Parent.Parent.Main.Visible = false
		for _, v in pairs(script.Parent.Parent.Parent.Parent.Main.VexFrame:WaitForChild("Tabs"):GetChildren()) do
			if v:IsA("Frame") then
				if v.Name ~= "Home" then
					v.Visible = false
				else
					v.Visible = true
				end
			end
		end
	
		for _, v in pairs(script.Parent.Parent.Parent.Parent.Main.VexFrame:WaitForChild("Tabs"):GetChildren()) do
			if v:IsA("ScrollingFrame") then
				if v.Name ~= "Home" then
					v.Visible = false
				end
			end
		end
	
		script.Parent.Parent.Parent.Parent:WaitForChild("Logo").ImageTransparency = 0
	
		local lighting = game:GetService("Lighting")
		local cc = lighting:FindFirstChild("ColorCorrection")
		if cc then
			origColor = cc.TintColor
			cc.TintColor = Color3.new(0, 0, 0)
		else
			nocc = true
			cc = Instance.new("ColorCorrectionEffect")
			cc.Name = "ColorCorrection"
			cc.TintColor = Color3.new(0, 0, 0)
			cc.Parent = lighting
			origColor = Color3.new(1, 1, 1)
		end
	
		-- Check if character exists
		if char then
			-- Handle the removal of ColorCorrectionEffect after 3 seconds
			if nocc == true then
				game.Debris:AddItem(cc, 3)
			end
	
			-- Tween the Logo transparency
			ts:Create(script.Parent.Parent.Parent.Parent.Logo, ti, {ImageTransparency = 1}):Play()
			wait(3)
	
			-- Show main UI again
			script.Parent.Parent.Parent.Parent.Main.Visible = true
			NotificationModule.GuiNotification("Welcome!", "Thanks for using VexSploit", 3)
	
			-- Restore ColorCorrectionEffect tint
			ts:Create(cc, ti, {TintColor = origColor}):Play()
	
			-- Mark character as fully loaded
			charLoaded = true
		end
	end
	
end
coroutine.wrap(TZVFRNY_fake_script)()
local function QJPFZI_fake_script() -- enterButton.SpectateScript 
	local script = Instance.new('LocalScript', enterButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local textbox = button.Parent.TextBox
	local player = game.Players.LocalPlayer
	local cam = workspace.CurrentCamera
	local rs = game:GetService("RunService")
	local resetbutton = button.Parent.resetButton
	local TextChatService = game:GetService("TextChatService")
	local followTarget = nil
	
	-- Custom system message function with rich text styling
	local function sendSystemMessage(msg)
		local prefix = "<b><font color='#0073FF'>[SPECTATE]</font></b>" -- Bold + Blue
		local errorMessage = string.format("<font color='#FF0000'>⚠️ %s ⚠️</font>", msg) -- Red error text
		TextChatService.TextChannels.RBXGeneral:DisplaySystemMessage(prefix .. " " .. errorMessage)
	end
	
	-- Function to find a matching player (partial + case-insensitive)
	local function findMatchingPlayer(partialName)
		local matches = {}
		local lowerInput = string.lower(partialName)
	
		for _, plr in pairs(game.Players:GetPlayers()) do
			if string.sub(string.lower(plr.Name), 1, #lowerInput) == lowerInput then
				table.insert(matches, plr)
			end
		end
	
		-- Send error message based on the number of matches
		if #matches == 1 then
			return matches[1]  -- Single match, return it
		elseif #matches > 1 then
			sendSystemMessage("Error: " .. #matches .. " targets found")  -- Multiple matches, error
		elseif #matches == 0 then
			sendSystemMessage("Error: No target found")  -- No matches, error
		end
	
		return nil
	end
	
	-- Spectate camera update loop
	local function updateCamera()
		while followTarget do
			if followTarget.Character and followTarget.Character:FindFirstChild("HumanoidRootPart") then
				cam.CameraSubject = followTarget.Character:FindFirstChild("Humanoid")
			end
			rs.RenderStepped:Wait()
		end
	end
	
	-- Button click: try to find a valid player and follow
	button.MouseButton1Up:Connect(function()
		local inputText = textbox.Text
		if inputText == "" or inputText:match("^%s*$") then -- Check for empty or whitespace-only input
			sendSystemMessage("Error: No target entered")
			return
		end
	
		local targetPlayer = findMatchingPlayer(inputText)
		if targetPlayer then
			followTarget = targetPlayer
			updateCamera()
		end
	end)
	
	-- Reset button: stop following and return camera to self
	resetbutton.MouseButton1Up:Connect(function()
		followTarget = nil
		cam.CameraType = Enum.CameraType.Custom
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			cam.CameraSubject = player.Character.Humanoid
			cam.CFrame = player.Character.HumanoidRootPart.CFrame
		end
	end)
	
end
coroutine.wrap(QJPFZI_fake_script)()
local function JQAMOX_fake_script() -- teleportenter.TeleportScript 
	local script = Instance.new('LocalScript', teleportenter)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local textbox = button.Parent.TextBox
	local image = script.Parent.Parent.ImageLabel
	local player = game.Players.LocalPlayer
	local TextChatService = game:GetService("TextChatService")
	local Players = game:GetService("Players")
	
	-- System message with TELEPORT tag
	local function sendSystemMessage(msg)
		local prefix = "<b><font color='#9A33A4'>[TELEPORT]</font></b>"
		local warningMessage = string.format("<font color='#FF0000'>⚠️ %s ⚠️</font>", msg)
		TextChatService.TextChannels.RBXGeneral:DisplaySystemMessage(prefix .. " " .. warningMessage)
	end
	
	-- Find model by partial name in Workspace
	local function findMatchingTarget(partialName)
		local matches = {}
		local lowerInput = string.lower(partialName)
	
		for _, obj in pairs(workspace:GetChildren()) do
			if obj:IsA("Model") and string.sub(string.lower(obj.Name), 1, #lowerInput) == lowerInput then
				table.insert(matches, obj)
			end
		end
	
		if #matches == 1 then
			return matches[1]
		elseif #matches > 1 then
			sendSystemMessage("Error: " .. #matches .. " targets found")
		elseif #matches == 0 then
			sendSystemMessage("Error: No target found")
		end
	
		return nil
	end
	
	-- Try to find a player by partial name (case-insensitive)
	local function findPlayerByName(partialName)
		local lowerInput = string.lower(partialName)
	
		for _, plr in pairs(Players:GetPlayers()) do
			if string.sub(string.lower(plr.Name), 1, #lowerInput) == lowerInput then
				return plr
			end
		end
	
		return nil
	end
	
	-- Teleport and display thumbnail
	button.MouseButton1Up:Connect(function()
		local targetName = textbox.Text
	
		if not targetName or targetName:match("^%s*$") then
			sendSystemMessage("Error: No target entered")
			return
		end
	
		local target = findMatchingTarget(targetName)
		if not target then return end
	
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:FindFirstChild("HumanoidRootPart")
		local targetRoot = target:FindFirstChild("HumanoidRootPart")
	
		if root and targetRoot then
			root.CFrame = targetRoot.CFrame + Vector3.new(0, 5, 0)
	
			-- Update image if it's a player
			local targetPlayer = findPlayerByName(target.Name)
			if targetPlayer then
				local success, content = pcall(function()
					return Players:GetUserThumbnailAsync(
						targetPlayer.UserId,
						Enum.ThumbnailType.HeadShot,
						Enum.ThumbnailSize.Size150x150
					)
				end)
				if success then
					image.Image = content
				else
					warn("Thumbnail failed:", content)
				end
			else
				image.Image = "" -- Clear image if target is not a player
			end
		end
	end)
	
end
coroutine.wrap(JQAMOX_fake_script)()
local function ZQFOF_fake_script() -- FlingButton.FlingScript 
	local script = Instance.new('LocalScript', FlingButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game.Players.LocalPlayer
	local button = script.Parent
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local NotificationModule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local toggle = false
	local spinSpeed = 10000
	local spinningCoroutine = nil
	local touchConnections = {}
	
	-- FLING FUNCTION
	local function onPartTouched(otherPart)
		if not toggle then return end
	
		local char = plr.Character
		if not char then return end
	
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
		if not humrootpart then return end
	
		local otherChar = otherPart:FindFirstAncestorOfClass("Model")
		if otherChar and otherChar ~= char and otherChar:FindFirstChild("Humanoid") then
			local otherHumRoot = otherChar:FindFirstChild("HumanoidRootPart")
			if otherHumRoot then
				local direction = (otherHumRoot.Position - humrootpart.Position).Unit
				otherHumRoot.Velocity = direction * 10000
			end
		end
	end
	
	-- GET BODY PARTS
	local function getBodyParts(character)
		local bodyParts = {}
		local names = {}
	
		if character:FindFirstChild("Torso") then
			names = {"Head", "Torso", "LeftLeg", "RightLeg", "LeftArm", "RightArm"}
		elseif character:FindFirstChild("UpperTorso") then
			names = {
				"LeftFoot", "LeftHand", "LeftLowerArm", "LeftLowerLeg",
				"LeftUpperArm", "LeftUpperLeg", "UpperTorso",
				"RightFoot", "RightHand", "RightLowerArm", "RightLowerLeg",
				"RightUpperArm", "RightUpperLeg"
			}
		end
	
		for _, name in ipairs(names) do
			local part = character:FindFirstChild(name)
			if part then
				table.insert(bodyParts, part)
			end
		end
	
		return bodyParts
	end
	
	-- SPIN LOOP
	local function spinCharacter(humrootpart)
		while toggle and humrootpart and humrootpart.Parent do
			humrootpart.AssemblyAngularVelocity = Vector3.new(0, spinSpeed, 0)
			task.wait(0.1)
		end
	
		if humrootpart then
			humrootpart.AssemblyAngularVelocity = Vector3.zero
			humrootpart.RotVelocity = Vector3.zero
		end
	end
	
	-- APPLY TO CHARACTER
	local function setupCharacter(character)
		-- Disconnect previous
		for _, conn in pairs(touchConnections) do
			conn:Disconnect()
		end
		touchConnections = {}
	
		local humrootpart = character:WaitForChild("HumanoidRootPart")
		local bodyParts = getBodyParts(character)
	
		for _, part in ipairs(bodyParts) do
			local conn = part.Touched:Connect(onPartTouched)
			table.insert(touchConnections, conn)
		end
	
		if toggle then
			humrootpart.CanCollide = true
			humrootpart.CFrame = humrootpart.CFrame * CFrame.new(0, 0.5, 0)
			spinningCoroutine = coroutine.create(function()
				spinCharacter(humrootpart)
			end)
			coroutine.resume(spinningCoroutine)
		end
	end
	
	-- BUTTON TOGGLE
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		local char = plr.Character
		if not char then return end
	
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
		if not humrootpart then return end
	
		if toggle then
			humrootpart.CanCollide = true
			humrootpart.CFrame = humrootpart.CFrame * CFrame.new(0, 0.5, 0)
			spinningCoroutine = coroutine.create(function()
				spinCharacter(humrootpart)
			end)
			coroutine.resume(spinningCoroutine)
			buttonmodule.ColorOn(button)
			NotificationModule.Notification("Fling", "DONT USE SHIFTLOCK OR SIT!!!", 3)
		else
			humrootpart.CanCollide = false
			humrootpart.AssemblyAngularVelocity = Vector3.zero
			humrootpart.RotVelocity = Vector3.zero
			buttonmodule.ColorOff(button)
		end
	end)
	
	-- INITIAL SETUP
	if plr.Character then
		setupCharacter(plr.Character)
	end
	
	-- ON RESPAWN
	plr.CharacterAdded:Connect(setupCharacter)
	
end
coroutine.wrap(ZQFOF_fake_script)()
local function VWSBDSS_fake_script() -- SpazButton.SpazScript 
	local script = Instance.new('LocalScript', SpazButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local character = plr.Character or plr.CharacterAdded:Wait()
	local humrootpart = character:WaitForChild("HumanoidRootPart")
	
	local seizureCoroutine = nil
	
	-- Update reference when character resets
	plr.CharacterAdded:Connect(function(newChar)
		character = newChar
		humrootpart = newChar:WaitForChild("HumanoidRootPart")
	end)
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
	
			seizureCoroutine = coroutine.create(function()
				while toggle do
					local jitter = Vector3.new(
						math.random(-1, 1),
						math.random(-1, 1),
						math.random(-1, 1)
					) * 0.2
	
					local rotation = CFrame.Angles(
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15))
					)
	
					if humrootpart then
						humrootpart.CFrame = humrootpart.CFrame + jitter
						humrootpart.CFrame = humrootpart.CFrame * rotation
					end
	
					task.wait(0.05)
				end
			end)
	
			coroutine.resume(seizureCoroutine)
		else
			buttonmodule.ColorOff(button)
		end
	end)
	
end
coroutine.wrap(VWSBDSS_fake_script)()
local function VLKGV_fake_script() -- FreezeButton.FreezeScript 
	local script = Instance.new('LocalScript', FreezeButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()  -- Ensure the character is loaded
	
	-- Function to safely get HumanoidRootPart
	local function getHumanoidRootPart()
		return char:FindFirstChild("HumanoidRootPart")
	end
	
	local function onCharacterAdded()
		char = plr.Character or plr.CharacterAdded:Wait()
	
		-- Wait for HumanoidRootPart to load on respawn
		local humrootpart = getHumanoidRootPart()
		while not humrootpart do
			humrootpart = getHumanoidRootPart()
			wait(0.1)
		end
	end
	
	-- Listen for respawn event and rebind HumanoidRootPart
	plr.CharacterAdded:Connect(onCharacterAdded)
	
	button.MouseButton1Up:Connect(function()
		local humrootpart = getHumanoidRootPart()
	
		-- Ensure HumanoidRootPart exists before toggling
		if humrootpart then
			humrootpart.Anchored = not humrootpart.Anchored
		else
			print("HumanoidRootPart not found!")
			return
		end
	
		-- Handle the toggle logic for the button color and notification
		if toggle == false then
			buttonmodule.ColorOn(button)
			notifmodule.Notification("Warning", "May break w/ Fake Lag ⚠️!", 3)
		else
			buttonmodule.ColorOff(button)
		end
		toggle = not toggle
	end)
	
end
coroutine.wrap(VLKGV_fake_script)()
local function ZMTVO_fake_script() -- XRayButton.XRayScript 
	local script = Instance.new('LocalScript', XRayButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local button = script.Parent
	local toggle = false
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	button.MouseButton1Up:Connect(function()
		-- Toggle the state
		toggle = not toggle
	
		-- Fix button color logic
		if toggle then
			buttonmodule.ColorOn(script.Parent)
		else
			buttonmodule.ColorOff(script.Parent)
		end
	
		-- Get the updated character
		local character = getCharacter()
	
		-- Ensure we are excluding the player's HumanoidRootPart from transparency changes
		for _, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Model") and v.Name ~= player.Name then  -- Exclude player's model
				for _, part in pairs(v:GetChildren()) do
					if part:IsA("BasePart") then
						-- Adjust transparency of models in the workspace
						part.Transparency = toggle and 0.5 or 0
					end
				end
			elseif v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then  -- Exclude HumanoidRootPart
				-- Adjust transparency of parts in the workspace
				v.Transparency = toggle and 0.5 or 0
			end
		end
	
		-- Handle the transparency of the player's HumanoidRootPart separately if needed
		local humRootPart = character:FindFirstChild("HumanoidRootPart")
		if humRootPart then
			-- Don't modify the HumanoidRootPart transparency
			humRootPart.Transparency = 1  -- Set transparency as needed, or skip this step if not necessary
		end
	end)
	
end
coroutine.wrap(ZMTVO_fake_script)()
local function PQRLX_fake_script() -- JumpPowerButton.JumpPowerScript 
	local script = Instance.new('LocalScript', JumpPowerButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	
	-- Wait for necessary parts
	local function getHumanoid()
		return character:WaitForChild("Humanoid")
	end
	
	local function getHumanoidRootPart()
		return character:WaitForChild("HumanoidRootPart")
	end
	
	local humanoid = getHumanoid()
	local humRootPart = getHumanoidRootPart()
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	btn.MouseButton1Up:Connect(function()
		-- Toggle the effect of jump power
		toggle = not toggle
	
		if toggle then
			humanoid.UseJumpPower = true
			textboxmodule.IntSetProperty(humanoid, "JumpPower")
		else
			humanoid.UseJumpPower = false
		end
	end)
	
	-- Handle character respawn (in case character resets)
	player.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		humanoid = getHumanoid()
		humRootPart = getHumanoidRootPart()
	end)
	
end
coroutine.wrap(PQRLX_fake_script)()
local function IUYN_fake_script() -- WalkSpeedButton.WalkspeedScript 
	local script = Instance.new('LocalScript', WalkSpeedButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	-- Function to handle button click and update walk speed
	local function handleButtonClick()
		local character = getCharacter()  -- Always get the current character
		local humanoid = character:WaitForChild("Humanoid")
	
		-- Call the module function to set walk speed
		textboxmodule.IntSetProperty(humanoid, "WalkSpeed")
	end
	
	btn.MouseButton1Up:Connect(function()
		handleButtonClick()
	end)
	
	-- Listen for respawn event to update character and ensure functionality
	player.CharacterAdded:Connect(function()
		-- You might need to reset the state or rebind certain properties here if needed
	end)
	
end
coroutine.wrap(IUYN_fake_script)()
local function JCZXY_fake_script() -- ToggleTexturesButton.TexturesButton 
	local script = Instance.new('LocalScript', ToggleTexturesButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Button = script.Parent
	local toggleState = false -- false = visible, true = hidden
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Store original transparency so we can restore it
	local cachedAssets = {}
	
	local function setDecalsAndTexturesVisibility(visible)
		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("Decal") or obj:IsA("Texture") then
				-- Cache the original transparency if not already done
				if cachedAssets[obj] == nil then
					cachedAssets[obj] = obj.Transparency
				end
	
				-- Set transparency: 0 = visible, 1 = invisible
				obj.Transparency = visible and cachedAssets[obj] or 1
			end
		end
	end
	
	-- Function to re-apply state after the character respawns
	local function resetVisibilityOnRespawn()
		local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
		character:WaitForChild("HumanoidRootPart") -- Ensures the character has respawned
		setDecalsAndTexturesVisibility(not toggleState) -- reapply the visibility state
	end
	
	-- Listen for player respawn to reset the visibility correctly
	game.Players.LocalPlayer.CharacterAdded:Connect(resetVisibilityOnRespawn)
	
	Button.MouseButton1Click:Connect(function()
		toggleState = not toggleState
		setDecalsAndTexturesVisibility(not toggleState) -- true = show, false = hide
	
		if toggleState then
			buttonmodule.ColorOn(Button)
		else
			buttonmodule.ColorOff(Button)
		end
	end)
	
end
coroutine.wrap(JCZXY_fake_script)()
local function TRRD_fake_script() -- InfJump.InfJumpScript 
	local script = Instance.new('LocalScript', InfJump)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local userInputService = game:GetService("UserInputService")
	local toggle = false
	local jumpConnection -- Variable to store the connection
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Function to handle the jump logic
	local function onJumpRequest(input)
		-- Ensure the character is properly loaded before attempting to access Humanoid
		local humanoid = character:FindFirstChild("Humanoid")
		if toggle and input.KeyCode == Enum.KeyCode.Space and humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
	
	-- Handles toggling the button color and the toggle state
	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then
			toggle = true
			buttonmodule.ColorOn(script.Parent)
			jumpConnection = userInputService.InputBegan:Connect(onJumpRequest)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)
			if jumpConnection then
				jumpConnection:Disconnect() 
			end
		end
	end)
	
	-- Reconnect when the character respawns
	player.CharacterAdded:Connect(function(newCharacter)
		-- Update the character reference
		character = newCharacter
	
		-- If toggle is on, reconnect the jump connection
		if toggle then
			jumpConnection = userInputService.InputBegan:Connect(onJumpRequest)
		end
	end)
	
end
coroutine.wrap(TRRD_fake_script)()
local function OWAXO_fake_script() -- SwimInAirButton.SwimInAirScript 
	local script = Instance.new('LocalScript', SwimInAirButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local terrain = workspace.Terrain
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notification = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local toggled = false
	local updateConnection
	local waterSize = Vector3.new(4, 7, 10)
	local waterLifetime = 1.5 -- seconds
	local activeWaterCFrames = {}
	
	-- Function to clear all tracked water blocks
	local function clearAllWater()
		for _, cframe in ipairs(activeWaterCFrames) do
			terrain:FillBlock(cframe, waterSize, Enum.Material.Air)
		end
		activeWaterCFrames = {}
	end
	
	-- Update character reference when the player resets
	player.CharacterAdded:Connect(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:WaitForChild("HumanoidRootPart")
	end)
	
	button.MouseButton1Click:Connect(function()
		toggled = not toggled
	
		if toggled then
			updateConnection = RunService.RenderStepped:Connect(function()
				local character = player.Character or player.CharacterAdded:Wait()
				local hrp = character:FindFirstChild("HumanoidRootPart")
				buttonmodule.ColorOn(script.Parent)
				game.Workspace.Terrain.WaterReflectance = 0
				game.Workspace.Terrain.WaterTransparency = 1
	
				if hrp then
					local cframe = hrp.CFrame
					terrain:FillBlock(cframe, waterSize, Enum.Material.Water)
					table.insert(activeWaterCFrames, cframe)
	
					-- Schedule this block to be removed after waterLifetime
					task.delay(waterLifetime, function()
						terrain:FillBlock(cframe, waterSize, Enum.Material.Air)
	
						-- Clean up from the list
						for i, cf in ipairs(activeWaterCFrames) do
							if cf == cframe then
								table.remove(activeWaterCFrames, i)
								break
							end
						end
					end)
				end
			end)
		else
			if updateConnection then
				updateConnection:Disconnect()
				updateConnection = nil
			end
			clearAllWater()
	
			game.Workspace.Terrain.WaterReflectance = 1
			game.Workspace.Terrain.WaterTransparency = 0
			buttonmodule.ColorOff(script.Parent)
		end
	end)
	
	script.Parent.MouseButton1Up:Connect(function()
		if toggled == true then
			notification.Notification("AirSwim", "sorry about how it looks :(", 3)
		end
	end)
	
end
coroutine.wrap(OWAXO_fake_script)()
local function RQTRFFJ_fake_script() -- GravityButton.GravityScript 
	local script = Instance.new('LocalScript', GravityButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	
	btn.MouseButton1Up:Connect(function()
		textboxmodule.IntSetProperty(workspace, "Gravity")
	end)
end
coroutine.wrap(RQTRFFJ_fake_script)()
local function WGYOB_fake_script() -- SitButton.SitScript 
	local script = Instance.new('LocalScript', SitButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game:GetService("Players").LocalPlayer
	local currentCharacter = plr.Character or plr.CharacterAdded:Wait()
	
	-- Always get updated character after a reset
	plr.CharacterAdded:Connect(function(char)
		currentCharacter = char
	end)
	
	script.Parent.MouseButton1Up:Connect(function()
		local hum = currentCharacter:FindFirstChild("Humanoid")
		if hum then
			hum.Sit = not hum.Sit
		end
	end)
	
end
coroutine.wrap(WGYOB_fake_script)()
local function CIYLB_fake_script() -- ParalyzeButton.ParalyzeScript 
	local script = Instance.new('LocalScript', ParalyzeButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local RunService = game:GetService("RunService")
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local function onCharacterAdded()
		local char = getCharacter()
		local hum = char:FindFirstChild("Humanoid")
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
	
		-- Check if character is R6 or R15 by looking for "UpperTorso" or "Torso"
		local torso
		if char:FindFirstChild("UpperTorso") then
			torso = char:FindFirstChild("UpperTorso") -- R15 has UpperTorso
		elseif char:FindFirstChild("Torso") then
			torso = char:FindFirstChild("Torso") -- R6 has Torso
		end
	
		-- Button click event
		button.MouseButton1Up:Connect(function()
			if toggle == false then
				buttonmodule.ColorOn(button)
	
				if hum and humrootpart and torso then
					-- Create a BodyVelocity object to apply an upward force
					local bodyVelocity = Instance.new("BodyVelocity")
					bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- High force to ensure movement
					bodyVelocity.Velocity = Vector3.new(0, 50, 0)  -- Apply upward velocity
					bodyVelocity.Parent = humrootpart
	
					-- Wait for the player to reach 5 studs above their starting position
					local initialHeight = humrootpart.Position.Y
					local reachedHeight = false
					local heartbeatConnection
	
					heartbeatConnection = RunService.Heartbeat:Connect(function()
						if humrootpart.Position.Y - initialHeight >= 5 then
							reachedHeight = true
						end
					end)
	
					-- Wait until the height is reached
					while not reachedHeight do
						wait(0.1)
					end
	
					-- Once the player reaches the target height, stop them by enabling PlatformStand
					hum.PlatformStand = true
	
					-- Remove the BodyVelocity to stop any further motion
					bodyVelocity:Destroy()
					heartbeatConnection:Disconnect() -- Stop the heartbeat connection
				end
			else
				-- If toggled off, disable PlatformStand
				if hum then
					hum.PlatformStand = false
				end
				buttonmodule.ColorOff(button)
			end
	
			toggle = not toggle
		end)
	end
	
	-- Connect to CharacterAdded to handle respawn
	plr.CharacterAdded:Connect(onCharacterAdded)
	
	-- Initialize when the script first runs
	if plr.Character then
		onCharacterAdded()
	end
	
end
coroutine.wrap(CIYLB_fake_script)()
local function FTMN_fake_script() -- HelicopterButton.HelicopterScript 
	local script = Instance.new('LocalScript', HelicopterButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local humrootpart
	local spinConnection
	local helicopteraudio
	
	-- Function to handle button click and toggle the spin effect
	local function initCharacter()
		-- Ensure the character and HumanoidRootPart are loaded
		local char = plr.Character or plr.CharacterAdded:Wait()
		humrootpart = char:WaitForChild("HumanoidRootPart")
	end
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
			humrootpart.Anchored = true
	
			local spinAngle = 0
	
			-- Connect to Heartbeat to handle continuous spin and upward movement
			spinConnection = game:GetService("RunService").Heartbeat:Connect(function(dt)
				spinAngle += math.rad(720) * dt -- Fast spin
	
				local pos = humrootpart.Position
				local newY = pos.Y + 15 * dt -- Move upward
	
				-- Set the new position and spin angle
				humrootpart.CFrame = CFrame.new(pos.X, newY, pos.Z)
					* CFrame.Angles(math.rad(-90), 0, 0)  -- Lie face down
					* CFrame.Angles(0, 0, spinAngle)     -- Spin like rotor
			end)
	
			-- Add helicopter sound effect
			helicopteraudio = Instance.new("Sound", humrootpart)
			helicopteraudio.SoundId = "rbxassetid://686885384"
			helicopteraudio.Looped = true
			helicopteraudio:Play()
			helicopteraudio.Name = "helicopteraudio"
		else
			-- Reset button color and stop effect
			buttonmodule.ColorOff(button)
	
			-- Destroy the sound when toggled off
			if helicopteraudio then
				helicopteraudio:Destroy()
				helicopteraudio = nil
			end
	
			-- Disconnect spin connection and reset Anchored state
			if spinConnection then
				spinConnection:Disconnect()
				spinConnection = nil
			end
	
			humrootpart.Anchored = false
		end
	end)
	
	-- Reattach the connection if the character respawns
	plr.CharacterAdded:Connect(function()
		-- Cleanup any previous connections and effects
		if spinConnection then
			spinConnection:Disconnect()
			spinConnection = nil
		end
		if helicopteraudio then
			helicopteraudio:Destroy()
			helicopteraudio = nil
		end
	
		-- Re-initialize HumanoidRootPart after respawn
		initCharacter()
	end)
	
	-- Initialize HumanoidRootPart for the first time
	initCharacter()
	
end
coroutine.wrap(FTMN_fake_script)()
local function MJTGCI_fake_script() -- MoonwalkButton.MoonwalkScript 
	local script = Instance.new('LocalScript', MoonwalkButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	
	-- Function to get the character and ensure it's loaded
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	-- Initial character setup
	local char = getCharacter()
	
	-- Function to handle character respawn
	plr.CharacterAdded:Connect(function()
		char = getCharacter()  -- Update character reference
	end)
	
	button.MouseButton1Up:Connect(function()
		local hum = char:WaitForChild("Humanoid")
		if toggle == false then
			if hum then
				buttonmodule.ColorOn(button)
				hum.AutoRotate = false
				notifmodule.Notification("Warning", "MOVE BACKWARDS ‼️", 3)
			end
		else
			if hum then
				hum.AutoRotate = true
				buttonmodule.ColorOff(button)
			end
		end
	
		toggle = not toggle
	end)
	
end
coroutine.wrap(MJTGCI_fake_script)()
local function OMUD_fake_script() -- SeizureButton.SeizureScript 
	local script = Instance.new('LocalScript', SeizureButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local function resetCharacterReferences()
		-- Wait until character is fully loaded
		local char = getCharacter()
		local hum = char:WaitForChild("Humanoid")
		local humrootpart = char:WaitForChild("HumanoidRootPart")
		return hum, humrootpart
	end
	
	-- Seizure coroutine variable
	local seizureCoroutine = nil
	
	-- Function to stop seizure effect if toggle is off
	local function stopSeizure()
		if seizureCoroutine then
			-- Stop the coroutine
			coroutine.close(seizureCoroutine)
			seizureCoroutine = nil
		end
	end
	
	-- Initial character references
	local hum, humrootpart = resetCharacterReferences()
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		-- If the character references are invalid, reinitialize them
		if not hum or not humrootpart then
			hum, humrootpart = resetCharacterReferences()
		end
	
		if toggle then
			buttonmodule.ColorOn(button)
			hum.PlatformStand = true
	
			-- Create and start the seizure coroutine
			seizureCoroutine = coroutine.create(function()
				while toggle do
					-- Random jitter
					local jitter = Vector3.new(
						math.random(-1, 1),
						math.random(-1, 1),
						math.random(-1, 1)
					) * 0.3
	
					-- Random rotation
					local rotation = CFrame.Angles(
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15))
					)
	
					-- Apply jitter and rotation to HumanoidRootPart
					humrootpart.CFrame = humrootpart.CFrame + jitter
					humrootpart.CFrame = humrootpart.CFrame * rotation
	
					-- Small delay for jittering effect
					task.wait(0.05)
				end
			end)
	
			-- Resume the coroutine to start jittering
			coroutine.resume(seizureCoroutine)
		else
			-- When toggled off, stop the seizure effect and reset PlatformStand
			stopSeizure()
			buttonmodule.ColorOff(button)
			hum.PlatformStand = false
		end
	end)
	
	-- Handle character respawn to ensure proper setup
	plr.CharacterAdded:Connect(function()
		-- Reinitialize character references upon respawn
		hum, humrootpart = resetCharacterReferences()
	end)
	
end
coroutine.wrap(OMUD_fake_script)()
local function GWCW_fake_script() -- NoclipButton.NoclipScript 
	local script = Instance.new('LocalScript', NoclipButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local textButton = script.Parent
	local player = game.Players.LocalPlayer
	
	-- Ensure the character is properly loaded
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local isNoclipping = false
	local previousCollisionState = {}
	
	-- Function to save and disable collisions
	local function enableNoclip()
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				previousCollisionState[part] = part.CanCollide
				part.CanCollide = false
			end
		end
	end
	
	-- Function to restore collisions
	local function disableNoclip()
		for part, state in pairs(previousCollisionState) do
			if part:IsA("BasePart") then
				part.CanCollide = state
			end
		end
		previousCollisionState = {}  -- Reset the stored states
	end
	
	-- Update character on respawn
	local character = getCharacter()
	player.CharacterAdded:Connect(function()
		character = getCharacter()  -- Update character reference
	end)
	
	textButton.MouseButton1Click:Connect(function()
		isNoclipping = not isNoclipping
	
		if isNoclipping then
			buttonmodule.ColorOn(textButton)
			enableNoclip()
		else
			buttonmodule.ColorOff(textButton)
			disableNoclip()
		end
	end)
	
end
coroutine.wrap(GWCW_fake_script)()
local function LXFFQ_fake_script() -- FlyButton.FlyScript 
	local script = Instance.new('LocalScript', FlyButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	function Fly()
		local plr = game.Players.LocalPlayer
		local mouse = plr:GetMouse()
		local localplayer = plr
	
		if workspace:FindFirstChild("Core") then
			workspace.Core:Destroy()
		end
	
		local Core = Instance.new("Part")
		Core.CanCollide = false
		Core.Name = "Core"
		Core.Size = Vector3.new(0.05, 0.05, 0.05)
	
		spawn(function()
			Core.Parent = workspace
			local Weld = Instance.new("Weld", Core)
			Weld.Part0 = Core
	
			-- Dynamically check if the player is R6 or R15
			local torsoPart = localplayer.Character:FindFirstChild("UpperTorso") or localplayer.Character:FindFirstChild("Torso")
			Weld.Part1 = torsoPart
			Weld.C0 = CFrame.new(0, 0, 0)
		end)
	
		workspace:WaitForChild("Core")
	
		local torso = workspace.Core
		local flying = true
		local speed = 10
		local keys = {a = false, d = false, w = false, s = false}
		local e1, e2
	
		local function start()
			local pos = Instance.new("BodyPosition", torso)
			local gyro = Instance.new("BodyGyro", torso)
			pos.Name = "EPIXPOS"
			pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
			pos.position = torso.Position
			gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			gyro.cframe = torso.CFrame
	
			repeat
				wait()
				localplayer.Character.Humanoid.PlatformStand = true
				local new = gyro.cframe - gyro.cframe.p + pos.position
	
				if not keys.w and not keys.s and not keys.a and not keys.d then
					speed = 5
				end
	
				if keys.w then
					new = new + workspace.CurrentCamera.CFrame.LookVector * speed
					speed = speed + 0
				end
	
				if keys.s then
					new = new - workspace.CurrentCamera.CFrame.LookVector * speed
					speed = speed + 0
				end
	
				if keys.d then
					new = new * CFrame.new(speed, 0, 0)
					speed = speed + 0
				end
	
				if keys.a then
					new = new * CFrame.new(-speed, 0, 0)
					speed = speed + 0
				end
	
				if speed > 10 then
					speed = 5
				end
	
				pos.position = new.p
	
				if keys.w then
					gyro.cframe = workspace.CurrentCamera.CFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
				elseif keys.s then
					gyro.cframe = workspace.CurrentCamera.CFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
				else
					gyro.cframe = workspace.CurrentCamera.CFrame
				end
			until flying == false
	
			if gyro then gyro:Destroy() end
			if pos then pos:Destroy() end
			flying = false
			localplayer.Character.Humanoid.PlatformStand = false
			speed = 10
		end
	
		e1 = mouse.KeyDown:Connect(function(key)
			if not torso or not torso.Parent then 
				flying = false 
				e1:Disconnect() 
				e2:Disconnect() 
				return 
			end
	
			if key == "w" then
				keys.w = true
			elseif key == "s" then
				keys.s = true
			elseif key == "a" then
				keys.a = true
			elseif key == "d" then
				keys.d = true
			elseif key == "x" then
				if flying == true then
					flying = false
				else
					flying = true
					start()
				end
			end
		end)
	
		e2 = mouse.KeyUp:Connect(function(key)
			if key == "w" then
				keys.w = false
			elseif key == "s" then
				keys.s = false
			elseif key == "a" then
				keys.a = false
			elseif key == "d" then
				keys.d = false
			end
		end)
	
		start()
	end
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	local debounce = false
	script.Parent.MouseButton1Up:Connect(function()
		if debounce == false then
			Fly()
			notifmodule.Notification("Warning", "After reset, may need to click button again.", 3)
			debounce = true
		end
	end)
	game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
		debounce = false
		game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	end)
	
end
coroutine.wrap(LXFFQ_fake_script)()
local function JRPBQ_fake_script() -- AntiVoidButton.AntivoidScript 
	local script = Instance.new('LocalScript', AntiVoidButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local TweenService = game:GetService("TweenService")
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local player = Players.LocalPlayer
	local lastSafeCFrame = nil
	local fallThresholdY = -50
	local antiVoidEnabled = false
	local connection = nil
	
	local debounceTime = 2 -- Time in seconds between showing warnings
	local canShowWarning = true -- Flag for controlling the warning debounce
	
	-- UI Setup
	local function createUI()
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "AntiVoidUI"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = player:WaitForChild("PlayerGui")
	
		local warning = Instance.new("TextLabel")
		warning.Name = "VoidWarning"
		warning.Size = UDim2.new(0.5, 0, 0.1, 0)
		warning.Position = UDim2.new(0.25, 0, 0.4, 0)
		warning.BackgroundTransparency = 0.4
		warning.BackgroundColor3 = Color3.new(0, 0, 0)
		warning.TextColor3 = Color3.new(1, 0.2, 0.2)
		warning.Font = Enum.Font.GothamBold
		warning.TextScaled = true
		warning.Text = "Void Detected! Returning to Safe Ground..."
		warning.Visible = false
		warning.Parent = screenGui
	
		return warning
	end
	
	local warningLabel = createUI()
	
	local function showWarning()
		if not canShowWarning then return end
	
		canShowWarning = false
		warningLabel.Visible = true
		warningLabel.TextTransparency = 1
		warningLabel.TextStrokeTransparency = 1
	
		local tweenIn = TweenService:Create(warningLabel, TweenInfo.new(0.3), {
			TextTransparency = 0,
			TextStrokeTransparency = 0.3
		})
	
		local tweenOut = TweenService:Create(warningLabel, TweenInfo.new(0.5), {
			TextTransparency = 1,
			TextStrokeTransparency = 1
		})
	
		tweenIn:Play()
		tweenIn.Completed:Wait()
		wait(1)
		tweenOut:Play()
		tweenOut.Completed:Wait()
		warningLabel.Visible = false
	
		-- Reset debounce after a delay
		wait(debounceTime)
		canShowWarning = true
	end
	
	local function enableAntiVoid(character)
		local humanoid = character:WaitForChild("Humanoid", 5)
		local rootPart = character:WaitForChild("HumanoidRootPart", 5)
	
		if not humanoid or not rootPart then return end
	
		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	
		connection = RunService.RenderStepped:Connect(function()
			if not antiVoidEnabled then return end
	
			-- Raycast downward to check if feet are over ground
			local rayOrigin = rootPart.Position
			local rayDirection = Vector3.new(0, -4, 0)
	
			local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
			if result and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
				lastSafeCFrame = rootPart.CFrame
			end
	
			-- Void detection and recovery
			if humanoid:GetState() == Enum.HumanoidStateType.Freefall and rootPart.Position.Y < fallThresholdY then
				if lastSafeCFrame then
					rootPart.CFrame = lastSafeCFrame + Vector3.new(0, 3, 0)
					showWarning()
					warn("Void detected — Teleported to grounded position.")
				end
			end
		end)
	end
	
	local function onCharacterAdded(char)
		if antiVoidEnabled then
			enableAntiVoid(char)
		end
	end
	
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
	player.CharacterAdded:Connect(onCharacterAdded)
	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	-- Toggle system
	button.MouseButton1Click:Connect(function()
		antiVoidEnabled = not antiVoidEnabled
		
	
		if antiVoidEnabled then
			warn("Anti-Void Enabled")
			notificationmodule.Notification("WARNING ⚠️", "FLASH WARNING (Use fly incase‼️)", 3)
			buttonmodule.ColorOn(script.Parent)
			if player.Character then
				enableAntiVoid(player.Character)
			end
		else
			warn("Anti-Void Disabled")
			buttonmodule.ColorOff(script.Parent)
			if connection then
				connection:Disconnect()
				connection = nil
			end
		end
	end)
	
end
coroutine.wrap(JRPBQ_fake_script)()
local function AUACEI_fake_script() -- ChatSpam.ChatSpamScript 
	local script = Instance.new('LocalScript', ChatSpam)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	local TextChatService = game:GetService("TextChatService")
	local chatChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
	
	-- Toggle on button click
	btn.MouseButton1Up:Connect(function()
		toggle = not toggle
		btn.Text = toggle and "Stop Spamming" or "Chat Spam"
		buttonmodule.ColorOff(btn)
	
		if toggle then
	
			textboxmodule.SetProperty(textbox, "Text")
			textbox.Text = ""
			buttonmodule.ColorOn(btn)
		end
	end)
	
	-- Use TextBoxModule to allow editing the textbox
	
	
	-- Repeating task to send messages
	task.spawn(function()
		while true do
			if toggle then
				local message = textbox.Text
				if message and message ~= "" then
					chatChannel:SendAsync(message)
				end
			end
			task.wait(0.4) -- adjust for spam rate
		end
	end)
	
end
coroutine.wrap(AUACEI_fake_script)()
local function UPUMU_fake_script() -- ChatlogButton.ChatlogScriptToggle 
	local script = Instance.new('LocalScript', ChatlogButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local player = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local btn = script.Parent
	
	local toggled = false
	
	local chatlogframe = script.Parent.Parent.Parent.Parent.Parent.Parent.ChatLog
	
	btn.MouseButton1Up:Connect(function()
		chatlogframe.Visible = not chatlogframe.Visible
	
		if chatlogframe.Visible then
			buttonmodule.ColorOn(script.Parent)
		else
			buttonmodule.ColorOff(script.Parent)
		end
	end)
	
end
coroutine.wrap(UPUMU_fake_script)()
local function WVEHKB_fake_script() -- ClickToMove.ClickScript 
	local script = Instance.new('LocalScript', ClickToMove)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local button = script.Parent
	local toggle = false
	
	local module = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Toggle Teleport Mode
	button.MouseButton1Click:Connect(function()
		toggle = not toggle
		if toggle then
			module.ColorOn(button)
		else
			module.ColorOff(button)
		end
	end)
	
	-- Teleport Logic
	mouse.Button1Down:Connect(function()
		if toggle then
			local char = player.Character or player.CharacterAdded:Wait()
			local hrp = char:WaitForChild("HumanoidRootPart")
			local pos = mouse.Hit and mouse.Hit.Position
			if pos then
				hrp.CFrame = CFrame.new(pos + Vector3.new(0, 3, 0))
			end
		end
	end)
	
end
coroutine.wrap(WVEHKB_fake_script)()
local function TRFVX_fake_script() -- DashButton.DashScript 
	local script = Instance.new('LocalScript', DashButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	-- LocalScript in your TextButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local toggle = false
	local dashDistance = 10
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Update character on respawn
	player.CharacterAdded:Connect(function(char)
		character = char
	end)
	
	-- Toggle system for enabling and disabling dash
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
		else
			buttonmodule.ColorOff(button)
		end
	end)
	
	-- Dash function
	local function dash()
		if toggle and character and character:FindFirstChild("HumanoidRootPart") then
			local camera = workspace.CurrentCamera
			local dashDirection = camera.CFrame.LookVector
			local dashPosition = character.HumanoidRootPart.Position + dashDirection * dashDistance
	
			character:SetPrimaryPartCFrame(CFrame.new(dashPosition))
		end
	end
	
	-- Detect Q key
	local UserInputService = game:GetService("UserInputService")
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.Q then
			dash()
		end
	end)
	
end
coroutine.wrap(TRFVX_fake_script)()
local function HIFL_fake_script() -- ESP.ESPscriptnew 
	local script = Instance.new('LocalScript', ESP)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	-- Fancy ESP Toggle Button Script with Username, Distance, and Toggle GUI
	-- Must be a LocalScript inside a TextButton
	
	local button = script.Parent
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local localPlayer = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Global ESP API
	_G.FancyESP = _G.FancyESP or {}
	local ESP = _G.FancyESP
	
	ESP.settings = setmetatable({
		enabled = false,
		boxColor = Color3.fromRGB(255, 0, 0),
		showUsername = true,
		showDistance = true
	}, {
		__index = function(t, k) return rawget(t, k) end,
		__newindex = function(t, k, v) rawset(t, k, v) end
	})
	
	local espTargets = {}
	local lastUpdated = 0
	local connection
	
	local function isTargetModel(model)
		return model:IsA("Model") and model:FindFirstChild("Humanoid") and model:FindFirstChild("HumanoidRootPart")
	end
	
	local function createESP(model)
		if espTargets[model] then return end
	
		local root = model:FindFirstChild("HumanoidRootPart")
		if not root then
			model.ChildAdded:Once(function(child)
				if child.Name == "HumanoidRootPart" and isTargetModel(model) then
					createESP(model)
				end
			end)
			return
		end
	
		local box = Instance.new("BoxHandleAdornment")
		box.Name = "FancyESPBox"
		box.Adornee = root
		box.Size = Vector3.new(4, 6, 1)
		box.Color3 = ESP.settings.boxColor
		box.AlwaysOnTop = true
		box.ZIndex = 5
		box.Transparency = 0.5
		box.Parent = workspace
	
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "FancyESPLabel"
		billboard.Adornee = root
		billboard.Size = UDim2.new(0, 100, 0, 50)
		billboard.StudsOffset = Vector3.new(0, 5, 0)
		billboard.AlwaysOnTop = true
		billboard.Parent = workspace
	
		local nameLabel = Instance.new("TextLabel")
		nameLabel.Name = "Name"
		nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
		nameLabel.Position = UDim2.new(0, 0, 0, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.TextSize = 26
		nameLabel.Font = Enum.Font.SourceSansBold
		nameLabel.TextColor3 = Color3.new(1, 1, 1)
		nameLabel.TextStrokeTransparency = 0.5
		nameLabel.Text = model.Name
		nameLabel.Parent = billboard
	
		local distanceLabel = Instance.new("TextLabel")
		distanceLabel.Name = "Distance"
		distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
		distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
		distanceLabel.BackgroundTransparency = 1
		distanceLabel.TextSize = 18
		distanceLabel.Font = Enum.Font.SourceSans
		distanceLabel.TextColor3 = Color3.fromRGB(180, 255, 180)
		distanceLabel.TextStrokeTransparency = 0.7
		distanceLabel.Text = ""
		distanceLabel.Parent = billboard
	
		local humanoid = model:FindFirstChild("Humanoid")
		if humanoid then
			humanoid.Died:Connect(function()
				if espTargets[model] then
					espTargets[model].box:Destroy()
					espTargets[model].label:Destroy()
					espTargets[model] = nil
				end
			end)
	
			model:WaitForChild("HumanoidRootPart").AncestryChanged:Connect(function(_, parent)
				if not parent and espTargets[model] then
					espTargets[model].box:Destroy()
					espTargets[model].label:Destroy()
					espTargets[model] = nil
				end
			end)
		end
	
		espTargets[model] = {
			box = box,
			label = billboard,
			distance = distanceLabel,
			root = root,
			humanoid = humanoid,
			nameLabel = nameLabel
		}
	end
	
	function ESP:Destroy()
		for _, data in pairs(espTargets) do
			if data.box then data.box:Destroy() end
			if data.label then data.label:Destroy() end
		end
		espTargets = {}
	end
	
	local function startESP()
		connection = RunService.RenderStepped:Connect(function()
			if tick() - lastUpdated > 0.5 then
				lastUpdated = tick()
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and player.Character then
						local root = player.Character:FindFirstChild("HumanoidRootPart")
						if root and (localPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude < 100 then
							createESP(player.Character)
						end
					end
				end
				for _, model in ipairs(workspace:GetDescendants()) do
					if isTargetModel(model) and not Players:GetPlayerFromCharacter(model) then
						local root = model:FindFirstChild("HumanoidRootPart")
						if root and (localPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude < 100 then
							createESP(model)
						end
					end
				end
				for model, data in pairs(espTargets) do
					if model and data.root and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
						local distance = (localPlayer.Character.HumanoidRootPart.Position - data.root.Position).Magnitude
						data.distance.Text = ESP.settings.showDistance and math.floor(distance) .. " studs" or ""
						local scale = math.clamp(50 / distance, 0.5, 1.5)
						data.label.Size = UDim2.new(0, 100 * scale, 0, 50 * scale)
						data.nameLabel.Text = ESP.settings.showUsername and model.Name or ""
					end
				end
			end
		end)
	end
	
	-- Cleanup on character death
	local function onCharacterAdded(char)
		local hum = char:WaitForChild("Humanoid")
		hum.Died:Connect(function()
			ESP:Destroy()
			if connection then connection:Disconnect() end
			espGui.Enabled = false
			buttonmodule.ColorOff(button)
			ESP.settings.enabled = false
		end)
	end
	if localPlayer.Character then onCharacterAdded(localPlayer.Character) end
	localPlayer.CharacterAdded:Connect(onCharacterAdded)
	
	-- GUI controls
	local espGui = Instance.new("ScreenGui")
	espGui.Name = "ESPSettingsGui"
	espGui.Parent = localPlayer:WaitForChild("PlayerGui")
	espGui.Enabled = false
	
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 200, 0, 150)
	frame.Position = UDim2.new(0, 10, 0, 10)
	frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	frame.BackgroundTransparency = 0.3
	frame.Parent = espGui
	
	local usernameToggle = Instance.new("TextButton")
	usernameToggle.Size = UDim2.new(0, 180, 0, 30)
	usernameToggle.Position = UDim2.new(0, 10, 0, 10)
	usernameToggle.Text = "Username: ON"
	usernameToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	usernameToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	usernameToggle.Parent = frame
	
	local distanceToggle = Instance.new("TextButton")
	distanceToggle.Size = UDim2.new(0, 180, 0, 30)
	distanceToggle.Position = UDim2.new(0, 10, 0, 50)
	distanceToggle.Text = "Distance: ON"
	distanceToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	distanceToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	distanceToggle.Parent = frame
	
	usernameToggle.MouseButton1Click:Connect(function()
		ESP.settings.showUsername = not ESP.settings.showUsername
		usernameToggle.Text = ESP.settings.showUsername and "Username: ON" or "Username: OFF"
	end)
	
	distanceToggle.MouseButton1Click:Connect(function()
		ESP.settings.showDistance = not ESP.settings.showDistance
		distanceToggle.Text = ESP.settings.showDistance and "Distance: ON" or "Distance: OFF"
	end)
	
	button.MouseButton1Click:Connect(function()
		ESP.settings.enabled = not ESP.settings.enabled
		if ESP.settings.enabled then
			startESP()
			buttonmodule.ColorOn(button)
			espGui.Enabled = true
		else
			ESP:Destroy()
			if connection then connection:Disconnect() end
			buttonmodule.ColorOff(button)
			espGui.Enabled = false
		end
	end)
end
coroutine.wrap(HIFL_fake_script)()
-- ESP.ESPscript is disabled.
local function LPNZMV_fake_script() -- FakeLagButton.FakeLagScript 
	local script = Instance.new('LocalScript', FakeLagButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local player = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local btn = script.Parent
	
	local toggled = false
	local oldGravity = workspace.Gravity
	local renderConnection
	local mainLoop
	
	-- Store the current character reference and update on reset
	local character = player.Character or player.CharacterAdded:Wait()
	player.CharacterAdded:Connect(function(char)
		character = char
	end)
	
	btn.MouseButton1Up:Connect(function()
		toggled = not toggled
	
		if toggled then
			buttonmodule.ColorOn(btn)
			workspace.Gravity = 100
	
			mainLoop = task.spawn(function()
				while toggled do
					local char = character
					local hum = char and char:FindFirstChild("Humanoid")
					local hrp = char and char:FindFirstChild("HumanoidRootPart")
	
					if hum and hrp then
						local lastPos = hrp.Position
	
						task.wait(math.random(0.4, 0.9))
						hrp.Anchored = not hrp.Anchored
	
						if math.random() < 0.05 then
							task.wait(0.4)
							hrp.CFrame = CFrame.new(lastPos)
						end
	
						if renderConnection then
							renderConnection:Disconnect()
						end
	
						renderConnection = RunService.RenderStepped:Connect(function()
							if hum:GetState() == Enum.HumanoidStateType.Jumping or hum:GetState() == Enum.HumanoidStateType.Freefall then
								if math.random() < 0.6 then
									hrp.Anchored = not hrp.Anchored
								end
							end
						end)
					end
	
					task.wait(math.random(0.1, 0.3))
				end
			end)
		else
			buttonmodule.ColorOff(btn)
	
			if renderConnection then
				renderConnection:Disconnect()
				renderConnection = nil
			end
	
			if mainLoop then
				task.cancel(mainLoop)
				mainLoop = nil
			end
	
			local char = character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then
				hrp.Anchored = false
			end
	
			workspace.Gravity = oldGravity
		end
	end)
	
end
coroutine.wrap(LPNZMV_fake_script)()
local function ZGEU_fake_script() -- FieldOfViewButton.FOVscript 
	local script = Instance.new('LocalScript', FieldOfViewButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	btn.MouseButton1Up:Connect(function()
		local camera = workspace.CurrentCamera
		if camera then
			textboxmodule.IntSetProperty(camera, "FieldOfView")
		end
	end)
	
end
coroutine.wrap(ZGEU_fake_script)()
local function IBXC_fake_script() -- AntiFlingButton.AntiFlingScript 
	local script = Instance.new('LocalScript', AntiFlingButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game.Players.LocalPlayer
	local button = script.Parent
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Toggle state
	local toggleAntiFling = false
	
	-- High density anti-fling physical properties
	local antiFlingProperties = PhysicalProperties.new(1000, 0.3, 0.5)
	-- Roblox's default for Plastic
	local defaultProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
	
	-- Function to apply properties to all character parts
	local function applyPhysicalProperties(char, props)
		for _, part in ipairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CustomPhysicalProperties = props
			end
		end
	end
	
	-- Enable/Disable Anti-Fling
	local function enableAntiFling(char)
		applyPhysicalProperties(char, antiFlingProperties)
	end
	
	local function disableAntiFling(char)
		applyPhysicalProperties(char, defaultProperties)
	end
	
	-- Button click toggles anti-fling
	button.MouseButton1Up:Connect(function()
		toggleAntiFling = not toggleAntiFling
		button.BorderSizePixel = toggleAntiFling and 2 or 0
	
		local char = plr.Character or plr.CharacterAdded:Wait()
		char:WaitForChild("HumanoidRootPart")
	
		if toggleAntiFling then
			enableAntiFling(char)
		else
			disableAntiFling(char)
		end
	end)
	
	-- Reapply on respawn
	plr.CharacterAdded:Connect(function(char)
		char:WaitForChild("HumanoidRootPart")
		if toggleAntiFling then
			enableAntiFling(char)
		end
	end)
	
end
coroutine.wrap(IBXC_fake_script)()
local function IGLSA_fake_script() -- TextBox_3.NotesSaver 
	local script = Instance.new('LocalScript', TextBox_3)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local HttpService = game:GetService("HttpService")
	local FILE_NAME = "textbox_content.json"
	
	local textbox = script.Parent  -- Reference to the TextBox this LocalScript is placed in.
	
	-- Function to save the text to a file (for Studio testing)
	local function saveText(text)
		local data = {
			content = text
		}
		writefile(FILE_NAME, HttpService:JSONEncode(data))  -- Save to a file in Studio.
	end
	
	-- Function to load the text from the file (for Studio testing)
	local function loadText()
		if isfile(FILE_NAME) then
			local data = HttpService:JSONDecode(readfile(FILE_NAME))  -- Read from the file in Studio.
			return data.content
		end
		return ""  -- Default to an empty string if no saved content is found.
	end
	
	-- Load saved text when the script starts
	local savedText = loadText()
	textbox.Text = savedText  -- Set the TextBox's text to the saved value on start.
	
	-- Function to save text every 3 seconds
	while true do
		wait(3)  -- Wait for 3 seconds before saving.
		saveText(textbox.Text)  -- Save the current text in the TextBox
	end
	
end
coroutine.wrap(IGLSA_fake_script)()
local function FFILM_fake_script() -- Panic.AntiFlingScript 
	local script = Instance.new('LocalScript', Panic)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game.Players.LocalPlayer
	local button = script.Parent
	
	local gui = plr.PlayerGui:FindFirstChild("VEXGUI")
	
	
	button.MouseButton1Up:Connect(function()
		gui:Destroy()
	end)
	
	
	
	
end
coroutine.wrap(FFILM_fake_script)()
local function MPIOD_fake_script() -- DiscordLink.DiscordLinkScript 
	local script = Instance.new('LocalScript', DiscordLink)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local btn = script.Parent
	
	btn.MouseButton1Click:Connect(function()
		setclipboard("soon bruh 😭")
	end)
	
end
coroutine.wrap(MPIOD_fake_script)()
local function VILDQ_fake_script() -- DihButton.ppscript 
	local script = Instance.new('LocalScript', DihButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local button = script.Parent
	
	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	local Buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local toggle = false
	
	-- Save original clothing
	local originalShirt, originalPants, originalShirtGraphic
	
	button.MouseButton1Up:Connect(function()
		local char = player.Character
	
		if toggle == false then
			notificationmodule.Notification("Warning", "NSFW ‼️", 3)
			Buttonmodule.ColorOn(script.Parent)
	
			local pp = Instance.new("Part", workspace)
			pp.Name = "ppLol"
	
			local lowertorso = char:FindFirstChild("LowerTorso")
	
			local weld1 = Instance.new("Weld", pp)
			weld1.Part0 = pp
			weld1.Part1 = lowertorso
	
			pp.Size = Vector3.new(3.303, 0.376, 0.752)
			pp.Orientation = Vector3.new(0, 90, 0)
			pp.BrickColor = char["Body Colors"].HeadColor
			pp.CanCollide = false
			weld1.C0 = CFrame.new(1.80, 0.5, -pp.Size.Z / 1 - -0.75) * CFrame.Angles(0, math.rad(90), 0)
	
			for _, v in pairs(char:GetDescendants()) do
				if v:IsA("MeshPart") then
					v.BrickColor = char["Body Colors"].HeadColor
				end
			end
	
			-- Save clothing
			local shirt = char:FindFirstChildOfClass("Shirt")
			if shirt then
				originalShirt = shirt:Clone()
				shirt:Destroy()
			end
	
			local pants = char:FindFirstChildOfClass("Pants")
			if pants then
				originalPants = pants:Clone()
				pants:Destroy()
			end
	
			local graphic = char:FindFirstChild("Shirt Graphic")
			if graphic then
				originalShirtGraphic = graphic:Clone()
				graphic:Destroy()
			end
	
		else
			-- Remove fake part
			local part = workspace:FindFirstChild("ppLol")
			if part then
				part:Destroy()
			end
	
			-- Reapply clothing
			if originalShirt then
				originalShirt:Clone().Parent = char
			end
	
			if originalPants then
				originalPants:Clone().Parent = char
			end
	
			if originalShirtGraphic then
				originalShirtGraphic:Clone().Parent = char
			end
	
			Buttonmodule.ColorOff(script.Parent)
		end
	
		toggle = not toggle
	end)
	
end
coroutine.wrap(VILDQ_fake_script)()
local function PFQWUXB_fake_script() -- RainbowSkinButton.RainbowSkinScript 
	local script = Instance.new('LocalScript', RainbowSkinButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local button = script.Parent
	local runService = game:GetService("RunService")
	local Buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local toggle = false
	local connection
	local char
	local skintone
	
	-- Function to update character references
	local function updateCharacter()
		char = player.Character or player.CharacterAdded:Wait()
		skintone = char:WaitForChild("Body Colors")
	end
	
	-- Listen for character respawn
	player.CharacterAdded:Connect(function()
		if connection then
			connection:Disconnect()
			connection = nil
		end
		toggle = false
		Buttonmodule.ColorOff(script.Parent)
		updateCharacter()
	end)
	
	-- Initialize character
	updateCharacter()
	
	button.MouseButton1Up:Connect(function()
		if not toggle then
			Buttonmodule.ColorOn(script.Parent)
	
			local bodyParts = {}
			for _, part in pairs(char:GetChildren()) do
				if part:IsA("BasePart") then
					table.insert(bodyParts, part)
				end
			end
	
			local hue = 0
			connection = runService.RenderStepped:Connect(function(deltaTime)
				hue = (hue + deltaTime / 2) % 1
				local color = Color3.fromHSV(hue, 1, 1)
	
				for _, part in pairs(char:GetChildren()) do
					if part:IsA("BasePart") then
						part.Color = color
					end
				end
			end)
		else
			if connection then
				connection:Disconnect()
				connection = nil
			end
	
			Buttonmodule.ColorOff(script.Parent)
	
			for _, part in pairs(char:GetChildren()) do
				if part:IsA("BasePart") then
					part.BrickColor = skintone.HeadColor
				end
			end
		end
	
		toggle = not toggle
	end)
	
end
coroutine.wrap(PFQWUXB_fake_script)()
local function HNPB_fake_script() -- FartButton.fartscript 
	local script = Instance.new('LocalScript', FartButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local debounce = false
	
	button.MouseButton1Up:Connect(function()
		if not debounce then
			debounce = true
			local player = game.Players.LocalPlayer
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = char:WaitForChild("LowerTorso")
	
			local audio = Instance.new("Sound", script.Parent)
			audio.SoundId = "rbxassetid://9059590824"
			audio:Play()
	
			-- Create a new part behind the HumanoidRootPart to attach the smoke
			local smokePart = Instance.new("Part")
			smokePart.Size = Vector3.new(1, 1, 1)
			smokePart.CanCollide = false
			smokePart.Anchored = true
			smokePart.Transparency = 1 -- Make the part invisible
			smokePart.CFrame = humanoidRootPart.CFrame * CFrame.new(0, 0, 2) -- Initial position behind the character
			smokePart.Parent = char
	
			-- Create a Smoke emitter and parent it to the smokePart
			local smoke = Instance.new("Smoke")
			smoke.Color = Color3.new(0.247059, 0.388235, 0.168627)
			smoke.Size = 0.3
			smoke.Opacity = 0.5
			smoke.RiseVelocity = 5
			smoke.Parent = smokePart
	
			-- Update the smoke position every 0.5 seconds for 10 seconds
			for i = 1, 20 do
				smokePart.CFrame = humanoidRootPart.CFrame * CFrame.new(0, 0, 2)
				wait(0.2)
			end
	
			-- Clean up
			smokePart:Destroy()	
			audio:Destroy()
			debounce = false
		end
	end)
	
end
coroutine.wrap(HNPB_fake_script)()
local function JQGCC_fake_script() -- NightButton.NightScript 
	local script = Instance.new('LocalScript', NightButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local lighting = game:GetService("Lighting")
	
	button.MouseButton1Up:Connect(function()
		lighting.TimeOfDay = "3:00"
	end)
end
coroutine.wrap(JQGCC_fake_script)()
local function QTPQBL_fake_script() -- DayButton.DayScript 
	local script = Instance.new('LocalScript', DayButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local lighting = game:GetService("Lighting")
	
	button.MouseButton1Up:Connect(function()
		lighting.TimeOfDay = "14:00"
	end)
end
coroutine.wrap(QTPQBL_fake_script)()
local function HTYHUTB_fake_script() -- RemoveFogButton.RemoveFog 
	local script = Instance.new('LocalScript', RemoveFogButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local button = script.Parent
	local toggle = false
	
	local lighting = game:GetService("Lighting")
	
	local module = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Toggle Teleport Mode
	button.MouseButton1Click:Connect(function()
		toggle = not toggle
		local origfog1 = game:GetService("Lighting").FogStart
		local origfog2 = game:GetService("Lighting").FogEnd
		if toggle then
			module.ColorOn(button)
			lighting.FogStart = math.huge
			lighting.FogEnd = math.huge
			
			
		else
			module.ColorOff(button)
			lighting.FogStart = origfog1
			lighting.FogEnd = origfog2
			
		end
	end)
end
coroutine.wrap(HTYHUTB_fake_script)()
local function NHXRDO_fake_script() -- ClickToDeleteButton.clicktodeletescript 
	local script = Instance.new('LocalScript', ClickToDeleteButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local toggle = false
	
	local previousTarget = nil
	local moveConnection = nil
	local changeConnection = nil
	local deleteConnection = nil
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local function highlightTarget(target)
		-- Remove highlight from the previous target if it exists
		if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
			previousTarget.DestroyOutline:Destroy()
		end
	
		-- Highlight the new target
		if target and target:IsA("BasePart") then
			local highlight = Instance.new("Highlight", target)
			highlight.Name = "DestroyOutline"
			highlight.FillColor = Color3.new(1, 0, 0) -- Red fill color
			highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline color
			highlight.DepthMode = Enum.HighlightDepthMode.Occluded -- Respect depth (not always on top)
			previousTarget = target
		else
			previousTarget = nil
		end
	end
	
	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then
			toggle = true
			buttonmodule.ColorOn(script.Parent)
			-- Connect to the Mouse's Move event
			moveConnection = mouse.Move:Connect(function()
				local target = mouse.Target
				highlightTarget(target)
			end)
	
			-- Connect to the Mouse's Button1Up event for deleting parts
			deleteConnection = mouse.Button1Up:Connect(function()
				if toggle and mouse.Target then
					mouse.Target:Destroy()
				end
			end)
	
			-- Connect to the Mouse's Changed event to remove the highlight if necessary
			changeConnection = mouse.Changed:Connect(function()
				local target = mouse.Target
	
				-- If the mouse moves away from the target, remove the highlight
				if not target then
					highlightTarget(nil)
				end
			end)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)
			-- Disconnect the events when toggled off
			if moveConnection then
				moveConnection:Disconnect()
				moveConnection = nil
			end
			if changeConnection then
				changeConnection:Disconnect()
				changeConnection = nil
			end
			if deleteConnection then
				deleteConnection:Disconnect()
				deleteConnection = nil
			end
	
			-- Remove the highlight if it exists
			if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
				previousTarget.DestroyOutline:Destroy()
				previousTarget = nil
			end
		end
	end)
	
end
coroutine.wrap(NHXRDO_fake_script)()
local function FKZDZ_fake_script() -- ClickToCollisionButton.clicktodeletescript 
	local script = Instance.new('LocalScript', ClickToCollisionButton)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local toggle = false
	
	local previousTarget = nil
	local moveConnection = nil
	local changeConnection = nil
	local deleteConnection = nil
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local function highlightTarget(target)
		-- Remove highlight from the previous target if it exists
		if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
			previousTarget.DestroyOutline:Destroy()
		end
	
		-- Highlight the new target
		if target and target:IsA("BasePart") then
			local highlight = Instance.new("Highlight", target)
			highlight.Name = "DestroyOutline"
	
			if target.CanCollide then
				-- Orange for CanCollide ON
				highlight.FillColor = Color3.fromRGB(255, 170, 0) -- Orange
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- White outline
			else
				-- Blue for CanCollide OFF
				highlight.FillColor = Color3.fromRGB(0, 170, 255) -- Bright blue
				highlight.OutlineColor = Color3.fromRGB(200, 200, 255) -- Soft blue-white outline
			end
	
			highlight.DepthMode = Enum.HighlightDepthMode.Occluded
			previousTarget = target
		else
			previousTarget = nil
		end
	end
	
	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then
			
			notificationmodule.GuiNotification("Color Meaning", "🟠 = Collision On, 🔵 = Collision Off ", 3)
			
			toggle = true
			buttonmodule.ColorOn(script.Parent)
	
			moveConnection = mouse.Move:Connect(function()
				local target = mouse.Target
				highlightTarget(target)
			end)
	
			deleteConnection = mouse.Button1Up:Connect(function()
				if toggle and mouse.Target then
					mouse.Target.CanCollide = not mouse.Target.CanCollide
					highlightTarget(mouse.Target) -- Update highlight color
				end
			end)
	
			changeConnection = mouse.Changed:Connect(function()
				local target = mouse.Target
				if not target then
					highlightTarget(nil)
				end
			end)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)
	
			if moveConnection then moveConnection:Disconnect() moveConnection = nil end
			if changeConnection then changeConnection:Disconnect() changeConnection = nil end
			if deleteConnection then deleteConnection:Disconnect() deleteConnection = nil end
	
			if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
				previousTarget.DestroyOutline:Destroy()
				previousTarget = nil
			end
		end
	end)
	
end
coroutine.wrap(FKZDZ_fake_script)()
local function HPVDQUX_fake_script() -- Main.Drag 
	local script = Instance.new('LocalScript', Main)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UserInputService = game:GetService('UserInputService')
	
	local frame = script.Parent
	
	local leadFrame = Instance.new('Frame') do
		leadFrame.AnchorPoint = frame.AnchorPoint
		leadFrame.Position = frame.Position
		leadFrame.Size = frame.Size
		leadFrame.Name = `Lead {frame.Name}`
		leadFrame.Visible = false
		leadFrame.Parent = frame.Parent
	end
	
	local screenGui = frame:FindFirstAncestorOfClass('ScreenGui')
	
	local inputChanged = nil
	local inputEnded = nil
	
	local function getBoundsRelations(guiObject : GuiObject)
		local bounds = screenGui.AbsoluteSize
		local topLeft = screenGui.IgnoreGuiInset and guiObject.AbsolutePosition + Vector2.new(0, 36) or guiObject.AbsolutePosition
		local bottomRight = topLeft + guiObject.AbsoluteSize
	
		local boundRelations = {
			Top = topLeft.Y < 0 and math.abs(topLeft.Y) or nil,
			Left = topLeft.X < 0 and math.abs(topLeft.X) or nil,
			Right = bottomRight.X > bounds.X and math.abs(bottomRight.X - bounds.X) or nil,
			Bottom = bottomRight.Y > bounds.Y and math.abs(bottomRight.Y - bounds.Y) or nil,
		}
	
		return (not boundRelations.Top
			and not boundRelations.Bottom
			and not boundRelations.Left
			and not boundRelations.Right), boundRelations
	end
	
	frame.InputBegan:Connect(function(inputObject : InputObject)
		if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
	
			local lastMousePosition = UserInputService:GetMouseLocation()
			local goalPosition = frame.Position
	
			inputChanged = UserInputService.InputChanged:Connect(function(input : InputObject, event : boolean)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					local currentMousePosition = UserInputService:GetMouseLocation()
					local mouseDelta = currentMousePosition - lastMousePosition
	
					goalPosition += UDim2.fromOffset(mouseDelta.X, mouseDelta.Y)
	
					leadFrame.Position = goalPosition
	
					local isInBounds, relations = getBoundsRelations(leadFrame)
	
					if not isInBounds then
						local x = (relations.Left or 0) - (relations.Right or 0)
						local y = (relations.Top or 0) - (relations.Bottom or 0)
	
						goalPosition += UDim2.fromOffset(x, y)
					end
	
					frame.Position = goalPosition
					lastMousePosition = currentMousePosition
				end
			end)
	
			inputEnded = frame.InputEnded:Connect(function(input : InputObject)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					inputChanged:Disconnect()
					inputChanged = nil
	
					inputEnded:Disconnect()
					inputEnded = nil
				end
			end)
		end
	end)
	
	frame.Destroying:Once(function()
	
		leadFrame = leadFrame:Destroy()
	
		if inputChanged  then
			inputChanged:Disconnect()
			inputChanged = nil
		end
	
		if inputEnded then
			inputEnded:Disconnect()
			inputEnded = nil
		end
	end)
end
coroutine.wrap(HPVDQUX_fake_script)()
local function YCNVHSW_fake_script() -- Main.OpenAndClose 
	local script = Instance.new('LocalScript', Main)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local ts = game:GetService("TweenService")
	
	local closeButton = script.Parent.Parent.Main:WaitForChild("Close")
	local main = script.Parent.Parent:FindFirstChild("Main")
	local frame = script.Parent:WaitForChild("VexFrame")
	local tabs = frame:WaitForChild("Tabs")
	local buttons = tabs.VexButtons.ScrollingFrame
	
	-- Sound
	local sound = Instance.new("Sound", workspace)
	sound.SoundId = "rbxassetid://1843027392"
	sound:Play()
	
	-- Toggle open/close state
	local closed = false
	closeButton.MouseButton1Up:Connect(function()
		if closed == false then
			for _, child in pairs(tabs:GetChildren()) do
				if child:IsA("Frame") then
					child.Visible = false
				end
			end
			for _, child in pairs(tabs:GetChildren()) do
				if child:IsA("ScrollingFrame") then
					child.Visible = false
				end
			end
			frame.Visible = false
		else
			frame.Visible = true
			tabs:FindFirstChild("Home").Visible = true
		end
		closed = not closed
	end)
	
	-- Button logic for TextButtons and buttons in ScrollingFrame
	local function setupButtonLogic(button)
		if button:IsA("TextButton") then
			button.MouseButton1Up:Connect(function()
				local frameName = button.Name:gsub("Button", "") -- Remove 'Button' suffix to get frame name
	
				-- Hide all frames first
				for _, tab in pairs(tabs:GetChildren()) do
					if tab:IsA("Frame") then
						tab.Visible = false
					end
				end
	
				-- Hide ScrollingFrame only if it's not the one clicked
				for _, scrollFrame in pairs(tabs:GetChildren()) do
					if scrollFrame:IsA("ScrollingFrame") and scrollFrame ~= buttons then
						scrollFrame.Visible = false
					end
				end
	
				-- Show the corresponding target frame based on the button clicked
				local targetFrame = tabs:FindFirstChild(frameName)
				if targetFrame then
					targetFrame.Visible = true
				end
	
				-- Show the specific scrolling frame if the target frame is inside it
				if targetFrame and targetFrame:IsA("ScrollingFrame") then
					targetFrame.Visible = true
				end
			end)
		end
	end
	
	-- Set up button logic for the buttons in ScrollingFrame
	for _, button in pairs(buttons:GetChildren()) do
		setupButtonLogic(button)
	end
	
	-- Set up button logic for any future buttons added to the ScrollingFrame
	buttons.ChildAdded:Connect(function(child)
		setupButtonLogic(child)
	end)
	
end
coroutine.wrap(YCNVHSW_fake_script)()
local function VULRJR_fake_script() -- FPS.LocalScript 
	local script = Instance.new('LocalScript', FPS)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local RunService = game:GetService("RunService")
	local player = game.Players.LocalPlayer
	
	local fpsLabel = script.Parent
	
	-- Update every frame
	RunService.RenderStepped:Connect(function(deltaTime)
		local fps = math.floor(1 / deltaTime)
		fpsLabel.Text = "FPS: " .. fps
	end)
	
end
coroutine.wrap(VULRJR_fake_script)()
local function XZNZB_fake_script() -- Logo.LocalScript 
	local script = Instance.new('LocalScript', Logo)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local imageLabel = game.Players.LocalPlayer.PlayerGui.VEXGUI:WaitForChild("Logo") -- Assuming the image is the parent
	local aspectRatio = 1 -- 500 / 500 = 1
	local ts = game:GetService("TweenService")
	
	local ti = TweenInfo.new(3.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.In)
	
	
	-- Create the UIAspectRatioConstraint
	local aspectConstraint = Instance.new("UIAspectRatioConstraint")
	aspectConstraint.AspectRatio = aspectRatio
	aspectConstraint.Parent = imageLabel
	
	-- Set anchor point to center
	imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	
	-- Set size and center position
	imageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
	
	if imageLabel then
		imageLabel.Visible = true
		imageLabel.Size = UDim2.new(0, 0, 0, 0)
		ts:Create(imageLabel, ti, {Size = UDim2.new(1, 0, 1, 0)}):Play()
	end
end
coroutine.wrap(XZNZB_fake_script)()
local function SSUGLT_fake_script() -- ChatLog.Drag 
	local script = Instance.new('LocalScript', ChatLog)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UserInputService = game:GetService('UserInputService')
	
	local frame = script.Parent
	
	local leadFrame = Instance.new('Frame') do
		leadFrame.AnchorPoint = frame.AnchorPoint
		leadFrame.Position = frame.Position
		leadFrame.Size = frame.Size
		leadFrame.Name = `Lead {frame.Name}`
		leadFrame.Visible = false
		leadFrame.Parent = frame.Parent
	end
	
	local screenGui = frame:FindFirstAncestorOfClass('ScreenGui')
	
	local inputChanged = nil
	local inputEnded = nil
	
	local function getBoundsRelations(guiObject : GuiObject)
		local bounds = screenGui.AbsoluteSize
		local topLeft = screenGui.IgnoreGuiInset and guiObject.AbsolutePosition + Vector2.new(0, 36) or guiObject.AbsolutePosition
		local bottomRight = topLeft + guiObject.AbsoluteSize
	
		local boundRelations = {
			Top = topLeft.Y < 0 and math.abs(topLeft.Y) or nil,
			Left = topLeft.X < 0 and math.abs(topLeft.X) or nil,
			Right = bottomRight.X > bounds.X and math.abs(bottomRight.X - bounds.X) or nil,
			Bottom = bottomRight.Y > bounds.Y and math.abs(bottomRight.Y - bounds.Y) or nil,
		}
	
		return (not boundRelations.Top
			and not boundRelations.Bottom
			and not boundRelations.Left
			and not boundRelations.Right), boundRelations
	end
	
	frame.InputBegan:Connect(function(inputObject : InputObject)
		if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
	
			local lastMousePosition = UserInputService:GetMouseLocation()
			local goalPosition = frame.Position
	
			inputChanged = UserInputService.InputChanged:Connect(function(input : InputObject, event : boolean)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					local currentMousePosition = UserInputService:GetMouseLocation()
					local mouseDelta = currentMousePosition - lastMousePosition
	
					goalPosition += UDim2.fromOffset(mouseDelta.X, mouseDelta.Y)
	
					leadFrame.Position = goalPosition
	
					local isInBounds, relations = getBoundsRelations(leadFrame)
	
					if not isInBounds then
						local x = (relations.Left or 0) - (relations.Right or 0)
						local y = (relations.Top or 0) - (relations.Bottom or 0)
	
						goalPosition += UDim2.fromOffset(x, y)
					end
	
					frame.Position = goalPosition
					lastMousePosition = currentMousePosition
				end
			end)
	
			inputEnded = frame.InputEnded:Connect(function(input : InputObject)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					inputChanged:Disconnect()
					inputChanged = nil
	
					inputEnded:Disconnect()
					inputEnded = nil
				end
			end)
		end
	end)
	
	frame.Destroying:Once(function()
	
		leadFrame = leadFrame:Destroy()
	
		if inputChanged  then
			inputChanged:Disconnect()
			inputChanged = nil
		end
	
		if inputEnded then
			inputEnded:Disconnect()
			inputEnded = nil
		end
	end)
end
coroutine.wrap(SSUGLT_fake_script)()
local function XIBJP_fake_script() -- ScrollingMainFrame.ChatLogger 
	local script = Instance.new('LocalScript', ScrollingMainFrame)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Players = game:GetService("Players")
	local TextChatService = game:GetService("TextChatService")
	
	local localPlayer = Players.LocalPlayer
	local playerGui = localPlayer:WaitForChild("PlayerGui")
	
	if playerGui:FindFirstChild("ChatLogGui") then
		playerGui:FindFirstChild("ChatLogGui"):Destroy()
	end
	
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "ChatLogGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui
	
	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Name = "ChatLog"
	scrollingFrame.Size = UDim2.new(1, 0, 12.785, 0)
	scrollingFrame.Position = UDim2.new(0, 0, 1, 0)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.BackgroundTransparency = 0.5
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(48,48,48)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.Parent = script.Parent.Parent
	
	local layout = Instance.new("UIListLayout")
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 4)
	layout.Parent = scrollingFrame
	
	local function isCommandMessage(message)
		local firstChar = string.sub(message, 1, 1)
		return firstChar == ":" or firstChar == ";" or firstChar == "/" or firstChar == "." or firstChar == "!" or firstChar == "?"
	end
	
	local runservice = game:GetService("RunService")
	
	local function createTooltip(text, messageLabel)
		local tooltip = Instance.new("TextLabel")
		tooltip.Size = UDim2.new(0, 300, 0, 40)
		tooltip.BackgroundTransparency = 0.5
		tooltip.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		tooltip.TextColor3 = Color3.fromRGB(255, 255, 255)
		tooltip.TextSize = 14
		tooltip.TextWrapped = true
		tooltip.Text = text
		tooltip.Font = Enum.Font.SourceSans
		tooltip.Parent = screenGui
	
		runservice.RenderStepped:Connect(function()
			tooltip.Position = UDim2.new(0, localPlayer:GetMouse().X + 10, 0, localPlayer:GetMouse().Y + 10)
		end)
	
		messageLabel.MouseLeave:Connect(function()
			tooltip:Destroy()
		end)
	end
	
	local function addChatMessage(speakerName, messageText)
		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, -10, 0, 20)
		messageLabel.BackgroundTransparency = 1
		messageLabel.TextXAlignment = Enum.TextXAlignment.Left
		messageLabel.Font = Enum.Font.SourceSans
		messageLabel.TextSize = 16
		messageLabel.TextWrapped = true
		messageLabel.TextTruncate = Enum.TextTruncate.AtEnd
		messageLabel.RichText = true
		messageLabel.Text = "<b>" .. speakerName .. "</b>: " .. messageText
		messageLabel.TextColor3 = isCommandMessage(messageText) and Color3.fromRGB(255, 85, 85) or Color3.fromRGB(255, 255, 255)
		messageLabel.Parent = scrollingFrame
	
		if messageText:len() > 40 then
			messageLabel.MouseEnter:Connect(function()
				createTooltip(messageText, messageLabel)
			end)
		end
	
		task.wait()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
		scrollingFrame.CanvasPosition = Vector2.new(0, scrollingFrame.CanvasSize.Y.Offset)
	end
	
	local loggedMessageIds = {}
	
	TextChatService.OnIncomingMessage = function(message)
		if message.TextSource then
			if not loggedMessageIds[message.MessageId] then
				loggedMessageIds[message.MessageId] = true
				local player = Players:GetPlayerByUserId(message.TextSource.UserId)
				if player then
					local isWhisper = message.TextChannel and message.TextChannel.Name:match("^RBXWhisper:%d+_%d+$")
					local prefix = isWhisper and "[PM] " or ""
					addChatMessage(prefix .. player.Name, message.Text)
				end
			end
		end
	end
	
end
coroutine.wrap(XIBJP_fake_script)()
-- VEXGUI.ReExecute is disabled.
