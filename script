-- NOTE: THIS FILE IS TOO BIG TO FIT IN ONE SCRIPT SO IT IS SPLIT UP IN THIS FOLDER, COPY EACH SCRIPT AFTER ANOTHER TO FORM THE FULL SCRIPT (EX: Split_1, then Split_2, then Split_3, etc.)-- Generated using RoadToGlory's Converter v1.1 (RoadToGlory#9879)

-- Instances:

local Converted = {
	["_VEXGUI"] = Instance.new("ScreenGui");
	["_Main"] = Instance.new("Frame");
	["_Close"] = Instance.new("TextButton");
	["_UIGradient"] = Instance.new("UIGradient");
	["_VexFrame"] = Instance.new("Frame");
	["_Tabs"] = Instance.new("Folder");
	["_Home"] = Instance.new("Frame");
	["_PlayerImage"] = Instance.new("ImageLabel");
	["_Thanks"] = Instance.new("TextLabel");
	["_RGBLabelScript"] = Instance.new("LocalScript");
	["_Info"] = Instance.new("Folder");
	["_PlrName"] = Instance.new("TextLabel");
	["_AccAge"] = Instance.new("TextLabel");
	["_plrid"] = Instance.new("TextLabel");
	["_VersionLabel"] = Instance.new("TextLabel");
	["_ChangeTheme"] = Instance.new("Frame");
	["_Header"] = Instance.new("TextLabel");
	["_Colors"] = Instance.new("Folder");
	["_Pink"] = Instance.new("TextButton");
	["_Blue"] = Instance.new("TextButton");
	["_Purple"] = Instance.new("TextButton");
	["_Yellow"] = Instance.new("TextButton");
	["_White"] = Instance.new("TextButton");
	["_Red"] = Instance.new("TextButton");
	["_Orange"] = Instance.new("TextButton");
	["_Green"] = Instance.new("TextButton");
	["_DarkMode"] = Instance.new("TextButton");
	["_CustomColor"] = Instance.new("TextBox");
	["_ThemeScript"] = Instance.new("LocalScript");
	["_VexButtons"] = Instance.new("Folder");
	["_ScrollingFrame"] = Instance.new("ScrollingFrame");
	["_HomeButton"] = Instance.new("TextButton");
	["_UIGradient1"] = Instance.new("UIGradient");
	["_GeneralButton"] = Instance.new("TextButton");
	["_UIGradient2"] = Instance.new("UIGradient");
	["_ClientButton"] = Instance.new("TextButton");
	["_UIGradient3"] = Instance.new("UIGradient");
	["_SpectateButton"] = Instance.new("TextButton");
	["_UIGradient4"] = Instance.new("UIGradient");
	["_TeleportButton"] = Instance.new("TextButton");
	["_UIGradient5"] = Instance.new("UIGradient");
	["_TargetButton"] = Instance.new("TextButton");
	["_UIGradient6"] = Instance.new("UIGradient");
	["_GiveToolButton"] = Instance.new("TextButton");
	["_UIGradient7"] = Instance.new("UIGradient");
	["_ChatBypassButton"] = Instance.new("TextButton");
	["_UIGradient8"] = Instance.new("UIGradient");
	["_NotesButton"] = Instance.new("TextButton");
	["_UIGradient9"] = Instance.new("UIGradient");
	["_CreditsButton"] = Instance.new("TextButton");
	["_UIGradient10"] = Instance.new("UIGradient");
	["_Settings"] = Instance.new("TextButton");
	["_UIGradient11"] = Instance.new("UIGradient");
	["_TextHandler"] = Instance.new("LocalScript");
	["_Spectate"] = Instance.new("Frame");
	["_enterButton"] = Instance.new("TextButton");
	["_UICorner"] = Instance.new("UICorner");
	["_SpectateScript"] = Instance.new("LocalScript");
	["_UIGradient12"] = Instance.new("UIGradient");
	["_TextBox"] = Instance.new("TextBox");
	["_UICorner1"] = Instance.new("UICorner");
	["_UICorner2"] = Instance.new("UICorner");
	["_UIGradient13"] = Instance.new("UIGradient");
	["_resetButton"] = Instance.new("TextButton");
	["_UICorner3"] = Instance.new("UICorner");
	["_UIGradient14"] = Instance.new("UIGradient");
	["_Teleport"] = Instance.new("Frame");
	["_teleportenter"] = Instance.new("TextButton");
	["_UICorner4"] = Instance.new("UICorner");
	["_TeleportScript"] = Instance.new("LocalScript");
	["_UIGradient15"] = Instance.new("UIGradient");
	["_ImageLabel"] = Instance.new("ImageLabel");
	["_TextBox1"] = Instance.new("TextBox");
	["_UICorner5"] = Instance.new("UICorner");
	["_UICorner6"] = Instance.new("UICorner");
	["_UIGradient16"] = Instance.new("UIGradient");
	["_Credits"] = Instance.new("Frame");
	["_Header1"] = Instance.new("TextLabel");
	["_Names"] = Instance.new("Folder");
	["_Participant"] = Instance.new("TextLabel");
	["_Participant1"] = Instance.new("TextLabel");
	["_Thanks1"] = Instance.new("TextLabel");
	["_General"] = Instance.new("ScrollingFrame");
	["_FlingButton"] = Instance.new("TextButton");
	["_FlingScript"] = Instance.new("LocalScript");
	["_UIGradient17"] = Instance.new("UIGradient");
	["_TextLabel"] = Instance.new("TextLabel");
	["_SpazButton"] = Instance.new("TextButton");
	["_SpazScript"] = Instance.new("LocalScript");
	["_UIGradient18"] = Instance.new("UIGradient");
	["_FreezeButton"] = Instance.new("TextButton");
	["_FreezeScript"] = Instance.new("LocalScript");
	["_UIGradient19"] = Instance.new("UIGradient");
	["_XRayButton"] = Instance.new("TextButton");
	["_XRayScript"] = Instance.new("LocalScript");
	["_UIGradient20"] = Instance.new("UIGradient");
	["_JumpPowerButton"] = Instance.new("TextButton");
	["_JumpPowerScript"] = Instance.new("LocalScript");
	["_UIGradient21"] = Instance.new("UIGradient");
	["_WalkSpeedButton"] = Instance.new("TextButton");
	["_WalkspeedScript"] = Instance.new("LocalScript");
	["_UIGradient22"] = Instance.new("UIGradient");
	["_ToggleTexturesButton"] = Instance.new("TextButton");
	["_TexturesButton"] = Instance.new("LocalScript");
	["_UIGradient23"] = Instance.new("UIGradient");
	["_InfJump"] = Instance.new("TextButton");
	["_InfJumpScript"] = Instance.new("LocalScript");
	["_UIGradient24"] = Instance.new("UIGradient");
	["_SwimInAirButton"] = Instance.new("TextButton");
	["_SwimInAirScript"] = Instance.new("LocalScript");
	["_UIGradient25"] = Instance.new("UIGradient");
	["_GravityButton"] = Instance.new("TextButton");
	["_GravityScript"] = Instance.new("LocalScript");
	["_UIGradient26"] = Instance.new("UIGradient");
	["_SitButton"] = Instance.new("TextButton");
	["_SitScript"] = Instance.new("LocalScript");
	["_UIGradient27"] = Instance.new("UIGradient");
	["_ParalyzeButton"] = Instance.new("TextButton");
	["_ParalyzeScript"] = Instance.new("LocalScript");
	["_UIGradient28"] = Instance.new("UIGradient");
	["_HelicopterButton"] = Instance.new("TextButton");
	["_HelicopterScript"] = Instance.new("LocalScript");
	["_UIGradient29"] = Instance.new("UIGradient");
	["_MoonwalkButton"] = Instance.new("TextButton");
	["_MoonwalkScript"] = Instance.new("LocalScript");
	["_UIGradient30"] = Instance.new("UIGradient");
	["_SeizureButton"] = Instance.new("TextButton");
	["_SeizureScript"] = Instance.new("LocalScript");
	["_UIGradient31"] = Instance.new("UIGradient");
	["_NoclipButton"] = Instance.new("TextButton");
	["_NoclipScript"] = Instance.new("LocalScript");
	["_UIGradient32"] = Instance.new("UIGradient");
	["_FlyButton"] = Instance.new("TextButton");
	["_FlyScript"] = Instance.new("LocalScript");
	["_UIGradient33"] = Instance.new("UIGradient");
	["_AntiVoidButton"] = Instance.new("TextButton");
	["_AntivoidScript"] = Instance.new("LocalScript");
	["_UIGradient34"] = Instance.new("UIGradient");
	["_ChatSpam"] = Instance.new("TextButton");
	["_ChatSpamScript"] = Instance.new("LocalScript");
	["_UIGradient35"] = Instance.new("UIGradient");
	["_ChatlogButton"] = Instance.new("TextButton");
	["_ChatlogScriptToggle"] = Instance.new("LocalScript");
	["_UIGradient36"] = Instance.new("UIGradient");
	["_ClickToMove"] = Instance.new("TextButton");
	["_ClickScript"] = Instance.new("LocalScript");
	["_UIGradient37"] = Instance.new("UIGradient");
	["_DashButton"] = Instance.new("TextButton");
	["_DashScript"] = Instance.new("LocalScript");
	["_UIGradient38"] = Instance.new("UIGradient");
	["_ESP"] = Instance.new("TextButton");
	["_ESPscriptnew"] = Instance.new("LocalScript");
	["_ESPscript"] = Instance.new("LocalScript");
	["_UIGradient39"] = Instance.new("UIGradient");
	["_FakeLagButton"] = Instance.new("TextButton");
	["_FakeLagScript"] = Instance.new("LocalScript");
	["_UIGradient40"] = Instance.new("UIGradient");
	["_FieldOfViewButton"] = Instance.new("TextButton");
	["_FOVscript"] = Instance.new("LocalScript");
	["_UIGradient41"] = Instance.new("UIGradient");
	["_AntiFlingButton"] = Instance.new("TextButton");
	["_AntiFlingScript"] = Instance.new("LocalScript");
	["_UIGradient42"] = Instance.new("UIGradient");
	["_Notes"] = Instance.new("Frame");
	["_TextBox2"] = Instance.new("TextBox");
	["_NotesSaver"] = Instance.new("LocalScript");
	["_Settings1"] = Instance.new("Frame");
	["_Header2"] = Instance.new("TextLabel");
	["_Buttons"] = Instance.new("Folder");
	["_Panic"] = Instance.new("TextButton");
	["_AntiFlingScript1"] = Instance.new("LocalScript");
	["_UIGradient43"] = Instance.new("UIGradient");
	["_DiscordLink"] = Instance.new("TextButton");
	["_DiscordLinkScript"] = Instance.new("LocalScript");
	["_UIGradient44"] = Instance.new("UIGradient");
	["_Client"] = Instance.new("ScrollingFrame");
	["_DihButton"] = Instance.new("TextButton");
	["_UIGradient45"] = Instance.new("UIGradient");
	["_ppscript"] = Instance.new("LocalScript");
	["_TextLabel1"] = Instance.new("TextLabel");
	["_RainbowSkinButton"] = Instance.new("TextButton");
	["_RainbowSkinScript"] = Instance.new("LocalScript");
	["_UIGradient46"] = Instance.new("UIGradient");
	["_FartButton"] = Instance.new("TextButton");
	["_UIGradient47"] = Instance.new("UIGradient");
	["_fartscript"] = Instance.new("LocalScript");
	["_NightButton"] = Instance.new("TextButton");
	["_NightScript"] = Instance.new("LocalScript");
	["_UIGradient48"] = Instance.new("UIGradient");
	["_DayButton"] = Instance.new("TextButton");
	["_DayScript"] = Instance.new("LocalScript");
	["_UIGradient49"] = Instance.new("UIGradient");
	["_RemoveFogButton"] = Instance.new("TextButton");
	["_RemoveFog"] = Instance.new("LocalScript");
	["_UIGradient50"] = Instance.new("UIGradient");
	["_ClickToDeleteButton"] = Instance.new("TextButton");
	["_UIGradient51"] = Instance.new("UIGradient");
	["_clicktodeletescript"] = Instance.new("LocalScript");
	["_ClickToCollisionButton"] = Instance.new("TextButton");
	["_UIGradient52"] = Instance.new("UIGradient");
	["_clicktodeletescript1"] = Instance.new("LocalScript");
	["_ButtonModule"] = Instance.new("ModuleScript");
	["_TextBoxModule"] = Instance.new("ModuleScript");
	["_TextBoxs"] = Instance.new("Folder");
	["_TextBoxFrame"] = Instance.new("Frame");
	["_TypeBelow"] = Instance.new("TextLabel");
	["_TextBox3"] = Instance.new("TextBox");
	["_IntTextBoxFrame"] = Instance.new("Frame");
	["_TypeBelow1"] = Instance.new("TextLabel");
	["_TextBox4"] = Instance.new("TextBox");
	["_Close1"] = Instance.new("TextButton");
	["_NotificationModule"] = Instance.new("ModuleScript");
	["_Title"] = Instance.new("TextLabel");
	["_Drag"] = Instance.new("LocalScript");
	["_OpenAndClose"] = Instance.new("LocalScript");
	["_UIGradient53"] = Instance.new("UIGradient");
	["_FPS"] = Instance.new("TextLabel");
	["_LocalScript"] = Instance.new("LocalScript");
	["_Logo"] = Instance.new("ImageLabel");
	["_LocalScript1"] = Instance.new("LocalScript");
	["_UICorner7"] = Instance.new("UICorner");
	["_ChatLog"] = Instance.new("Frame");
	["_UIGradient54"] = Instance.new("UIGradient");
	["_Text"] = Instance.new("Folder");
	["_Chats"] = Instance.new("Folder");
	["_Other"] = Instance.new("Folder");
	["_Title1"] = Instance.new("TextLabel");
	["_Drag1"] = Instance.new("LocalScript");
	["_ScrollingMainFrame"] = Instance.new("ScrollingFrame");
	["_ChatLogger"] = Instance.new("LocalScript");
	["_Template"] = Instance.new("Folder");
	["_UserSent"] = Instance.new("TextLabel");
	["_MessageSent"] = Instance.new("TextLabel");
	["_DeathText"] = Instance.new("TextLabel");
	["_ReExecute"] = Instance.new("LocalScript");
	["_NotificationTop"] = Instance.new("Frame");
	["_UICorner8"] = Instance.new("UICorner");
	["_Text1"] = Instance.new("Folder");
	["_Title2"] = Instance.new("TextLabel");
	["_Text2"] = Instance.new("TextLabel");
	["_GUI"] = Instance.new("TextLabel");
	["_UIGradient55"] = Instance.new("UIGradient");
}

-- Properties:

Converted["_VEXGUI"].ResetOnSpawn = false
Converted["_VEXGUI"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Converted["_VEXGUI"].Name = "VEXGUI"
Converted["_VEXGUI"].Parent = game:GetService("CoreGui")

Converted["_Main"].BackgroundColor3 = Color3.fromRGB(155.00000596046448, 57.00000040233135, 235.0000011920929)
Converted["_Main"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Main"].BorderSizePixel = 0
Converted["_Main"].Position = UDim2.new(0.291692317, 0, 0.269984961, 0)
Converted["_Main"].Size = UDim2.new(0.322498202, 0, 0.0228989273, 0)
Converted["_Main"].Name = "Main"
Converted["_Main"].Parent = Converted["_VEXGUI"]

Converted["_Close"].Font = Enum.Font.SourceSansBold
Converted["_Close"].Text = "X"
Converted["_Close"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Close"].TextSize = 18
Converted["_Close"].TextWrapped = true
Converted["_Close"].BackgroundColor3 = Color3.fromRGB(84.00000259280205, 5.000000176951289, 5.000000176951289)
Converted["_Close"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Close"].BorderSizePixel = 0
Converted["_Close"].Size = UDim2.new(0.0439009927, 0, 1.00000215, 0)
Converted["_Close"].Name = "Close"
Converted["_Close"].Parent = Converted["_Main"]

Converted["_UIGradient"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(125.00000014901161, 125.00000014901161, 125.00000014901161))
}
Converted["_UIGradient"].Rotation = 90
Converted["_UIGradient"].Parent = Converted["_Close"]

Converted["_VexFrame"].BackgroundColor3 = Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155)
Converted["_VexFrame"].BackgroundTransparency = 0.4000000059604645
Converted["_VexFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_VexFrame"].BorderSizePixel = 0
Converted["_VexFrame"].Position = UDim2.new(0, 0, 0.973731935, 0)
Converted["_VexFrame"].Size = UDim2.new(0.999999821, 0, 12.8323545, 0)
Converted["_VexFrame"].Name = "VexFrame"
Converted["_VexFrame"].Parent = Converted["_Main"]

Converted["_Tabs"].Name = "Tabs"
Converted["_Tabs"].Parent = Converted["_VexFrame"]

Converted["_Home"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Home"].BackgroundTransparency = 0.5
Converted["_Home"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Home"].BorderSizePixel = 0
Converted["_Home"].Position = UDim2.new(0.168624222, 0, 0.00204701652, 0)
Converted["_Home"].Size = UDim2.new(0.831375957, 0, 0.997952998, 0)
Converted["_Home"].Name = "Home"
Converted["_Home"].Parent = Converted["_Tabs"]

Converted["_PlayerImage"].Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Converted["_PlayerImage"].ImageContent = Content
Converted["_PlayerImage"].BackgroundColor3 = Color3.fromRGB(44.000001177191734, 44.000001177191734, 44.000001177191734)
Converted["_PlayerImage"].BackgroundTransparency = 0.5
Converted["_PlayerImage"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_PlayerImage"].BorderSizePixel = 0
Converted["_PlayerImage"].Position = UDim2.new(0.0291989986, 0, 0.222916275, 0)
Converted["_PlayerImage"].Size = UDim2.new(0.164554194, 0, 0.330308825, 0)
Converted["_PlayerImage"].Name = "PlayerImage"
Converted["_PlayerImage"].Parent = Converted["_Home"]

Converted["_Thanks"].Font = Enum.Font.SourceSansBold
Converted["_Thanks"].Text = "Thanks for using VEXSPLOIT!"
Converted["_Thanks"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Thanks"].TextDirection = Enum.TextDirection.LeftToRight
Converted["_Thanks"].TextScaled = true
Converted["_Thanks"].TextSize = 14
Converted["_Thanks"].TextTruncate = Enum.TextTruncate.SplitWord
Converted["_Thanks"].TextWrapped = true
Converted["_Thanks"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Thanks"].BackgroundTransparency = 1
Converted["_Thanks"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Thanks"].BorderSizePixel = 0
Converted["_Thanks"].Position = UDim2.new(0.358504444, 0, 0.0347208269, 0)
Converted["_Thanks"].Size = UDim2.new(0.417319775, 0, 0.100000009, 0)
Converted["_Thanks"].Name = "Thanks"
Converted["_Thanks"].Parent = Converted["_Home"]

Converted["_Info"].Name = "Info"
Converted["_Info"].Parent = Converted["_Home"]

Converted["_PlrName"].Font = Enum.Font.SourceSansBold
Converted["_PlrName"].Text = "Welcome"
Converted["_PlrName"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_PlrName"].TextScaled = true
Converted["_PlrName"].TextSize = 14
Converted["_PlrName"].TextWrapped = true
Converted["_PlrName"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_PlrName"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_PlrName"].BackgroundTransparency = 1
Converted["_PlrName"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_PlrName"].BorderSizePixel = 0
Converted["_PlrName"].Position = UDim2.new(0.0177175831, 0, 0.56527257, 0)
Converted["_PlrName"].Size = UDim2.new(0.188666403, 0, 0.143952146, 0)
Converted["_PlrName"].Name = "PlrName"
Converted["_PlrName"].Parent = Converted["_Info"]

Converted["_AccAge"].Font = Enum.Font.SourceSansBold
Converted["_AccAge"].Text = "Your account age is"
Converted["_AccAge"].TextColor3 = Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)
Converted["_AccAge"].TextDirection = Enum.TextDirection.LeftToRight
Converted["_AccAge"].TextScaled = true
Converted["_AccAge"].TextSize = 14
Converted["_AccAge"].TextWrapped = true
Converted["_AccAge"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_AccAge"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AccAge"].BackgroundTransparency = 1
Converted["_AccAge"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_AccAge"].BorderSizePixel = 0
Converted["_AccAge"].Position = UDim2.new(0.0177176222, 0, 0.704065561, 0)
Converted["_AccAge"].Size = UDim2.new(0.188666359, 0, 0.202641979, 0)
Converted["_AccAge"].Name = "AccAge"
Converted["_AccAge"].Parent = Converted["_Info"]

Converted["_plrid"].Font = Enum.Font.SourceSansBold
Converted["_plrid"].Text = "USER ID"
Converted["_plrid"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_plrid"].TextWrapped = true
Converted["_plrid"].TextXAlignment = Enum.TextXAlignment.Right
Converted["_plrid"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_plrid"].BackgroundTransparency = 1
Converted["_plrid"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_plrid"].BorderSizePixel = 0
Converted["_plrid"].Position = UDim2.new(0.670748353, 0, 0.903230071, 0)
Converted["_plrid"].Size = UDim2.new(0.327473313, 0, 0.0474019833, 0)
Converted["_plrid"].Name = "plrid"
Converted["_plrid"].Parent = Converted["_Info"]

Converted["_VersionLabel"].Font = Enum.Font.SourceSans
Converted["_VersionLabel"].Text = "VERSION 0.1"
Converted["_VersionLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_VersionLabel"].TextScaled = true
Converted["_VersionLabel"].TextSize = 14
Converted["_VersionLabel"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_VersionLabel"].TextWrapped = true
Converted["_VersionLabel"].TextXAlignment = Enum.TextXAlignment.Right
Converted["_VersionLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_VersionLabel"].BackgroundTransparency = 1
Converted["_VersionLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_VersionLabel"].BorderSizePixel = 0
Converted["_VersionLabel"].Position = UDim2.new(0.722528696, 0, 0.948783696, 0)
Converted["_VersionLabel"].Size = UDim2.new(0.275692999, 0, 0.0512164049, 0)
Converted["_VersionLabel"].Name = "VersionLabel"
Converted["_VersionLabel"].Parent = Converted["_Info"]

Converted["_ChangeTheme"].BackgroundColor3 = Color3.fromRGB(104.00000900030136, 104.00000900030136, 104.00000900030136)
Converted["_ChangeTheme"].BackgroundTransparency = 0.699999988079071
Converted["_ChangeTheme"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChangeTheme"].BorderSizePixel = 0
Converted["_ChangeTheme"].Position = UDim2.new(0.266876072, 0, 0.182070568, 0)
Converted["_ChangeTheme"].Size = UDim2.new(0.599764228, 0, 0.682624638, 0)
Converted["_ChangeTheme"].Name = "ChangeTheme"
Converted["_ChangeTheme"].Parent = Converted["_Home"]

Converted["_Header"].Font = Enum.Font.SourceSansBold
Converted["_Header"].Text = "Theme"
Converted["_Header"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Header"].TextScaled = true
Converted["_Header"].TextSize = 14
Converted["_Header"].TextWrapped = true
Converted["_Header"].BackgroundColor3 = Color3.fromRGB(39.00000147521496, 39.00000147521496, 39.00000147521496)
Converted["_Header"].BackgroundTransparency = 0.6000000238418579
Converted["_Header"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Header"].BorderSizePixel = 0
Converted["_Header"].Position = UDim2.new(-1.81057771e-06, 0, 0, 0)
Converted["_Header"].Size = UDim2.new(1.00000024, 0, 0.129635647, 0)
Converted["_Header"].Name = "Header"
Converted["_Header"].Parent = Converted["_ChangeTheme"]

Converted["_Colors"].Name = "Colors"
Converted["_Colors"].Parent = Converted["_ChangeTheme"]

Converted["_Pink"].Font = Enum.Font.SourceSans
Converted["_Pink"].Text = ""
Converted["_Pink"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Pink"].TextSize = 14
Converted["_Pink"].BackgroundColor3 = Color3.fromRGB(255, 0, 255)
Converted["_Pink"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Pink"].BorderSizePixel = 0
Converted["_Pink"].Position = UDim2.new(0.763584077, 0, 0.2074489, 0)
Converted["_Pink"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Pink"].Name = "Pink"
Converted["_Pink"].Parent = Converted["_Colors"]

Converted["_Blue"].Font = Enum.Font.SourceSans
Converted["_Blue"].Text = ""
Converted["_Blue"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Blue"].TextSize = 14
Converted["_Blue"].BackgroundColor3 = Color3.fromRGB(0, 0, 255)
Converted["_Blue"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Blue"].BorderSizePixel = 0
Converted["_Blue"].Position = UDim2.new(0.637298524, 0, 0.2074489, 0)
Converted["_Blue"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Blue"].Name = "Blue"
Converted["_Blue"].Parent = Converted["_Colors"]

Converted["_Purple"].Font = Enum.Font.SourceSans
Converted["_Purple"].Text = ""
Converted["_Purple"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Purple"].TextSize = 14
Converted["_Purple"].BackgroundColor3 = Color3.fromRGB(85.0000025331974, 0, 127.00000762939453)
Converted["_Purple"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Purple"].BorderSizePixel = 0
Converted["_Purple"].Position = UDim2.new(0.88604331, 0, 0.2074489, 0)
Converted["_Purple"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Purple"].Name = "Purple"
Converted["_Purple"].Parent = Converted["_Colors"]

Converted["_Yellow"].Font = Enum.Font.SourceSans
Converted["_Yellow"].Text = ""
Converted["_Yellow"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Yellow"].TextSize = 14
Converted["_Yellow"].BackgroundColor3 = Color3.fromRGB(255, 255, 0)
Converted["_Yellow"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Yellow"].BorderSizePixel = 0
Converted["_Yellow"].Position = UDim2.new(0.392380118, 0, 0.2074489, 0)
Converted["_Yellow"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Yellow"].Name = "Yellow"
Converted["_Yellow"].Parent = Converted["_Colors"]

Converted["_White"].Font = Enum.Font.SourceSans
Converted["_White"].Text = ""
Converted["_White"].TextColor3 = Color3.fromRGB(0, 0, 0)
Converted["_White"].TextSize = 14
Converted["_White"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_White"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_White"].BorderSizePixel = 0
Converted["_White"].Position = UDim2.new(0.0296642855, 0, 0.207449019, 0)
Converted["_White"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_White"].Name = "White"
Converted["_White"].Parent = Converted["_Colors"]

Converted["_Red"].Font = Enum.Font.SourceSans
Converted["_Red"].Text = ""
Converted["_Red"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Red"].TextSize = 14
Converted["_Red"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Red"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Red"].BorderSizePixel = 0
Converted["_Red"].Position = UDim2.new(0.15128848, 0, 0.207449019, 0)
Converted["_Red"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Red"].Name = "Red"
Converted["_Red"].Parent = Converted["_Colors"]

Converted["_Orange"].Font = Enum.Font.SourceSans
Converted["_Orange"].Text = ""
Converted["_Orange"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Orange"].TextSize = 14
Converted["_Orange"].BackgroundColor3 = Color3.fromRGB(255, 127.5, 0)
Converted["_Orange"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Orange"].BorderSizePixel = 0
Converted["_Orange"].Position = UDim2.new(0.269920915, 0, 0.2074489, 0)
Converted["_Orange"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Orange"].Name = "Orange"
Converted["_Orange"].Parent = Converted["_Colors"]

Converted["_Green"].Font = Enum.Font.SourceSans
Converted["_Green"].Text = ""
Converted["_Green"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_Green"].TextSize = 14
Converted["_Green"].BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Converted["_Green"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Green"].BorderSizePixel = 0
Converted["_Green"].Position = UDim2.new(0.518666148, 0, 0.2074489, 0)
Converted["_Green"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_Green"].Name = "Green"
Converted["_Green"].Parent = Converted["_Colors"]

Converted["_DarkMode"].Font = Enum.Font.SourceSans
Converted["_DarkMode"].Text = ""
Converted["_DarkMode"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_DarkMode"].TextSize = 14
Converted["_DarkMode"].BackgroundColor3 = Color3.fromRGB(45.00000111758709, 45.00000111758709, 45.00000111758709)
Converted["_DarkMode"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DarkMode"].BorderSizePixel = 0
Converted["_DarkMode"].Position = UDim2.new(0.0288293734, 0, 0.463473767, 0)
Converted["_DarkMode"].Size = UDim2.new(0.0930000022, 0, 0.170000002, 0)
Converted["_DarkMode"].Name = "DarkMode"
Converted["_DarkMode"].Parent = Converted["_Colors"]

Converted["_CustomColor"].Font = Enum.Font.SourceSans
Converted["_CustomColor"].PlaceholderColor3 = Color3.fromRGB(199.00001853704453, 199.00001853704453, 199.00001853704453)
Converted["_CustomColor"].PlaceholderText = "Custom Color (255,255,255)"
Converted["_CustomColor"].Text = ""
Converted["_CustomColor"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_CustomColor"].TextScaled = true
Converted["_CustomColor"].TextSize = 14
Converted["_CustomColor"].TextWrapped = true
Converted["_CustomColor"].BackgroundColor3 = Color3.fromRGB(90.00000223517418, 90.00000223517418, 90.00000223517418)
Converted["_CustomColor"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_CustomColor"].BorderSizePixel = 0
Converted["_CustomColor"].Position = UDim2.new(0.0229603983, 0, 0.717182338, 0)
Converted["_CustomColor"].Size = UDim2.new(0.952256024, 0, 0.200761169, 0)
Converted["_CustomColor"].Name = "CustomColor"
Converted["_CustomColor"].Parent = Converted["_ChangeTheme"]

Converted["_VexButtons"].Name = "VexButtons"
Converted["_VexButtons"].Parent = Converted["_Tabs"]

Converted["_ScrollingFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].ScrollBarThickness = 5
Converted["_ScrollingFrame"].Active = true
Converted["_ScrollingFrame"].BackgroundColor3 = Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155)
Converted["_ScrollingFrame"].BackgroundTransparency = 0.30000001192092896
Converted["_ScrollingFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingFrame"].BorderSizePixel = 0
Converted["_ScrollingFrame"].Position = UDim2.new(1.76217313e-07, 0, 0.00204709591, 0)
Converted["_ScrollingFrame"].Size = UDim2.new(0.168854252, 0, 0.997953355, 0)
Converted["_ScrollingFrame"].Parent = Converted["_VexButtons"]

Converted["_HomeButton"].Font = Enum.Font.SourceSansBold
Converted["_HomeButton"].Text = "Home"
Converted["_HomeButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HomeButton"].TextScaled = true
Converted["_HomeButton"].TextSize = 14
Converted["_HomeButton"].TextWrapped = true
Converted["_HomeButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_HomeButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_HomeButton"].BorderSizePixel = 0
Converted["_HomeButton"].Position = UDim2.new(-0, 0, 0.0149999997, 0)
Converted["_HomeButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_HomeButton"].Name = "HomeButton"
Converted["_HomeButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient1"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient1"].Rotation = 90
Converted["_UIGradient1"].Parent = Converted["_HomeButton"]

Converted["_GeneralButton"].Font = Enum.Font.SourceSansBold
Converted["_GeneralButton"].Text = "General"
Converted["_GeneralButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GeneralButton"].TextScaled = true
Converted["_GeneralButton"].TextSize = 14
Converted["_GeneralButton"].TextWrapped = true
Converted["_GeneralButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_GeneralButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_GeneralButton"].BorderSizePixel = 0
Converted["_GeneralButton"].Position = UDim2.new(-0, 0, 0.063000001, 0)
Converted["_GeneralButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_GeneralButton"].Name = "GeneralButton"
Converted["_GeneralButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient2"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient2"].Rotation = 90
Converted["_UIGradient2"].Parent = Converted["_GeneralButton"]

Converted["_ClientButton"].Font = Enum.Font.SourceSansBold
Converted["_ClientButton"].Text = "Client"
Converted["_ClientButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClientButton"].TextScaled = true
Converted["_ClientButton"].TextSize = 14
Converted["_ClientButton"].TextWrapped = true
Converted["_ClientButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_ClientButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ClientButton"].BorderSizePixel = 0
Converted["_ClientButton"].Position = UDim2.new(-0.023, 0, 0.112999998, 0)
Converted["_ClientButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_ClientButton"].Name = "ClientButton"
Converted["_ClientButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient3"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient3"].Rotation = 90
Converted["_UIGradient3"].Parent = Converted["_ClientButton"]

Converted["_SpectateButton"].Font = Enum.Font.SourceSansBold
Converted["_SpectateButton"].Text = "Spectate"
Converted["_SpectateButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SpectateButton"].TextScaled = true
Converted["_SpectateButton"].TextSize = 14
Converted["_SpectateButton"].TextWrapped = true
Converted["_SpectateButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_SpectateButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_SpectateButton"].BorderSizePixel = 0
Converted["_SpectateButton"].Position = UDim2.new(-0.0230000336, 0, 0.163404495, 0)
Converted["_SpectateButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_SpectateButton"].Name = "SpectateButton"
Converted["_SpectateButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient4"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient4"].Rotation = 90
Converted["_UIGradient4"].Parent = Converted["_SpectateButton"]

Converted["_TeleportButton"].Font = Enum.Font.SourceSansBold
Converted["_TeleportButton"].Text = "Teleport"
Converted["_TeleportButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TeleportButton"].TextScaled = true
Converted["_TeleportButton"].TextSize = 14
Converted["_TeleportButton"].TextWrapped = true
Converted["_TeleportButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_TeleportButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TeleportButton"].BorderSizePixel = 0
Converted["_TeleportButton"].Position = UDim2.new(-0.023, 0, 0.210999995, 0)
Converted["_TeleportButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_TeleportButton"].Name = "TeleportButton"
Converted["_TeleportButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient5"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient5"].Rotation = 90
Converted["_UIGradient5"].Parent = Converted["_TeleportButton"]

Converted["_TargetButton"].Font = Enum.Font.SourceSansBold
Converted["_TargetButton"].Text = "Target"
Converted["_TargetButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TargetButton"].TextScaled = true
Converted["_TargetButton"].TextSize = 14
Converted["_TargetButton"].TextWrapped = true
Converted["_TargetButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_TargetButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TargetButton"].BorderSizePixel = 0
Converted["_TargetButton"].Position = UDim2.new(-0.0230000336, 0, 0.261785209, 0)
Converted["_TargetButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_TargetButton"].Name = "TargetButton"
Converted["_TargetButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient6"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient6"].Rotation = 90
Converted["_UIGradient6"].Parent = Converted["_TargetButton"]

Converted["_GiveToolButton"].Font = Enum.Font.SourceSansBold
Converted["_GiveToolButton"].Text = "GiveTool (Client)"
Converted["_GiveToolButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GiveToolButton"].TextScaled = true
Converted["_GiveToolButton"].TextSize = 14
Converted["_GiveToolButton"].TextWrapped = true
Converted["_GiveToolButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_GiveToolButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_GiveToolButton"].BorderSizePixel = 0
Converted["_GiveToolButton"].Position = UDim2.new(0, 0, 0.312999994, 0)
Converted["_GiveToolButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_GiveToolButton"].Name = "GiveToolButton"
Converted["_GiveToolButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient7"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient7"].Rotation = 90
Converted["_UIGradient7"].Parent = Converted["_GiveToolButton"]

Converted["_ChatBypassButton"].Font = Enum.Font.SourceSansBold
Converted["_ChatBypassButton"].Text = "Bypasser"
Converted["_ChatBypassButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatBypassButton"].TextScaled = true
Converted["_ChatBypassButton"].TextSize = 14
Converted["_ChatBypassButton"].TextWrapped = true
Converted["_ChatBypassButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_ChatBypassButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChatBypassButton"].BorderSizePixel = 0
Converted["_ChatBypassButton"].Position = UDim2.new(0, 0, 0.35800001, 0)
Converted["_ChatBypassButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_ChatBypassButton"].Name = "ChatBypassButton"
Converted["_ChatBypassButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient8"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient8"].Rotation = 90
Converted["_UIGradient8"].Parent = Converted["_ChatBypassButton"]

Converted["_NotesButton"].Font = Enum.Font.SourceSansBold
Converted["_NotesButton"].Text = "Notes"
Converted["_NotesButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NotesButton"].TextScaled = true
Converted["_NotesButton"].TextSize = 14
Converted["_NotesButton"].TextWrapped = true
Converted["_NotesButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_NotesButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_NotesButton"].BorderSizePixel = 0
Converted["_NotesButton"].Position = UDim2.new(0, 0, 0.405999988, 0)
Converted["_NotesButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_NotesButton"].Name = "NotesButton"
Converted["_NotesButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient9"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient9"].Rotation = 90
Converted["_UIGradient9"].Parent = Converted["_NotesButton"]

Converted["_CreditsButton"].Font = Enum.Font.SourceSansBold
Converted["_CreditsButton"].Text = "Credits"
Converted["_CreditsButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_CreditsButton"].TextScaled = true
Converted["_CreditsButton"].TextSize = 14
Converted["_CreditsButton"].TextWrapped = true
Converted["_CreditsButton"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_CreditsButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_CreditsButton"].BorderSizePixel = 0
Converted["_CreditsButton"].Position = UDim2.new(-0.0340000018, 0, 0.453999996, 0)
Converted["_CreditsButton"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_CreditsButton"].Name = "CreditsButton"
Converted["_CreditsButton"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient10"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient10"].Rotation = 90
Converted["_UIGradient10"].Parent = Converted["_CreditsButton"]

Converted["_Settings"].Font = Enum.Font.SourceSansBold
Converted["_Settings"].Text = "Settings"
Converted["_Settings"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Settings"].TextScaled = true
Converted["_Settings"].TextSize = 14
Converted["_Settings"].TextWrapped = true
Converted["_Settings"].BackgroundColor3 = Color3.fromRGB(98.00000935792923, 98.00000935792923, 98.00000935792923)
Converted["_Settings"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Settings"].BorderSizePixel = 0
Converted["_Settings"].Position = UDim2.new(-0.0111728022, 0, 0.501218617, 0)
Converted["_Settings"].Size = UDim2.new(1, 0, 0.0489999987, 0)
Converted["_Settings"].Name = "Settings"
Converted["_Settings"].Parent = Converted["_ScrollingFrame"]

Converted["_UIGradient11"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient11"].Rotation = 90
Converted["_UIGradient11"].Parent = Converted["_Settings"]

Converted["_Spectate"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Spectate"].BackgroundTransparency = 0.5
Converted["_Spectate"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Spectate"].BorderSizePixel = 0
Converted["_Spectate"].Position = UDim2.new(0.16885443, 0, -0.00514861383, 0)
Converted["_Spectate"].Size = UDim2.new(0.831145644, 0, 1.00514841, 0)
Converted["_Spectate"].Visible = false
Converted["_Spectate"].Name = "Spectate"
Converted["_Spectate"].Parent = Converted["_Tabs"]

Converted["_enterButton"].Font = Enum.Font.SourceSansBold
Converted["_enterButton"].Text = "Enter"
Converted["_enterButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_enterButton"].TextScaled = true
Converted["_enterButton"].TextSize = 14
Converted["_enterButton"].TextWrapped = true
Converted["_enterButton"].BackgroundColor3 = Color3.fromRGB(0, 115.00000074505806, 255)
Converted["_enterButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_enterButton"].BorderSizePixel = 0
Converted["_enterButton"].Position = UDim2.new(0.362143785, 0, 0.564714015, 0)
Converted["_enterButton"].Size = UDim2.new(0.203999996, 0, 0.153999999, 0)
Converted["_enterButton"].Name = "enterButton"
Converted["_enterButton"].Parent = Converted["_Spectate"]

Converted["_UICorner"].Parent = Converted["_enterButton"]

Converted["_UIGradient12"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(84.00000259280205, 84.00000259280205, 84.00000259280205))
}
Converted["_UIGradient12"].Rotation = 90
Converted["_UIGradient12"].Parent = Converted["_enterButton"]

Converted["_TextBox"].Font = Enum.Font.SourceSansBold
Converted["_TextBox"].PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox"].PlaceholderText = "Who do you want to spectate?"
Converted["_TextBox"].Text = ""
Converted["_TextBox"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox"].TextScaled = true
Converted["_TextBox"].TextSize = 14
Converted["_TextBox"].TextWrapped = true
Converted["_TextBox"].BackgroundColor3 = Color3.fromRGB(94.0000019967556, 94.0000019967556, 94.0000019967556)
Converted["_TextBox"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox"].BorderSizePixel = 0
Converted["_TextBox"].Position = UDim2.new(0.272241354, 0, 0.0634782761, 0)
Converted["_TextBox"].Size = UDim2.new(0.379790425, 0, 0.440499425, 0)
Converted["_TextBox"].Parent = Converted["_Spectate"]

Converted["_UICorner1"].Parent = Converted["_TextBox"]

Converted["_UICorner2"].Parent = Converted["_TextBox"]

Converted["_UIGradient13"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(84.00000259280205, 84.00000259280205, 84.00000259280205))
}
Converted["_UIGradient13"].Rotation = 90
Converted["_UIGradient13"].Parent = Converted["_TextBox"]

Converted["_resetButton"].Font = Enum.Font.SourceSansBold
Converted["_resetButton"].Text = "Reset"
Converted["_resetButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_resetButton"].TextScaled = true
Converted["_resetButton"].TextSize = 14
Converted["_resetButton"].TextWrapped = true
Converted["_resetButton"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Converted["_resetButton"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_resetButton"].BorderSizePixel = 0
Converted["_resetButton"].Position = UDim2.new(0.362148196, 0, 0.752213359, 0)
Converted["_resetButton"].Size = UDim2.new(0.204176337, 0, 0.15384616, 0)
Converted["_resetButton"].Name = "resetButton"
Converted["_resetButton"].Parent = Converted["_Spectate"]

Converted["_UICorner3"].Parent = Converted["_resetButton"]

Converted["_UIGradient14"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(84.00000259280205, 84.00000259280205, 84.00000259280205))
}
Converted["_UIGradient14"].Rotation = 90
Converted["_UIGradient14"].Parent = Converted["_resetButton"]

Converted["_Teleport"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Teleport"].BackgroundTransparency = 0.5
Converted["_Teleport"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Teleport"].BorderSizePixel = 0
Converted["_Teleport"].Position = UDim2.new(0.16885443, 0, 0, 0)
Converted["_Teleport"].Size = UDim2.new(0.831145644, 0, 1, 0)
Converted["_Teleport"].Visible = false
Converted["_Teleport"].Name = "Teleport"
Converted["_Teleport"].Parent = Converted["_Tabs"]

Converted["_teleportenter"].Font = Enum.Font.SourceSansBold
Converted["_teleportenter"].Text = "Teleport"
Converted["_teleportenter"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_teleportenter"].TextScaled = true
Converted["_teleportenter"].TextSize = 14
Converted["_teleportenter"].TextWrapped = true
Converted["_teleportenter"].BackgroundColor3 = Color3.fromRGB(154.00000602006912, 51.00000075995922, 164.00000542402267)
Converted["_teleportenter"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_teleportenter"].BorderSizePixel = 0
Converted["_teleportenter"].Position = UDim2.new(0.342937827, 0, 0.782529891, 0)
Converted["_teleportenter"].Size = UDim2.new(0.277895421, 0, 0.154453695, 0)
Converted["_teleportenter"].Name = "teleportenter"
Converted["_teleportenter"].Parent = Converted["_Teleport"]

Converted["_UICorner4"].Parent = Converted["_teleportenter"]

Converted["_UIGradient15"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(84.00000259280205, 84.00000259280205, 84.00000259280205))
}
Converted["_UIGradient15"].Rotation = 90
Converted["_UIGradient15"].Parent = Converted["_teleportenter"]

Converted["_ImageLabel"].Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
Converted["_ImageLabel"].ImageContent = Content
Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(88.00000235438347, 88.00000235438347, 88.00000235438347)
Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ImageLabel"].BorderSizePixel = 0
Converted["_ImageLabel"].Position = UDim2.new(0.383261681, 0, 0.0734324381, 0)
Converted["_ImageLabel"].Size = UDim2.new(0.196842581, 0, 0.401579618, 0)
Converted["_ImageLabel"].Parent = Converted["_Teleport"]

Converted["_TextBox1"].Font = Enum.Font.SourceSansBold
Converted["_TextBox1"].PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox1"].PlaceholderText = "Enter Target"
Converted["_TextBox1"].Text = ""
Converted["_TextBox1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox1"].TextScaled = true
Converted["_TextBox1"].TextSize = 14
Converted["_TextBox1"].TextWrapped = true
Converted["_TextBox1"].BackgroundColor3 = Color3.fromRGB(94.0000019967556, 94.0000019967556, 94.0000019967556)
Converted["_TextBox1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox1"].BorderSizePixel = 0
Converted["_TextBox1"].Position = UDim2.new(0.258346289, 0, 0.525617242, 0)
Converted["_TextBox1"].Size = UDim2.new(0.446000695, 0, 0.200279012, 0)
Converted["_TextBox1"].Parent = Converted["_Teleport"]

Converted["_UICorner5"].Parent = Converted["_TextBox1"]

Converted["_UICorner6"].Parent = Converted["_TextBox1"]

Converted["_UIGradient16"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(84.00000259280205, 84.00000259280205, 84.00000259280205))
}
Converted["_UIGradient16"].Rotation = 90
Converted["_UIGradient16"].Parent = Converted["_TextBox1"]

Converted["_Credits"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Credits"].BackgroundTransparency = 0.5
Converted["_Credits"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Credits"].BorderSizePixel = 0
Converted["_Credits"].Position = UDim2.new(0.166638449, 0, 0.00204625004, 0)
Converted["_Credits"].Size = UDim2.new(0.833361685, 0, 0.997954011, 0)
Converted["_Credits"].Visible = false
Converted["_Credits"].Name = "Credits"
Converted["_Credits"].Parent = Converted["_Tabs"]

Converted["_Header1"].Font = Enum.Font.SourceSansBold
Converted["_Header1"].Text = "CREDITS"
Converted["_Header1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Header1"].TextScaled = true
Converted["_Header1"].TextSize = 14
Converted["_Header1"].TextWrapped = true
Converted["_Header1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Header1"].BackgroundTransparency = 1
Converted["_Header1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Header1"].BorderSizePixel = 0
Converted["_Header1"].Position = UDim2.new(0.00265900604, 0, 8.42278553e-07, 0)
Converted["_Header1"].Size = UDim2.new(0.997340441, 0, 0.156349331, 0)
Converted["_Header1"].Name = "Header"
Converted["_Header1"].Parent = Converted["_Credits"]

Converted["_Names"].Name = "Names"
Converted["_Names"].Parent = Converted["_Credits"]

Converted["_Participant"].Font = Enum.Font.SourceSansBold
Converted["_Participant"].Text = "AFLY: SCRIPTER, UI DESIGNER"
Converted["_Participant"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Participant"].TextScaled = true
Converted["_Participant"].TextSize = 14
Converted["_Participant"].TextWrapped = true
Converted["_Participant"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Participant"].BackgroundTransparency = 1
Converted["_Participant"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Participant"].BorderSizePixel = 0
Converted["_Participant"].Position = UDim2.new(0.136618331, 0, 0.221838295, 0)
Converted["_Participant"].Size = UDim2.new(0.726722956, 0, 0.100482568, 0)
Converted["_Participant"].Name = "Participant"
Converted["_Participant"].Parent = Converted["_Names"]

Converted["_Participant1"].Font = Enum.Font.SourceSansBold
Converted["_Participant1"].Text = "QUANTOR: SCRIPTER, UI DESIGNER"
Converted["_Participant1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Participant1"].TextScaled = true
Converted["_Participant1"].TextSize = 14
Converted["_Participant1"].TextWrapped = true
Converted["_Participant1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Participant1"].BackgroundTransparency = 1
Converted["_Participant1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Participant1"].BorderSizePixel = 0
Converted["_Participant1"].Position = UDim2.new(0.136618182, 0, 0.325018376, 0)
Converted["_Participant1"].Size = UDim2.new(0.726723075, 0, 0.116139464, 0)
Converted["_Participant1"].Name = "Participant"
Converted["_Participant1"].Parent = Converted["_Names"]

Converted["_Thanks1"].Font = Enum.Font.SourceSansBold
Converted["_Thanks1"].Text = "Thank you for using this script, it really means alot, trust me.. alot (we stood up till the pm to make this..)"
Converted["_Thanks1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Thanks1"].TextScaled = true
Converted["_Thanks1"].TextSize = 14
Converted["_Thanks1"].TextWrapped = true
Converted["_Thanks1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Thanks1"].BackgroundTransparency = 1
Converted["_Thanks1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Thanks1"].BorderSizePixel = 0
Converted["_Thanks1"].Position = UDim2.new(0.0234458316, 0, 0.54169637, 0)
Converted["_Thanks1"].Size = UDim2.new(0.953068018, 0, 0.366834581, 0)
Converted["_Thanks1"].Name = "Thanks"
Converted["_Thanks1"].Parent = Converted["_Names"]

Converted["_General"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_General"].Active = true
Converted["_General"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_General"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_General"].BackgroundTransparency = 0.5
Converted["_General"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_General"].BorderSizePixel = 0
Converted["_General"].Position = UDim2.new(0.584427536, 0, 0.50102365, 0)
Converted["_General"].Size = UDim2.new(0.831145883, 0, 0.997952759, 0)
Converted["_General"].Visible = false
Converted["_General"].Name = "General"
Converted["_General"].Parent = Converted["_Tabs"]

Converted["_FlingButton"].Font = Enum.Font.SourceSansBold
Converted["_FlingButton"].Text = "Fling"
Converted["_FlingButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlingButton"].TextScaled = true
Converted["_FlingButton"].TextSize = 14
Converted["_FlingButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlingButton"].TextWrapped = true
Converted["_FlingButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FlingButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlingButton"].BorderSizePixel = 0
Converted["_FlingButton"].Position = UDim2.new(0.219057068, 0, 0.421139896, 0)
Converted["_FlingButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_FlingButton"].Name = "FlingButton"
Converted["_FlingButton"].Parent = Converted["_General"]

Converted["_UIGradient17"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient17"].Rotation = 90
Converted["_UIGradient17"].Parent = Converted["_FlingButton"]

Converted["_TextLabel"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel"].Text = "General"
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 14
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BackgroundTransparency = 1
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Position = UDim2.new(-0.00266608456, 0, 9.44643944e-07, 0)
Converted["_TextLabel"].Size = UDim2.new(0.219352901, 0, 0.070451431, 0)
Converted["_TextLabel"].Parent = Converted["_General"]

Converted["_SpazButton"].Font = Enum.Font.SourceSansBold
Converted["_SpazButton"].Text = "Spaz"
Converted["_SpazButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SpazButton"].TextScaled = true
Converted["_SpazButton"].TextSize = 14
Converted["_SpazButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SpazButton"].TextWrapped = true
Converted["_SpazButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_SpazButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SpazButton"].BorderSizePixel = 0
Converted["_SpazButton"].Position = UDim2.new(0.723243356, 0, 0.415074348, 0)
Converted["_SpazButton"].Size = UDim2.new(0.150000066, 0, 0.0529505201, 0)
Converted["_SpazButton"].Name = "SpazButton"
Converted["_SpazButton"].Parent = Converted["_General"]

Converted["_UIGradient18"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient18"].Rotation = 90
Converted["_UIGradient18"].Parent = Converted["_SpazButton"]

Converted["_FreezeButton"].Font = Enum.Font.SourceSansBold
Converted["_FreezeButton"].Text = "Freeze"
Converted["_FreezeButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FreezeButton"].TextScaled = true
Converted["_FreezeButton"].TextSize = 14
Converted["_FreezeButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FreezeButton"].TextWrapped = true
Converted["_FreezeButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FreezeButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FreezeButton"].BorderSizePixel = 0
Converted["_FreezeButton"].Position = UDim2.new(0.556505859, 0, 0.417764068, 0)
Converted["_FreezeButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_FreezeButton"].Name = "FreezeButton"
Converted["_FreezeButton"].Parent = Converted["_General"]

Converted["_UIGradient19"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient19"].Rotation = 90
Converted["_UIGradient19"].Parent = Converted["_FreezeButton"]

Converted["_XRayButton"].Font = Enum.Font.SourceSansBold
Converted["_XRayButton"].Text = "XRay"
Converted["_XRayButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_XRayButton"].TextScaled = true
Converted["_XRayButton"].TextSize = 14
Converted["_XRayButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_XRayButton"].TextWrapped = true
Converted["_XRayButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_XRayButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_XRayButton"].BorderSizePixel = 0
Converted["_XRayButton"].Position = UDim2.new(0.39208433, 0, 0.171909139, 0)
Converted["_XRayButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_XRayButton"].Name = "XRayButton"
Converted["_XRayButton"].Parent = Converted["_General"]

Converted["_UIGradient20"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient20"].Rotation = 90
Converted["_UIGradient20"].Parent = Converted["_XRayButton"]

Converted["_JumpPowerButton"].Font = Enum.Font.SourceSansBold
Converted["_JumpPowerButton"].Text = "Set JumpPower"
Converted["_JumpPowerButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_JumpPowerButton"].TextScaled = true
Converted["_JumpPowerButton"].TextSize = 14
Converted["_JumpPowerButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_JumpPowerButton"].TextWrapped = true
Converted["_JumpPowerButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_JumpPowerButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_JumpPowerButton"].BorderSizePixel = 0
Converted["_JumpPowerButton"].Position = UDim2.new(0.219057068, 0, 0.171909139, 0)
Converted["_JumpPowerButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_JumpPowerButton"].Name = "JumpPowerButton"
Converted["_JumpPowerButton"].Parent = Converted["_General"]

Converted["_UIGradient21"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient21"].Rotation = 90
Converted["_UIGradient21"].Parent = Converted["_JumpPowerButton"]

Converted["_WalkSpeedButton"].Font = Enum.Font.SourceSansBold
Converted["_WalkSpeedButton"].Text = "Set Walkspeed"
Converted["_WalkSpeedButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_WalkSpeedButton"].TextScaled = true
Converted["_WalkSpeedButton"].TextSize = 14
Converted["_WalkSpeedButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_WalkSpeedButton"].TextWrapped = true
Converted["_WalkSpeedButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_WalkSpeedButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_WalkSpeedButton"].BorderSizePixel = 0
Converted["_WalkSpeedButton"].Position = UDim2.new(0.219057068, 0, 0.088097021, 0)
Converted["_WalkSpeedButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_WalkSpeedButton"].Name = "WalkSpeedButton"
Converted["_WalkSpeedButton"].Parent = Converted["_General"]

Converted["_UIGradient22"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient22"].Rotation = 90
Converted["_UIGradient22"].Parent = Converted["_WalkSpeedButton"]

Converted["_ToggleTexturesButton"].Font = Enum.Font.SourceSansBold
Converted["_ToggleTexturesButton"].Text = "Toggle Textures"
Converted["_ToggleTexturesButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ToggleTexturesButton"].TextScaled = true
Converted["_ToggleTexturesButton"].TextSize = 14
Converted["_ToggleTexturesButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ToggleTexturesButton"].TextWrapped = true
Converted["_ToggleTexturesButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ToggleTexturesButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ToggleTexturesButton"].BorderSizePixel = 0
Converted["_ToggleTexturesButton"].Position = UDim2.new(0.558211863, 0, 0.088097021, 0)
Converted["_ToggleTexturesButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_ToggleTexturesButton"].Name = "ToggleTexturesButton"
Converted["_ToggleTexturesButton"].Parent = Converted["_General"]

Converted["_UIGradient23"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient23"].Rotation = 90
Converted["_UIGradient23"].Parent = Converted["_ToggleTexturesButton"]

Converted["_InfJump"].Font = Enum.Font.SourceSansBold
Converted["_InfJump"].Text = "Inf Jump"
Converted["_InfJump"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_InfJump"].TextScaled = true
Converted["_InfJump"].TextSize = 14
Converted["_InfJump"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_InfJump"].TextWrapped = true
Converted["_InfJump"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_InfJump"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_InfJump"].BorderSizePixel = 0
Converted["_InfJump"].Position = UDim2.new(0.219057068, 0, 0.257926852, 0)
Converted["_InfJump"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_InfJump"].Name = "InfJump"
Converted["_InfJump"].Parent = Converted["_General"]

Converted["_UIGradient24"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient24"].Rotation = 90
Converted["_UIGradient24"].Parent = Converted["_InfJump"]

Converted["_SwimInAirButton"].Font = Enum.Font.SourceSansBold
Converted["_SwimInAirButton"].Text = "Swim In Air"
Converted["_SwimInAirButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SwimInAirButton"].TextScaled = true
Converted["_SwimInAirButton"].TextSize = 14
Converted["_SwimInAirButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SwimInAirButton"].TextWrapped = true
Converted["_SwimInAirButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_SwimInAirButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SwimInAirButton"].BorderSizePixel = 0
Converted["_SwimInAirButton"].Position = UDim2.new(0.39208433, 0, 0.261970401, 0)
Converted["_SwimInAirButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_SwimInAirButton"].Name = "SwimInAirButton"
Converted["_SwimInAirButton"].Parent = Converted["_General"]

Converted["_UIGradient25"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient25"].Rotation = 90
Converted["_UIGradient25"].Parent = Converted["_SwimInAirButton"]

Converted["_GravityButton"].Font = Enum.Font.SourceSansBold
Converted["_GravityButton"].Text = "Set Gravity"
Converted["_GravityButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GravityButton"].TextScaled = true
Converted["_GravityButton"].TextSize = 14
Converted["_GravityButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GravityButton"].TextWrapped = true
Converted["_GravityButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_GravityButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GravityButton"].BorderSizePixel = 0
Converted["_GravityButton"].Position = UDim2.new(0.219057068, 0, 0.341738969, 0)
Converted["_GravityButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_GravityButton"].Name = "GravityButton"
Converted["_GravityButton"].Parent = Converted["_General"]

Converted["_UIGradient26"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient26"].Rotation = 90
Converted["_UIGradient26"].Parent = Converted["_GravityButton"]

Converted["_SitButton"].Font = Enum.Font.SourceSansBold
Converted["_SitButton"].Text = "Sit"
Converted["_SitButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SitButton"].TextScaled = true
Converted["_SitButton"].TextSize = 14
Converted["_SitButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SitButton"].TextWrapped = true
Converted["_SitButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_SitButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SitButton"].BorderSizePixel = 0
Converted["_SitButton"].Position = UDim2.new(0.558211863, 0, 0.1722119, 0)
Converted["_SitButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_SitButton"].Name = "SitButton"
Converted["_SitButton"].Parent = Converted["_General"]

Converted["_UIGradient27"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient27"].Rotation = 90
Converted["_UIGradient27"].Parent = Converted["_SitButton"]

Converted["_ParalyzeButton"].Font = Enum.Font.SourceSansBold
Converted["_ParalyzeButton"].Text = "Paralyze"
Converted["_ParalyzeButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ParalyzeButton"].TextScaled = true
Converted["_ParalyzeButton"].TextSize = 14
Converted["_ParalyzeButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ParalyzeButton"].TextWrapped = true
Converted["_ParalyzeButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ParalyzeButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ParalyzeButton"].BorderSizePixel = 0
Converted["_ParalyzeButton"].Position = UDim2.new(0.723243356, 0, 0.0872257426, 0)
Converted["_ParalyzeButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_ParalyzeButton"].Name = "ParalyzeButton"
Converted["_ParalyzeButton"].Parent = Converted["_General"]

Converted["_UIGradient28"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient28"].Rotation = 90
Converted["_UIGradient28"].Parent = Converted["_ParalyzeButton"]

Converted["_HelicopterButton"].Font = Enum.Font.SourceSansBold
Converted["_HelicopterButton"].Text = "Helicopter"
Converted["_HelicopterButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HelicopterButton"].TextScaled = true
Converted["_HelicopterButton"].TextSize = 14
Converted["_HelicopterButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HelicopterButton"].TextWrapped = true
Converted["_HelicopterButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_HelicopterButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_HelicopterButton"].BorderSizePixel = 0
Converted["_HelicopterButton"].Position = UDim2.new(0.723243237, 0, 0.262097925, 0)
Converted["_HelicopterButton"].Size = UDim2.new(0.1500002, 0, 0.0529504418, 0)
Converted["_HelicopterButton"].Name = "HelicopterButton"
Converted["_HelicopterButton"].Parent = Converted["_General"]

Converted["_UIGradient29"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient29"].Rotation = 90
Converted["_UIGradient29"].Parent = Converted["_HelicopterButton"]

Converted["_MoonwalkButton"].Font = Enum.Font.SourceSansBold
Converted["_MoonwalkButton"].Text = "Moonwalk"
Converted["_MoonwalkButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MoonwalkButton"].TextScaled = true
Converted["_MoonwalkButton"].TextSize = 14
Converted["_MoonwalkButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MoonwalkButton"].TextWrapped = true
Converted["_MoonwalkButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_MoonwalkButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MoonwalkButton"].BorderSizePixel = 0
Converted["_MoonwalkButton"].Position = UDim2.new(0.723243237, 0, 0.341317803, 0)
Converted["_MoonwalkButton"].Size = UDim2.new(0.1500002, 0, 0.0529505201, 0)
Converted["_MoonwalkButton"].Name = "MoonwalkButton"
Converted["_MoonwalkButton"].Parent = Converted["_General"]

Converted["_UIGradient30"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient30"].Rotation = 90
Converted["_UIGradient30"].Parent = Converted["_MoonwalkButton"]

Converted["_SeizureButton"].Font = Enum.Font.SourceSansBold
Converted["_SeizureButton"].Text = "Seizure"
Converted["_SeizureButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SeizureButton"].TextScaled = true
Converted["_SeizureButton"].TextSize = 14
Converted["_SeizureButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SeizureButton"].TextWrapped = true
Converted["_SeizureButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_SeizureButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_SeizureButton"].BorderSizePixel = 0
Converted["_SeizureButton"].Position = UDim2.new(0.723243237, 0, 0.172695711, 0)
Converted["_SeizureButton"].Size = UDim2.new(0.150000006, 0, 0.0529999994, 0)
Converted["_SeizureButton"].Name = "SeizureButton"
Converted["_SeizureButton"].Parent = Converted["_General"]

Converted["_UIGradient31"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient31"].Rotation = 90
Converted["_UIGradient31"].Parent = Converted["_SeizureButton"]

Converted["_NoclipButton"].Font = Enum.Font.SourceSansBold
Converted["_NoclipButton"].Text = "Noclip"
Converted["_NoclipButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NoclipButton"].TextScaled = true
Converted["_NoclipButton"].TextSize = 14
Converted["_NoclipButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NoclipButton"].TextWrapped = true
Converted["_NoclipButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_NoclipButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NoclipButton"].BorderSizePixel = 0
Converted["_NoclipButton"].Position = UDim2.new(0.0412894562, 0, 0.262140751, 0)
Converted["_NoclipButton"].Size = UDim2.new(0.149865806, 0, 0.0529504009, 0)
Converted["_NoclipButton"].Name = "NoclipButton"
Converted["_NoclipButton"].Parent = Converted["_General"]

Converted["_UIGradient32"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient32"].Rotation = 90
Converted["_UIGradient32"].Parent = Converted["_NoclipButton"]

Converted["_FlyButton"].Font = Enum.Font.SourceSansBold
Converted["_FlyButton"].Text = "Fly (X Toggle)"
Converted["_FlyButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlyButton"].TextScaled = true
Converted["_FlyButton"].TextSize = 14
Converted["_FlyButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlyButton"].TextWrapped = true
Converted["_FlyButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FlyButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FlyButton"].BorderSizePixel = 0
Converted["_FlyButton"].Position = UDim2.new(0.0412894562, 0, 0.088097021, 0)
Converted["_FlyButton"].Size = UDim2.new(0.149865806, 0, 0.0529504605, 0)
Converted["_FlyButton"].Name = "FlyButton"
Converted["_FlyButton"].Parent = Converted["_General"]

Converted["_UIGradient33"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient33"].Rotation = 90
Converted["_UIGradient33"].Parent = Converted["_FlyButton"]

Converted["_AntiVoidButton"].Font = Enum.Font.SourceSansBold
Converted["_AntiVoidButton"].Text = "Anti-Void"
Converted["_AntiVoidButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiVoidButton"].TextScaled = true
Converted["_AntiVoidButton"].TextSize = 14
Converted["_AntiVoidButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiVoidButton"].TextWrapped = true
Converted["_AntiVoidButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_AntiVoidButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiVoidButton"].BorderSizePixel = 0
Converted["_AntiVoidButton"].Position = UDim2.new(0.39208433, 0, 0.418934315, 0)
Converted["_AntiVoidButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_AntiVoidButton"].Name = "AntiVoidButton"
Converted["_AntiVoidButton"].Parent = Converted["_General"]

Converted["_UIGradient34"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient34"].Rotation = 90
Converted["_UIGradient34"].Parent = Converted["_AntiVoidButton"]

Converted["_ChatSpam"].Font = Enum.Font.SourceSansBold
Converted["_ChatSpam"].Text = "Chat Spam"
Converted["_ChatSpam"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatSpam"].TextScaled = true
Converted["_ChatSpam"].TextSize = 14
Converted["_ChatSpam"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatSpam"].TextWrapped = true
Converted["_ChatSpam"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ChatSpam"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatSpam"].BorderSizePixel = 0
Converted["_ChatSpam"].Position = UDim2.new(0.0389191322, 0, 0.423148364, 0)
Converted["_ChatSpam"].Size = UDim2.new(0.149999991, 0, 0.0529505201, 0)
Converted["_ChatSpam"].Name = "ChatSpam"
Converted["_ChatSpam"].Parent = Converted["_General"]

Converted["_UIGradient35"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient35"].Rotation = 90
Converted["_UIGradient35"].Parent = Converted["_ChatSpam"]

Converted["_ChatlogButton"].Font = Enum.Font.SourceSansBold
Converted["_ChatlogButton"].Text = "ChatLogs"
Converted["_ChatlogButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatlogButton"].TextScaled = true
Converted["_ChatlogButton"].TextSize = 14
Converted["_ChatlogButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatlogButton"].TextWrapped = true
Converted["_ChatlogButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ChatlogButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ChatlogButton"].BorderSizePixel = 0
Converted["_ChatlogButton"].Position = UDim2.new(0.558211863, 0, 0.338846922, 0)
Converted["_ChatlogButton"].Size = UDim2.new(0.150000066, 0, 0.0529505201, 0)
Converted["_ChatlogButton"].Name = "ChatlogButton"
Converted["_ChatlogButton"].Parent = Converted["_General"]

Converted["_UIGradient36"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient36"].Rotation = 90
Converted["_UIGradient36"].Parent = Converted["_ChatlogButton"]

Converted["_ClickToMove"].Font = Enum.Font.SourceSansBold
Converted["_ClickToMove"].Text = "Click To Teleport"
Converted["_ClickToMove"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToMove"].TextScaled = true
Converted["_ClickToMove"].TextSize = 14
Converted["_ClickToMove"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToMove"].TextWrapped = true
Converted["_ClickToMove"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ClickToMove"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToMove"].BorderSizePixel = 0
Converted["_ClickToMove"].Position = UDim2.new(0.0412891731, 0, 0.174044579, 0)
Converted["_ClickToMove"].Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
Converted["_ClickToMove"].Name = "ClickToMove"
Converted["_ClickToMove"].Parent = Converted["_General"]

Converted["_UIGradient37"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient37"].Rotation = 90
Converted["_UIGradient37"].Parent = Converted["_ClickToMove"]

Converted["_DashButton"].Font = Enum.Font.SourceSansBold
Converted["_DashButton"].Text = "Dash (Q Toggle)"
Converted["_DashButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DashButton"].TextScaled = true
Converted["_DashButton"].TextSize = 14
Converted["_DashButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DashButton"].TextWrapped = true
Converted["_DashButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_DashButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DashButton"].BorderSizePixel = 0
Converted["_DashButton"].Position = UDim2.new(0.39208433, 0, 0.339165747, 0)
Converted["_DashButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_DashButton"].Name = "DashButton"
Converted["_DashButton"].Parent = Converted["_General"]

Converted["_UIGradient38"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient38"].Rotation = 90
Converted["_UIGradient38"].Parent = Converted["_DashButton"]

Converted["_ESP"].Font = Enum.Font.SourceSansBold
Converted["_ESP"].Text = "ESP"
Converted["_ESP"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ESP"].TextScaled = true
Converted["_ESP"].TextSize = 14
Converted["_ESP"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ESP"].TextWrapped = true
Converted["_ESP"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ESP"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ESP"].BorderSizePixel = 0
Converted["_ESP"].Position = UDim2.new(0.0412894562, 0, 0.34379074, 0)
Converted["_ESP"].Size = UDim2.new(0.149865806, 0, 0.0529504418, 0)
Converted["_ESP"].Name = "ESP"
Converted["_ESP"].Parent = Converted["_General"]

Converted["_UIGradient39"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient39"].Rotation = 90
Converted["_UIGradient39"].Parent = Converted["_ESP"]

Converted["_FakeLagButton"].Font = Enum.Font.SourceSansBold
Converted["_FakeLagButton"].Text = "FakeLag"
Converted["_FakeLagButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FakeLagButton"].TextScaled = true
Converted["_FakeLagButton"].TextSize = 14
Converted["_FakeLagButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FakeLagButton"].TextWrapped = true
Converted["_FakeLagButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FakeLagButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FakeLagButton"].BorderSizePixel = 0
Converted["_FakeLagButton"].Position = UDim2.new(0.558211863, 0, 0.259627044, 0)
Converted["_FakeLagButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_FakeLagButton"].Name = "FakeLagButton"
Converted["_FakeLagButton"].Parent = Converted["_General"]

Converted["_UIGradient40"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient40"].Rotation = 90
Converted["_UIGradient40"].Parent = Converted["_FakeLagButton"]

Converted["_FieldOfViewButton"].Font = Enum.Font.SourceSansBold
Converted["_FieldOfViewButton"].Text = "Field Of View"
Converted["_FieldOfViewButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FieldOfViewButton"].TextScaled = true
Converted["_FieldOfViewButton"].TextSize = 14
Converted["_FieldOfViewButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FieldOfViewButton"].TextWrapped = true
Converted["_FieldOfViewButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FieldOfViewButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FieldOfViewButton"].BorderSizePixel = 0
Converted["_FieldOfViewButton"].Position = UDim2.new(0.39208433, 0, 0.088097021, 0)
Converted["_FieldOfViewButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_FieldOfViewButton"].Name = "FieldOfViewButton"
Converted["_FieldOfViewButton"].Parent = Converted["_General"]

Converted["_UIGradient41"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient41"].Rotation = 90
Converted["_UIGradient41"].Parent = Converted["_FieldOfViewButton"]

Converted["_AntiFlingButton"].Font = Enum.Font.SourceSansBold
Converted["_AntiFlingButton"].Text = "Anti-Fling"
Converted["_AntiFlingButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiFlingButton"].TextScaled = true
Converted["_AntiFlingButton"].TextSize = 14
Converted["_AntiFlingButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiFlingButton"].TextWrapped = true
Converted["_AntiFlingButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_AntiFlingButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AntiFlingButton"].BorderSizePixel = 0
Converted["_AntiFlingButton"].Position = UDim2.new(0.0412314609, 0, 0.500551879, 0)
Converted["_AntiFlingButton"].Size = UDim2.new(0.150000006, 0, 0.0529999994, 0)
Converted["_AntiFlingButton"].Name = "AntiFlingButton"
Converted["_AntiFlingButton"].Parent = Converted["_General"]

Converted["_UIGradient42"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient42"].Rotation = 90
Converted["_UIGradient42"].Parent = Converted["_AntiFlingButton"]

Converted["_Notes"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Notes"].BackgroundTransparency = 1
Converted["_Notes"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Notes"].BorderSizePixel = 0
Converted["_Notes"].Position = UDim2.new(0.182055682, 0, 0.0320472084, 0)
Converted["_Notes"].Size = UDim2.new(0.800599992, 0, 0.931915402, 0)
Converted["_Notes"].Visible = false
Converted["_Notes"].Name = "Notes"
Converted["_Notes"].Parent = Converted["_Tabs"]

Converted["_TextBox2"].ClearTextOnFocus = false
Converted["_TextBox2"].Font = Enum.Font.Unknown
Converted["_TextBox2"].MultiLine = true
Converted["_TextBox2"].PlaceholderText = "Enter notes here..."
Converted["_TextBox2"].RichText = true
Converted["_TextBox2"].Text = ""
Converted["_TextBox2"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox2"].TextSize = 14
Converted["_TextBox2"].TextWrapped = true
Converted["_TextBox2"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextBox2"].TextYAlignment = Enum.TextYAlignment.Top
Converted["_TextBox2"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_TextBox2"].BackgroundTransparency = 0.5
Converted["_TextBox2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox2"].BorderSizePixel = 0
Converted["_TextBox2"].Position = UDim2.new(-0.0164891388, 0, -0.0321917161, 0)
Converted["_TextBox2"].Size = UDim2.new(1.03815341, 0, 1.07086194, 0)
Converted["_TextBox2"].Parent = Converted["_Notes"]

Converted["_Settings1"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Settings1"].BackgroundTransparency = 0.5
Converted["_Settings1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Settings1"].BorderSizePixel = 0
Converted["_Settings1"].Position = UDim2.new(0.166637972, 0, 0.00204583909, 0)
Converted["_Settings1"].Size = UDim2.new(0.833363056, 0, 0.997953951, 0)
Converted["_Settings1"].Visible = false
Converted["_Settings1"].Name = "Settings"
Converted["_Settings1"].Parent = Converted["_Tabs"]

Converted["_Header2"].Font = Enum.Font.SourceSansBold
Converted["_Header2"].Text = "Settings"
Converted["_Header2"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Header2"].TextScaled = true
Converted["_Header2"].TextSize = 14
Converted["_Header2"].TextWrapped = true
Converted["_Header2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Header2"].BackgroundTransparency = 1
Converted["_Header2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Header2"].BorderSizePixel = 0
Converted["_Header2"].Position = UDim2.new(0.261659473, 0, 5.51041978e-07, 0)
Converted["_Header2"].Size = UDim2.new(0.475500792, 0, 0.246118113, 0)
Converted["_Header2"].Name = "Header"
Converted["_Header2"].Parent = Converted["_Settings1"]

Converted["_Buttons"].Name = "Buttons"
Converted["_Buttons"].Parent = Converted["_Settings1"]

Converted["_Panic"].Font = Enum.Font.SourceSansBold
Converted["_Panic"].Text = "PANIC"
Converted["_Panic"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Panic"].TextScaled = true
Converted["_Panic"].TextSize = 14
Converted["_Panic"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Panic"].TextWrapped = true
Converted["_Panic"].BackgroundColor3 = Color3.fromRGB(83.00000265240669, 83.00000265240669, 83.00000265240669)
Converted["_Panic"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Panic"].BorderSizePixel = 0
Converted["_Panic"].Position = UDim2.new(0.0712939799, 0, 0.283873349, 0)
Converted["_Panic"].Size = UDim2.new(0.188750252, 0, 0.125795081, 0)
Converted["_Panic"].Name = "Panic"
Converted["_Panic"].Parent = Converted["_Buttons"]

Converted["_UIGradient43"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient43"].Rotation = 90
Converted["_UIGradient43"].Parent = Converted["_Panic"]

Converted["_DiscordLink"].Font = Enum.Font.SourceSansBold
Converted["_DiscordLink"].Text = "Discord Link"
Converted["_DiscordLink"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DiscordLink"].TextScaled = true
Converted["_DiscordLink"].TextSize = 14
Converted["_DiscordLink"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DiscordLink"].TextWrapped = true
Converted["_DiscordLink"].BackgroundColor3 = Color3.fromRGB(83.00000265240669, 83.00000265240669, 83.00000265240669)
Converted["_DiscordLink"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DiscordLink"].BorderSizePixel = 0
Converted["_DiscordLink"].Position = UDim2.new(0.0712939799, 0, 0.485074818, 0)
Converted["_DiscordLink"].Size = UDim2.new(0.188999996, 0, 0.126000002, 0)
Converted["_DiscordLink"].Name = "DiscordLink"
Converted["_DiscordLink"].Parent = Converted["_Buttons"]

Converted["_UIGradient44"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient44"].Rotation = 90
Converted["_UIGradient44"].Parent = Converted["_DiscordLink"]

Converted["_Client"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Client"].Active = true
Converted["_Client"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Client"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_Client"].BackgroundTransparency = 0.5
Converted["_Client"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Client"].BorderSizePixel = 0
Converted["_Client"].Position = UDim2.new(0.584427536, 0, 0.50102365, 0)
Converted["_Client"].Size = UDim2.new(0.831145883, 0, 0.997952759, 0)
Converted["_Client"].Visible = false
Converted["_Client"].Name = "Client"
Converted["_Client"].Parent = Converted["_Tabs"]

Converted["_DihButton"].Font = Enum.Font.SourceSansBold
Converted["_DihButton"].Text = "big thing"
Converted["_DihButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DihButton"].TextScaled = true
Converted["_DihButton"].TextSize = 14
Converted["_DihButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DihButton"].TextWrapped = true
Converted["_DihButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_DihButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DihButton"].BorderSizePixel = 0
Converted["_DihButton"].Position = UDim2.new(0.0412894562, 0, 0.088097021, 0)
Converted["_DihButton"].Size = UDim2.new(0.149865806, 0, 0.0529504605, 0)
Converted["_DihButton"].Name = "DihButton"
Converted["_DihButton"].Parent = Converted["_Client"]

Converted["_UIGradient45"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient45"].Rotation = 90
Converted["_UIGradient45"].Parent = Converted["_DihButton"]

Converted["_TextLabel1"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel1"].Text = "Client"
Converted["_TextLabel1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].TextScaled = true
Converted["_TextLabel1"].TextSize = 14
Converted["_TextLabel1"].TextWrapped = true
Converted["_TextLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].BackgroundTransparency = 1
Converted["_TextLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel1"].BorderSizePixel = 0
Converted["_TextLabel1"].Position = UDim2.new(-0.00266608456, 0, 9.44643944e-07, 0)
Converted["_TextLabel1"].Size = UDim2.new(0.219352901, 0, 0.070451431, 0)
Converted["_TextLabel1"].Parent = Converted["_Client"]

Converted["_RainbowSkinButton"].Font = Enum.Font.SourceSansBold
Converted["_RainbowSkinButton"].Text = "Rainbow Skin"
Converted["_RainbowSkinButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RainbowSkinButton"].TextScaled = true
Converted["_RainbowSkinButton"].TextSize = 14
Converted["_RainbowSkinButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RainbowSkinButton"].TextWrapped = true
Converted["_RainbowSkinButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_RainbowSkinButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RainbowSkinButton"].BorderSizePixel = 0
Converted["_RainbowSkinButton"].Position = UDim2.new(0.219057068, 0, 0.088097021, 0)
Converted["_RainbowSkinButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_RainbowSkinButton"].Name = "RainbowSkinButton"
Converted["_RainbowSkinButton"].Parent = Converted["_Client"]

Converted["_UIGradient46"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient46"].Rotation = 90
Converted["_UIGradient46"].Parent = Converted["_RainbowSkinButton"]

Converted["_FartButton"].Font = Enum.Font.SourceSansBold
Converted["_FartButton"].Text = "Fart"
Converted["_FartButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FartButton"].TextScaled = true
Converted["_FartButton"].TextSize = 14
Converted["_FartButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FartButton"].TextWrapped = true
Converted["_FartButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_FartButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FartButton"].BorderSizePixel = 0
Converted["_FartButton"].Position = UDim2.new(0.39208433, 0, 0.088097021, 0)
Converted["_FartButton"].Size = UDim2.new(0.149999991, 0, 0.0529504418, 0)
Converted["_FartButton"].Name = "FartButton"
Converted["_FartButton"].Parent = Converted["_Client"]

Converted["_UIGradient47"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient47"].Rotation = 90
Converted["_UIGradient47"].Parent = Converted["_FartButton"]

Converted["_NightButton"].Font = Enum.Font.SourceSansBold
Converted["_NightButton"].Text = "Night"
Converted["_NightButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NightButton"].TextScaled = true
Converted["_NightButton"].TextSize = 14
Converted["_NightButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NightButton"].TextWrapped = true
Converted["_NightButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_NightButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_NightButton"].BorderSizePixel = 0
Converted["_NightButton"].Position = UDim2.new(0.558211863, 0, 0.088097021, 0)
Converted["_NightButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_NightButton"].Name = "NightButton"
Converted["_NightButton"].Parent = Converted["_Client"]

Converted["_UIGradient48"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient48"].Rotation = 90
Converted["_UIGradient48"].Parent = Converted["_NightButton"]

Converted["_DayButton"].Font = Enum.Font.SourceSansBold
Converted["_DayButton"].Text = "Day"
Converted["_DayButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DayButton"].TextScaled = true
Converted["_DayButton"].TextSize = 14
Converted["_DayButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DayButton"].TextWrapped = true
Converted["_DayButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_DayButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DayButton"].BorderSizePixel = 0
Converted["_DayButton"].Position = UDim2.new(0.723243356, 0, 0.0872257426, 0)
Converted["_DayButton"].Size = UDim2.new(0.150000066, 0, 0.0529504418, 0)
Converted["_DayButton"].Name = "DayButton"
Converted["_DayButton"].Parent = Converted["_Client"]

Converted["_UIGradient49"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient49"].Rotation = 90
Converted["_UIGradient49"].Parent = Converted["_DayButton"]

Converted["_RemoveFogButton"].Font = Enum.Font.SourceSansBold
Converted["_RemoveFogButton"].Text = "Remove Fog"
Converted["_RemoveFogButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RemoveFogButton"].TextScaled = true
Converted["_RemoveFogButton"].TextSize = 14
Converted["_RemoveFogButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RemoveFogButton"].TextWrapped = true
Converted["_RemoveFogButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_RemoveFogButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_RemoveFogButton"].BorderSizePixel = 0
Converted["_RemoveFogButton"].Position = UDim2.new(0.0412891731, 0, 0.174044579, 0)
Converted["_RemoveFogButton"].Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
Converted["_RemoveFogButton"].Name = "RemoveFogButton"
Converted["_RemoveFogButton"].Parent = Converted["_Client"]

Converted["_UIGradient50"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient50"].Rotation = 90
Converted["_UIGradient50"].Parent = Converted["_RemoveFogButton"]

Converted["_ClickToDeleteButton"].Font = Enum.Font.SourceSansBold
Converted["_ClickToDeleteButton"].Text = "Click To Delete"
Converted["_ClickToDeleteButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToDeleteButton"].TextScaled = true
Converted["_ClickToDeleteButton"].TextSize = 14
Converted["_ClickToDeleteButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToDeleteButton"].TextWrapped = true
Converted["_ClickToDeleteButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ClickToDeleteButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToDeleteButton"].BorderSizePixel = 0
Converted["_ClickToDeleteButton"].Position = UDim2.new(0.215189666, 0, 0.173396572, 0)
Converted["_ClickToDeleteButton"].Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
Converted["_ClickToDeleteButton"].Name = "ClickToDeleteButton"
Converted["_ClickToDeleteButton"].Parent = Converted["_Client"]

Converted["_UIGradient51"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient51"].Rotation = 90
Converted["_UIGradient51"].Parent = Converted["_ClickToDeleteButton"]

Converted["_ClickToCollisionButton"].Font = Enum.Font.SourceSansBold
Converted["_ClickToCollisionButton"].Text = "Click To Disable Collision"
Converted["_ClickToCollisionButton"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToCollisionButton"].TextScaled = true
Converted["_ClickToCollisionButton"].TextSize = 14
Converted["_ClickToCollisionButton"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToCollisionButton"].TextWrapped = true
Converted["_ClickToCollisionButton"].BackgroundColor3 = Color3.fromRGB(67.00000360608101, 19.0000007674098, 83.00000265240669)
Converted["_ClickToCollisionButton"].BorderColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ClickToCollisionButton"].BorderSizePixel = 0
Converted["_ClickToCollisionButton"].Position = UDim2.new(0.391408831, 0, 0.174405143, 0)
Converted["_ClickToCollisionButton"].Size = UDim2.new(0.14986591, 0, 0.0529504009, 0)
Converted["_ClickToCollisionButton"].Name = "ClickToCollisionButton"
Converted["_ClickToCollisionButton"].Parent = Converted["_Client"]

Converted["_UIGradient52"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(232.00000137090683, 232.00000137090683, 232.00000137090683)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(148.000006377697, 148.000006377697, 148.000006377697))
}
Converted["_UIGradient52"].Rotation = 90
Converted["_UIGradient52"].Parent = Converted["_ClickToCollisionButton"]

Converted["_TextBoxs"].Name = "TextBoxs"
Converted["_TextBoxs"].Parent = Converted["_VexFrame"]

Converted["_TextBoxFrame"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_TextBoxFrame"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBoxFrame"].BackgroundTransparency = 0.6000000238418579
Converted["_TextBoxFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBoxFrame"].BorderSizePixel = 0
Converted["_TextBoxFrame"].Position = UDim2.new(0.499621004, 0, 0.459462166, 0)
Converted["_TextBoxFrame"].Size = UDim2.new(0.609928966, 0, 0.690533459, 0)
Converted["_TextBoxFrame"].Visible = false
Converted["_TextBoxFrame"].Name = "TextBoxFrame"
Converted["_TextBoxFrame"].Parent = Converted["_TextBoxs"]

Converted["_TypeBelow"].Font = Enum.Font.SourceSansBold
Converted["_TypeBelow"].Text = "Type Below"
Converted["_TypeBelow"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow"].TextScaled = true
Converted["_TypeBelow"].TextSize = 14
Converted["_TypeBelow"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow"].TextWrapped = true
Converted["_TypeBelow"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow"].BackgroundTransparency = 1
Converted["_TypeBelow"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TypeBelow"].BorderSizePixel = 0
Converted["_TypeBelow"].Position = UDim2.new(-0.00174555229, 0, 0.032015983, 0)
Converted["_TypeBelow"].Size = UDim2.new(0.999999702, 0, 0.321897537, 0)
Converted["_TypeBelow"].Name = "TypeBelow"
Converted["_TypeBelow"].Parent = Converted["_TextBoxFrame"]

Converted["_TextBox3"].Font = Enum.Font.SourceSansBold
Converted["_TextBox3"].PlaceholderText = "(Click off or press enter to close.)"
Converted["_TextBox3"].Text = ""
Converted["_TextBox3"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox3"].TextScaled = true
Converted["_TextBox3"].TextSize = 14
Converted["_TextBox3"].TextWrapped = true
Converted["_TextBox3"].BackgroundColor3 = Color3.fromRGB(75.00000312924385, 75.00000312924385, 75.00000312924385)
Converted["_TextBox3"].BackgroundTransparency = 0.20000000298023224
Converted["_TextBox3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox3"].BorderSizePixel = 0
Converted["_TextBox3"].Position = UDim2.new(0.0783952028, 0, 0.410903394, 0)
Converted["_TextBox3"].Size = UDim2.new(0.840407431, 0, 0.471531719, 0)
Converted["_TextBox3"].Parent = Converted["_TextBoxFrame"]

Converted["_IntTextBoxFrame"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_IntTextBoxFrame"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Converted["_IntTextBoxFrame"].BackgroundTransparency = 0.6000000238418579
Converted["_IntTextBoxFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_IntTextBoxFrame"].BorderSizePixel = 0
Converted["_IntTextBoxFrame"].Position = UDim2.new(0.499621004, 0, 0.459462166, 0)
Converted["_IntTextBoxFrame"].Size = UDim2.new(0.609928966, 0, 0.690533459, 0)
Converted["_IntTextBoxFrame"].Visible = false
Converted["_IntTextBoxFrame"].Name = "IntTextBoxFrame"
Converted["_IntTextBoxFrame"].Parent = Converted["_TextBoxs"]

Converted["_TypeBelow1"].Font = Enum.Font.SourceSansBold
Converted["_TypeBelow1"].Text = "Type Below"
Converted["_TypeBelow1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow1"].TextScaled = true
Converted["_TypeBelow1"].TextSize = 14
Converted["_TypeBelow1"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow1"].TextWrapped = true
Converted["_TypeBelow1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TypeBelow1"].BackgroundTransparency = 1
Converted["_TypeBelow1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TypeBelow1"].BorderSizePixel = 0
Converted["_TypeBelow1"].Position = UDim2.new(-0.00174555229, 0, 0.032015983, 0)
Converted["_TypeBelow1"].Size = UDim2.new(0.999999702, 0, 0.321897537, 0)
Converted["_TypeBelow1"].Name = "TypeBelow"
Converted["_TypeBelow1"].Parent = Converted["_IntTextBoxFrame"]

Converted["_TextBox4"].Font = Enum.Font.SourceSansBold
Converted["_TextBox4"].PlaceholderColor3 = Color3.fromRGB(140.00000685453415, 140.00000685453415, 140.00000685453415)
Converted["_TextBox4"].PlaceholderText = "Text"
Converted["_TextBox4"].Text = ""
Converted["_TextBox4"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextBox4"].TextScaled = true
Converted["_TextBox4"].TextSize = 14
Converted["_TextBox4"].TextWrapped = true
Converted["_TextBox4"].BackgroundColor3 = Color3.fromRGB(75.00000312924385, 75.00000312924385, 75.00000312924385)
Converted["_TextBox4"].BackgroundTransparency = 0.20000000298023224
Converted["_TextBox4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextBox4"].BorderSizePixel = 0
Converted["_TextBox4"].Position = UDim2.new(0.0783952028, 0, 0.410903394, 0)
Converted["_TextBox4"].Size = UDim2.new(0.840407431, 0, 0.471531719, 0)
Converted["_TextBox4"].Parent = Converted["_IntTextBoxFrame"]

Converted["_Close1"].Font = Enum.Font.SourceSansBold
Converted["_Close1"].Text = "X"
Converted["_Close1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Close1"].TextSize = 25
Converted["_Close1"].TextWrapped = true
Converted["_Close1"].BackgroundColor3 = Color3.fromRGB(84.00000259280205, 5.000000176951289, 5.000000176951289)
Converted["_Close1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Close1"].BorderSizePixel = 0
Converted["_Close1"].Position = UDim2.new(0.930211127, 0, 0, 0)
Converted["_Close1"].Size = UDim2.new(0.069789052, 0, 0.115035973, 0)
Converted["_Close1"].Name = "Close"
Converted["_Close1"].Parent = Converted["_IntTextBoxFrame"]

Converted["_Title"].Font = Enum.Font.SourceSansBold
Converted["_Title"].Text = "VEXSPLOIT PANEL"
Converted["_Title"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title"].TextScaled = true
Converted["_Title"].TextSize = 14
Converted["_Title"].TextWrapped = true
Converted["_Title"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title"].BackgroundTransparency = 1
Converted["_Title"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Title"].BorderSizePixel = 0
Converted["_Title"].Position = UDim2.new(0.0591664016, 0, 0.973731339, 0)
Converted["_Title"].Size = UDim2.new(0.177207708, 0, -0.973730862, 0)
Converted["_Title"].Name = "Title"
Converted["_Title"].Parent = Converted["_Main"]

Converted["_UIGradient53"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(38.0000015348196, 32.00000189244747, 42.000001296401024))
}
Converted["_UIGradient53"].Rotation = 90
Converted["_UIGradient53"].Parent = Converted["_Main"]

Converted["_FPS"].Font = Enum.Font.SourceSansBold
Converted["_FPS"].Text = "FPS:"
Converted["_FPS"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FPS"].TextScaled = true
Converted["_FPS"].TextSize = 14
Converted["_FPS"].TextWrapped = true
Converted["_FPS"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_FPS"].BackgroundTransparency = 1
Converted["_FPS"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_FPS"].BorderSizePixel = 0
Converted["_FPS"].Position = UDim2.new(0.894647121, 0, 0, 0)
Converted["_FPS"].Size = UDim2.new(0.105354942, 0, 0.973731399, 0)
Converted["_FPS"].Name = "FPS"
Converted["_FPS"].Parent = Converted["_Main"]

Converted["_Logo"].Image = "rbxassetid://101713159491693"
Converted["_Logo"].ImageContent = Content
Converted["_Logo"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_Logo"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Logo"].BackgroundTransparency = 1
Converted["_Logo"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Logo"].BorderSizePixel = 0
Converted["_Logo"].Position = UDim2.new(0.479643732, 0, 0.498773664, 0)
Converted["_Logo"].Size = UDim2.new(0.317999989, 1, 0.777018666, 1)
Converted["_Logo"].Visible = false
Converted["_Logo"].Name = "Logo"
Converted["_Logo"].Parent = Converted["_VEXGUI"]

Converted["_UICorner7"].CornerRadius = UDim.new(10, 10)
Converted["_UICorner7"].Parent = Converted["_Logo"]

Converted["_ChatLog"].BackgroundColor3 = Color3.fromRGB(155.00000596046448, 57.00000040233135, 235.0000011920929)
Converted["_ChatLog"].BackgroundTransparency = 0.30000001192092896
Converted["_ChatLog"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ChatLog"].BorderSizePixel = 0
Converted["_ChatLog"].Position = UDim2.new(0.698281348, 0, 0.331900746, 0)
Converted["_ChatLog"].Size = UDim2.new(0.290848941, 0, 0.0324009843, 0)
Converted["_ChatLog"].Visible = false
Converted["_ChatLog"].Name = "ChatLog"
Converted["_ChatLog"].Parent = Converted["_VEXGUI"]

Converted["_UIGradient54"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180.00000447034836, 180.00000447034836, 180.00000447034836)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
}
Converted["_UIGradient54"].Rotation = 90
Converted["_UIGradient54"].Parent = Converted["_ChatLog"]

Converted["_Text"].Name = "Text"
Converted["_Text"].Parent = Converted["_ChatLog"]

Converted["_Chats"].Name = "Chats"
Converted["_Chats"].Parent = Converted["_Text"]

Converted["_Other"].Name = "Other"
Converted["_Other"].Parent = Converted["_Text"]

Converted["_Title1"].Font = Enum.Font.SourceSansBold
Converted["_Title1"].Text = "Chatlogs"
Converted["_Title1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title1"].TextScaled = true
Converted["_Title1"].TextSize = 14
Converted["_Title1"].TextWrapped = true
Converted["_Title1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title1"].BackgroundTransparency = 1
Converted["_Title1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Title1"].BorderSizePixel = 0
Converted["_Title1"].Position = UDim2.new(-3.25434212e-06, 0, 0.053505946, 0)
Converted["_Title1"].Size = UDim2.new(1.0000056, 0, 0.89564842, 0)
Converted["_Title1"].Name = "Title"
Converted["_Title1"].Parent = Converted["_Other"]

Converted["_ScrollingMainFrame"].ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingMainFrame"].ScrollBarThickness = 14
Converted["_ScrollingMainFrame"].Active = true
Converted["_ScrollingMainFrame"].BackgroundColor3 = Color3.fromRGB(48.000000938773155, 48.000000938773155, 48.000000938773155)
Converted["_ScrollingMainFrame"].BackgroundTransparency = 0.5
Converted["_ScrollingMainFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ScrollingMainFrame"].BorderSizePixel = 0
Converted["_ScrollingMainFrame"].Position = UDim2.new(-2.43823456e-06, 0, 1.00000143, 0)
Converted["_ScrollingMainFrame"].Size = UDim2.new(1.00000501, 0, 12.7847157, 0)
Converted["_ScrollingMainFrame"].Name = "ScrollingMainFrame"
Converted["_ScrollingMainFrame"].Parent = Converted["_ChatLog"]

Converted["_Template"].Name = "Template"
Converted["_Template"].Parent = Converted["_ChatLog"]

Converted["_UserSent"].Font = Enum.Font.SourceSansBold
Converted["_UserSent"].Text = "User:"
Converted["_UserSent"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_UserSent"].TextScaled = true
Converted["_UserSent"].TextSize = 14
Converted["_UserSent"].TextWrapped = true
Converted["_UserSent"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_UserSent"].BackgroundTransparency = 1
Converted["_UserSent"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_UserSent"].BorderSizePixel = 0
Converted["_UserSent"].Position = UDim2.new(-7.80235041e-06, 0, 1.15994799, 0)
Converted["_UserSent"].Size = UDim2.new(0.243235663, 0, 1.09073603, 0)
Converted["_UserSent"].Visible = false
Converted["_UserSent"].Name = "UserSent"
Converted["_UserSent"].Parent = Converted["_Template"]

Converted["_MessageSent"].Font = Enum.Font.SourceSans
Converted["_MessageSent"].Text = "Message"
Converted["_MessageSent"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MessageSent"].TextScaled = true
Converted["_MessageSent"].TextSize = 14
Converted["_MessageSent"].TextWrapped = true
Converted["_MessageSent"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MessageSent"].BackgroundTransparency = 1
Converted["_MessageSent"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_MessageSent"].BorderSizePixel = 0
Converted["_MessageSent"].Position = UDim2.new(0.860667288, 0, 0.241487265, 0)
Converted["_MessageSent"].Size = UDim2.new(3.25060368, 0, 1.8039788, 0)
Converted["_MessageSent"].Visible = false
Converted["_MessageSent"].Name = "MessageSent"
Converted["_MessageSent"].Parent = Converted["_UserSent"]

Converted["_DeathText"].Font = Enum.Font.SourceSansBold
Converted["_DeathText"].Text = "PLEASE STAND BY AS WE RE-EXECUTE"
Converted["_DeathText"].TextColor3 = Color3.fromRGB(255, 0, 0)
Converted["_DeathText"].TextScaled = true
Converted["_DeathText"].TextSize = 14
Converted["_DeathText"].TextWrapped = true
Converted["_DeathText"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_DeathText"].BackgroundTransparency = 1
Converted["_DeathText"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_DeathText"].BorderSizePixel = 0
Converted["_DeathText"].Position = UDim2.new(0.150310561, 0, 0.331316173, 0)
Converted["_DeathText"].Size = UDim2.new(0.698447227, 0, 0.256682366, 0)
Converted["_DeathText"].Visible = false
Converted["_DeathText"].Name = "DeathText"
Converted["_DeathText"].Parent = Converted["_VEXGUI"]

Converted["_NotificationTop"].AnchorPoint = Vector2.new(0.5, 0.5)
Converted["_NotificationTop"].BackgroundColor3 = Color3.fromRGB(15.000000055879354, 15.000000055879354, 15.000000055879354)
Converted["_NotificationTop"].BackgroundTransparency = 0.25
Converted["_NotificationTop"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_NotificationTop"].BorderSizePixel = 0
Converted["_NotificationTop"].Position = UDim2.new(0.452454776, 0, 0.0529500768, 0)
Converted["_NotificationTop"].Size = UDim2.new(0.390584171, 0, 0.106051445, 0)
Converted["_NotificationTop"].Visible = false
Converted["_NotificationTop"].Name = "NotificationTop"
Converted["_NotificationTop"].Parent = Converted["_VEXGUI"]

Converted["_UICorner8"].CornerRadius = UDim.new(0.0500000007, 8)
Converted["_UICorner8"].Parent = Converted["_NotificationTop"]

Converted["_Text1"].Name = "Text"
Converted["_Text1"].Parent = Converted["_NotificationTop"]

Converted["_Title2"].Font = Enum.Font.SourceSansBold
Converted["_Title2"].Text = "Title"
Converted["_Title2"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title2"].TextScaled = true
Converted["_Title2"].TextSize = 14
Converted["_Title2"].TextWrapped = true
Converted["_Title2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Title2"].BackgroundTransparency = 1
Converted["_Title2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Title2"].BorderSizePixel = 0
Converted["_Title2"].Position = UDim2.new(-1.94240314e-07, 0, 0, 0)
Converted["_Title2"].Size = UDim2.new(1.00000036, 0, 0.41369465, 0)
Converted["_Title2"].Name = "Title"
Converted["_Title2"].Parent = Converted["_Text1"]

Converted["_Text2"].Font = Enum.Font.SourceSans
Converted["_Text2"].Text = "Text goes here."
Converted["_Text2"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Text2"].TextScaled = true
Converted["_Text2"].TextSize = 14
Converted["_Text2"].TextWrapped = true
Converted["_Text2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Text2"].BackgroundTransparency = 1
Converted["_Text2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Text2"].BorderSizePixel = 0
Converted["_Text2"].Position = UDim2.new(0.00372086745, 0, 0.41369465, 0)
Converted["_Text2"].Size = UDim2.new(0.99627912, 0, 0.442367971, 0)
Converted["_Text2"].Name = "Text"
Converted["_Text2"].Parent = Converted["_Text1"]

Converted["_GUI"].Font = Enum.Font.SourceSansBold
Converted["_GUI"].Text = "VEXsploit"
Converted["_GUI"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GUI"].TextScaled = true
Converted["_GUI"].TextSize = 14
Converted["_GUI"].TextWrapped = true
Converted["_GUI"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_GUI"].BackgroundTransparency = 1
Converted["_GUI"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_GUI"].BorderSizePixel = 0
Converted["_GUI"].Position = UDim2.new(0.875707388, 0, 0.0998572856, 0)
Converted["_GUI"].Size = UDim2.new(0.0984314233, 0, 0.199857354, 0)
Converted["_GUI"].Name = "GUI"
Converted["_GUI"].Parent = Converted["_Text1"]

Converted["_UIGradient55"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(178.00000458955765, 123.0000002682209, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(102.00000151991844, 58.00000034272671, 167.00000524520874))
}
Converted["_UIGradient55"].Parent = Converted["_GUI"]

-- Fake Module Scripts:

local fake_module_scripts = {}

do -- Fake Module: StarterGui.VEXGUI.Main.VexFrame.ButtonModule
    local script = Instance.new("ModuleScript")
    script.Name = "ButtonModule"
    script.Parent = Converted["_VexFrame"]
    local function module_script()
		local ButtonModule = {}
		
		function ButtonModule.ColorOn(Button)
			Button.BorderSizePixel = 2
		end
		
		function ButtonModule.ColorOff(Button)
			Button.BorderSizePixel = 0
		end
		
		
		return ButtonModule
		
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.VEXGUI.Main.VexFrame.TextBoxModule
    local script = Instance.new("ModuleScript")
    script.Name = "TextBoxModule"
    script.Parent = Converted["_VexFrame"]
    local function module_script()
		local TextBoxModule = {}
		local TextBoxFrame = script.Parent.TextBoxs.TextBoxFrame
		local TextBox = TextBoxFrame.TextBox
		
		local main = script.Parent.Parent.Parent.Main
		
		local intTextBoxframe = script.Parent.TextBoxs.IntTextBoxFrame
		local inttextbox = intTextBoxframe.TextBox
		
		local textBoxsFrame = script.Parent.TextBoxs
		
		-- Helper to set transparency of all elements in Main except TextBoxs
		local function setMainTransparency(transparency)
			for _, obj in pairs(main:GetDescendants()) do
				if not textBoxsFrame:IsAncestorOf(obj) then
					if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("Frame") then
						if obj:FindFirstChild("BackgroundTransparency") then
							obj.BackgroundTransparency = transparency
						end
						if obj:IsA("TextLabel") or obj:IsA("TextButton") then
							obj.TextTransparency = transparency
						end
					end
				end
			end
		end
		
		function TextBoxModule.SetProperty(object, propertyName)
			TextBoxFrame.Visible = true
			setMainTransparency(1)
		
			TextBox.FocusLost:Connect(function()
				TextBoxFrame.Visible = false
				local value = tonumber(TextBox.Text) or TextBox.Text
				object[propertyName] = value
				setMainTransparency(0)
			end)
		end
		local notificationmodule = require(script.Parent.NotificationModule)
		
		function TextBoxModule.IntSetProperty(object, propertyName)
			intTextBoxframe.Visible = true
			setMainTransparency(1)
			
			local Names = {"WalkSpeed", "JumpPower", "Gravity", "FieldOfView"}
			local OriginalValues = {"16", "50", "196.2", ""}
		
			for i, v in pairs(Names) do
				if propertyName == v then
					inttextbox.PlaceholderText = OriginalValues[i]
				end
			end
		
			inttextbox.FocusLost:Connect(function()
				intTextBoxframe.Visible = false
		
				local value = tonumber(inttextbox.Text)
				if value then
					object[propertyName] = value
				else
					warn("Invalid input: Must be a number.")
					notificationmodule.Notification("Warning", "Must be a number ‼️.", 3)
				end
		
				inttextbox.Text = ""
				setMainTransparency(0)
			end)
		
			intTextBoxframe.Close.MouseButton1Up:Connect(function()
				intTextBoxframe.Visible = false
				setMainTransparency(0)
			end)
		end
		
		return TextBoxModule
		
    end
    fake_module_scripts[script] = module_script
end
do -- Fake Module: StarterGui.VEXGUI.Main.VexFrame.NotificationModule
    local script = Instance.new("ModuleScript")
    script.Name = "NotificationModule"
    script.Parent = Converted["_VexFrame"]
    local function module_script()
		local NotificationModule = {}
		
		local guiNotificationFrame = script.Parent.Parent.Parent.NotificationTop
		local guiTitle = guiNotificationFrame.Text.Title
		local guiText = guiNotificationFrame.Text.Text
		
		
		local TweenService = game:GetService("TweenService")
		local ti = TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
		
		local NotificationAudio
		
		function NotificationModule.Notification(Title, Text, Time)
			local MainIcon = "rbxassetid://6031071050" -- Replace with your actual icon ID
		
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = Title,
				Text = Text,
				Duration = Time or 5,
				Icon = MainIcon,
			})
		end
		
		
		function NotificationModule.GuiNotification(Title, Text, Duration)
			-- Clone the notification frame
			local clone = guiNotificationFrame:Clone()
			clone.Parent = guiNotificationFrame.Parent
			clone.Visible = false
		
			-- Set title and text
			clone.Text.Title.Text = Title
			clone.Text.Text.Text = Text
		
			-- Play notification sound
		
			-- Slide in
			clone.Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, -0.12, 0)
			clone.Visible = true
			TweenService:Create(clone, ti, {
				Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, 0.02, 0)
			}):Play()
			
			local NotificationAudio = Instance.new("Sound")
			NotificationAudio.SoundId = "rbxassetid://4590662766"
			NotificationAudio.Parent = workspace
			NotificationAudio:Play()
			game.Debris:AddItem(NotificationAudio, Duration + 0.5)
		
			-- Wait and slide out
			task.delay(Duration, function()
				TweenService:Create(clone, ti, {
					Position = UDim2.new(0.5, -clone.Size.X.Offset / 2, -1.5, 0)
				}):Play()
		
				task.wait(0.5)
				clone:Destroy()
			end)
		end
		
		
		
		return NotificationModule
		
		
    end
    fake_module_scripts[script] = module_script
end

-- Fake Local Scripts:

local function NPFOF_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Home.Thanks.RGBLabelScript
    local script = Instance.new("LocalScript")
    script.Name = "RGBLabelScript"
    script.Parent = Converted["_Thanks"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Button = script.Parent
	local CurrentColor = Color3.new(255, 0 , 0)
	
	function zigzag(X) return math.acos(math.cos(X*math.pi))/math.pi end
	
	counter = 0
	
	while wait(0.1)do
		script.Parent.TextColor3 = Color3.fromHSV(zigzag(counter),1,1)
	
		counter = counter + 0.05
	end
end
local function HLOA_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Home.ChangeTheme.ThemeScript
    local script = Instance.new("LocalScript")
    script.Name = "ThemeScript"
    script.Parent = Converted["_ChangeTheme"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local HttpService = game:GetService("HttpService")
	local FILE_NAME = "theme_color.json"
	
	local Colors = script.Parent.Colors
	local Frame = script.Parent.Parent.Parent.Parent.Parent.VexFrame
	local Main = Frame.Parent
	local textbox = script.Parent.CustomColor
	
	-- Darkens a Color3 by a given factor (e.g., 0.9 = 10% darker)
	local function darkenColor(color, factor)
		return Color3.new(
			math.clamp(color.R * factor, 0, 1),
			math.clamp(color.G * factor, 0, 1),
			math.clamp(color.B * factor, 0, 1)
		)
	end
	
	-- Saves the color to a local file
	local function saveColor(color)
		local data = {
			R = color.R,
			G = color.G,
			B = color.B
		}
		writefile(FILE_NAME, HttpService:JSONEncode(data))
	end
	
	-- Loads the color from the local file, or returns nil
	local function loadColor()
		if isfile(FILE_NAME) then
			local data = HttpService:JSONDecode(readfile(FILE_NAME))
			return Color3.new(data.R, data.G, data.B)
		end
		return nil
	end
	
	-- Applies the theme color to all target elements
	local function applyColorTheme(color)
		local darkerColor = darkenColor(color, 0.3)
		local darkerColor2 = darkenColor(color, 0.3)
	
		Frame.BackgroundColor3 = color
		Main.BackgroundColor3 = color
	
		for _, button in pairs(script.Parent.Parent.Parent.Parent.Tabs.VexButtons.ScrollingFrame:GetChildren()) do
			if button:IsA("TextButton") then
				button.BackgroundColor3 = darkerColor
			end
		end
	
		for _, button2 in pairs(script.Parent.Parent.Parent.General:GetChildren()) do
			if button2:IsA("TextButton") then
				button2.BackgroundColor3 = darkerColor2
			end
		end
		
		for _ ,button3 in pairs(script.Parent.Parent.Parent.Settings.Buttons:GetChildren()) do
			if button3:IsA("TextButton") then
				button3.BackgroundColor3 = darkerColor2
			end
		end
		
		for _ ,button4 in pairs(script.Parent.Parent.Parent.Client:GetChildren()) do
			if button4:IsA("TextButton") then
				button4.BackgroundColor3 = darkerColor2
			end
		end
	
		for _, textbox in pairs(script.Parent.Parent.Parent.Parent.TextBoxs:GetChildren()) do
			if textbox:IsA("Frame") then
				textbox.BackgroundColor3 = color
			end
		end
	
		script.Parent.Parent.Parent.Parent.Parent.Parent.ChatLog.BackgroundColor3 = color
		script.Parent.Parent.Parent.Teleport.ImageLabel.BackgroundColor3 = darkerColor2
	end
	
	-- Handle color buttons
	for _, v in pairs(Colors:GetChildren()) do
		if v:IsA("TextButton") then
			v.MouseButton1Up:Connect(function()
				local originalColor = v.BackgroundColor3
				applyColorTheme(originalColor)
				saveColor(originalColor)
			end)
		end
	end
	
	-- Handle custom RGB input
	textbox.FocusLost:Connect(function()
		local text = textbox.Text:gsub("[()%[%]{}]", "") -- remove any brackets
		local r, g, b = text:match("^(%d+),%s*(%d+),%s*(%d+)$")
		r, g, b = tonumber(r), tonumber(g), tonumber(b)
	
		if r and g and b and r <= 255 and g <= 255 and b <= 255 then
			local color = Color3.fromRGB(r, g, b)
			applyColorTheme(color)
			saveColor(color)
			textbox.Text = string.format("%d,%d,%d is your theme color", r, g, b)
		else
			warn("Invalid RGB input. Please enter in the format: 255,0,0")
		end
	end)
	
	-- Load saved color on startup
	local savedColor = loadColor()
	if savedColor then
		applyColorTheme(savedColor)
	end
	
end
local function QEJTGP_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.TextHandler
    local script = Instance.new("LocalScript")
    script.Name = "TextHandler"
    script.Parent = Converted["_Tabs"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Players = game:GetService("Players")
	local Player = game.Players.LocalPlayer
	local char = Player.Character or Player.CharacterAdded:Wait()  -- Wait for the character to fully load
	
	local image = script.Parent.Home.PlayerImage
	
	-- Load player thumbnail
	local content = Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size150x150)
	image.Image = content
	
	local NotificationModule = require(script.Parent.Parent.NotificationModule)
	
	local accage = Player.AccountAge
	local id = Player.UserId
	local username = char.Name
	
	local info = script.Parent.Home.Info
	local ts = game:GetService("TweenService")
	
	info.PlrName.Text = "Welcome "..username.."!"
	info.AccAge.Text = "Your account age is "..accage.." Days old"
	info.plrid.Text = "USER ID "..id
	
	local charLoaded = false
	local ti = TweenInfo.new(3, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
	
	local nocc = false
	
	-- Wait for the character to load properly
	while not charLoaded do
		wait()
	
		script.Parent.Parent.Parent.Parent.Main.Visible = false
		for _, v in pairs(script.Parent.Parent.Parent.Parent.Main.VexFrame:WaitForChild("Tabs"):GetChildren()) do
			if v:IsA("Frame") then
				if v.Name ~= "Home" then
					v.Visible = false
				else
					v.Visible = true
				end
			end
		end
	
		for _, v in pairs(script.Parent.Parent.Parent.Parent.Main.VexFrame:WaitForChild("Tabs"):GetChildren()) do
			if v:IsA("ScrollingFrame") then
				if v.Name ~= "Home" then
					v.Visible = false
				end
			end
		end
	
		script.Parent.Parent.Parent.Parent:WaitForChild("Logo").ImageTransparency = 0
	
		local lighting = game:GetService("Lighting")
		local cc = lighting:FindFirstChild("ColorCorrection")
		if cc then
			origColor = cc.TintColor
			cc.TintColor = Color3.new(0, 0, 0)
		else
			nocc = true
			cc = Instance.new("ColorCorrectionEffect")
			cc.Name = "ColorCorrection"
			cc.TintColor = Color3.new(0, 0, 0)
			cc.Parent = lighting
			origColor = Color3.new(1, 1, 1)
		end
	
		-- Check if character exists
		if char then
			-- Handle the removal of ColorCorrectionEffect after 3 seconds
			if nocc == true then
				game.Debris:AddItem(cc, 3)
			end
	
			-- Tween the Logo transparency
			ts:Create(script.Parent.Parent.Parent.Parent.Logo, ti, {ImageTransparency = 1}):Play()
			wait(3)
	
			-- Show main UI again
			script.Parent.Parent.Parent.Parent.Main.Visible = true
			NotificationModule.GuiNotification("Welcome!", "Thanks for using VexSploit", 3)
	
			-- Restore ColorCorrectionEffect tint
			ts:Create(cc, ti, {TintColor = origColor}):Play()
	
			-- Mark character as fully loaded
			charLoaded = true
		end
	end
	
end
local function EEPNG_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Spectate.enterButton.SpectateScript
    local script = Instance.new("LocalScript")
    script.Name = "SpectateScript"
    script.Parent = Converted["_enterButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local textbox = button.Parent.TextBox
	local player = game.Players.LocalPlayer
	local cam = workspace.CurrentCamera
	local rs = game:GetService("RunService")
	local resetbutton = button.Parent.resetButton
	local TextChatService = game:GetService("TextChatService")
	local followTarget = nil
	
	-- Custom system message function with rich text styling
	local function sendSystemMessage(msg)
		local prefix = "<b><font color='#0073FF'>[SPECTATE]</font></b>" -- Bold + Blue
		local errorMessage = string.format("<font color='#FF0000'>⚠️ %s ⚠️</font>", msg) -- Red error text
		TextChatService.TextChannels.RBXGeneral:DisplaySystemMessage(prefix .. " " .. errorMessage)
	end
	
	-- Function to find a matching player (partial + case-insensitive)
	local function findMatchingPlayer(partialName)
		local matches = {}
		local lowerInput = string.lower(partialName)
	
		for _, plr in pairs(game.Players:GetPlayers()) do
			if string.sub(string.lower(plr.Name), 1, #lowerInput) == lowerInput then
				table.insert(matches, plr)
			end
		end
	
		-- Send error message based on the number of matches
		if #matches == 1 then
			return matches[1]  -- Single match, return it
		elseif #matches > 1 then
			sendSystemMessage("Error: " .. #matches .. " targets found")  -- Multiple matches, error
		elseif #matches == 0 then
			sendSystemMessage("Error: No target found")  -- No matches, error
		end
	
		return nil
	end
	
	-- Spectate camera update loop
	local function updateCamera()
		while followTarget do
			if followTarget.Character and followTarget.Character:FindFirstChild("HumanoidRootPart") then
				cam.CameraSubject = followTarget.Character:FindFirstChild("Humanoid")
			end
			rs.RenderStepped:Wait()
		end
	end
	
	-- Button click: try to find a valid player and follow
	button.MouseButton1Up:Connect(function()
		local inputText = textbox.Text
		if inputText == "" or inputText:match("^%s*$") then -- Check for empty or whitespace-only input
			sendSystemMessage("Error: No target entered")
			return
		end
	
		local targetPlayer = findMatchingPlayer(inputText)
		if targetPlayer then
			followTarget = targetPlayer
			updateCamera()
		end
	end)
	
	-- Reset button: stop following and return camera to self
	resetbutton.MouseButton1Up:Connect(function()
		followTarget = nil
		cam.CameraType = Enum.CameraType.Custom
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			cam.CameraSubject = player.Character.Humanoid
			cam.CFrame = player.Character.HumanoidRootPart.CFrame
		end
	end)
	
end
local function XOYGX_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Teleport.teleportenter.TeleportScript
    local script = Instance.new("LocalScript")
    script.Name = "TeleportScript"
    script.Parent = Converted["_teleportenter"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local textbox = button.Parent.TextBox
	local image = script.Parent.Parent.ImageLabel
	local player = game.Players.LocalPlayer
	local TextChatService = game:GetService("TextChatService")
	local Players = game:GetService("Players")
	
	-- System message with TELEPORT tag
	local function sendSystemMessage(msg)
		local prefix = "<b><font color='#9A33A4'>[TELEPORT]</font></b>"
		local warningMessage = string.format("<font color='#FF0000'>⚠️ %s ⚠️</font>", msg)
		TextChatService.TextChannels.RBXGeneral:DisplaySystemMessage(prefix .. " " .. warningMessage)
	end
	
	-- Find model by partial name in Workspace
	local function findMatchingTarget(partialName)
		local matches = {}
		local lowerInput = string.lower(partialName)
	
		for _, obj in pairs(workspace:GetChildren()) do
			if obj:IsA("Model") and string.sub(string.lower(obj.Name), 1, #lowerInput) == lowerInput then
				table.insert(matches, obj)
			end
		end
	
		if #matches == 1 then
			return matches[1]
		elseif #matches > 1 then
			sendSystemMessage("Error: " .. #matches .. " targets found")
		elseif #matches == 0 then
			sendSystemMessage("Error: No target found")
		end
	
		return nil
	end
	
	-- Try to find a player by partial name (case-insensitive)
	local function findPlayerByName(partialName)
		local lowerInput = string.lower(partialName)
	
		for _, plr in pairs(Players:GetPlayers()) do
			if string.sub(string.lower(plr.Name), 1, #lowerInput) == lowerInput then
				return plr
			end
		end
	
		return nil
	end
	
	-- Teleport and display thumbnail
	button.MouseButton1Up:Connect(function()
		local targetName = textbox.Text
	
		if not targetName or targetName:match("^%s*$") then
			sendSystemMessage("Error: No target entered")
			return
		end
	
		local target = findMatchingTarget(targetName)
		if not target then return end
	
		local char = player.Character or player.CharacterAdded:Wait()
		local root = char:FindFirstChild("HumanoidRootPart")
		local targetRoot = target:FindFirstChild("HumanoidRootPart")
	
		if root and targetRoot then
			root.CFrame = targetRoot.CFrame + Vector3.new(0, 5, 0)
	
			-- Update image if it's a player
			local targetPlayer = findPlayerByName(target.Name)
			if targetPlayer then
				local success, content = pcall(function()
					return Players:GetUserThumbnailAsync(
						targetPlayer.UserId,
						Enum.ThumbnailType.HeadShot,
						Enum.ThumbnailSize.Size150x150
					)
				end)
				if success then
					image.Image = content
				else
					warn("Thumbnail failed:", content)
				end
			else
				image.Image = "" -- Clear image if target is not a player
			end
		end
	end)
	
end
local function MJBJ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.FlingButton.FlingScript
    local script = Instance.new("LocalScript")
    script.Name = "FlingScript"
    script.Parent = Converted["_FlingButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local plr = game.Players.LocalPlayer
	local button = script.Parent
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local NotificationModule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local toggle = false
	local spinSpeed = 10000
	local spinningCoroutine = nil
	local touchConnections = {}
	
	-- FLING FUNCTION
	local function onPartTouched(otherPart)
		if not toggle then return end
	
		local char = plr.Character
		if not char then return end
	
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
		if not humrootpart then return end
	
		local otherChar = otherPart:FindFirstAncestorOfClass("Model")
		if otherChar and otherChar ~= char and otherChar:FindFirstChild("Humanoid") then
			local otherHumRoot = otherChar:FindFirstChild("HumanoidRootPart")
			if otherHumRoot then
				local direction = (otherHumRoot.Position - humrootpart.Position).Unit
				otherHumRoot.Velocity = direction * 10000
			end
		end
	end
	
	-- GET BODY PARTS
	local function getBodyParts(character)
		local bodyParts = {}
		local names = {}
	
		if character:FindFirstChild("Torso") then
			names = {"Head", "Torso", "LeftLeg", "RightLeg", "LeftArm", "RightArm"}
		elseif character:FindFirstChild("UpperTorso") then
			names = {
				"LeftFoot", "LeftHand", "LeftLowerArm", "LeftLowerLeg",
				"LeftUpperArm", "LeftUpperLeg", "UpperTorso",
				"RightFoot", "RightHand", "RightLowerArm", "RightLowerLeg",
				"RightUpperArm", "RightUpperLeg"
			}
		end
	
		for _, name in ipairs(names) do
			local part = character:FindFirstChild(name)
			if part then
				table.insert(bodyParts, part)
			end
		end
	
		return bodyParts
	end
	
	-- SPIN LOOP
	local function spinCharacter(humrootpart)
		while toggle and humrootpart and humrootpart.Parent do
			humrootpart.AssemblyAngularVelocity = Vector3.new(0, spinSpeed, 0)
			task.wait(0.1)
		end
	
		if humrootpart then
			humrootpart.AssemblyAngularVelocity = Vector3.zero
			humrootpart.RotVelocity = Vector3.zero
		end
	end
	
	-- APPLY TO CHARACTER
	local function setupCharacter(character)
		-- Disconnect previous
		for _, conn in pairs(touchConnections) do
			conn:Disconnect()
		end
		touchConnections = {}
	
		local humrootpart = character:WaitForChild("HumanoidRootPart")
		local bodyParts = getBodyParts(character)
	
		for _, part in ipairs(bodyParts) do
			local conn = part.Touched:Connect(onPartTouched)
			table.insert(touchConnections, conn)
		end
	
		if toggle then
			humrootpart.CanCollide = true
			humrootpart.CFrame = humrootpart.CFrame * CFrame.new(0, 0.5, 0)
			spinningCoroutine = coroutine.create(function()
				spinCharacter(humrootpart)
			end)
			coroutine.resume(spinningCoroutine)
		end
	end
	
	-- BUTTON TOGGLE
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		local char = plr.Character
		if not char then return end
	
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
		if not humrootpart then return end
	
		if toggle then
			humrootpart.CanCollide = true
			humrootpart.CFrame = humrootpart.CFrame * CFrame.new(0, 0.5, 0)
			spinningCoroutine = coroutine.create(function()
				spinCharacter(humrootpart)
			end)
			coroutine.resume(spinningCoroutine)
			buttonmodule.ColorOn(button)
			NotificationModule.Notification("Fling", "DONT USE SHIFTLOCK OR SIT!!!", 3)
		else
			humrootpart.CanCollide = false
			humrootpart.AssemblyAngularVelocity = Vector3.zero
			humrootpart.RotVelocity = Vector3.zero
			buttonmodule.ColorOff(button)
		end
	end)
	
	-- INITIAL SETUP
	if plr.Character then
		setupCharacter(plr.Character)
	end
	
	-- ON RESPAWN
	plr.CharacterAdded:Connect(setupCharacter)
	
end
local function DYVVOS_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.SpazButton.SpazScript
    local script = Instance.new("LocalScript")
    script.Name = "SpazScript"
    script.Parent = Converted["_SpazButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local character = plr.Character or plr.CharacterAdded:Wait()
	local humrootpart = character:WaitForChild("HumanoidRootPart")
	
	local seizureCoroutine = nil
	
	-- Update reference when character resets
	plr.CharacterAdded:Connect(function(newChar)
		character = newChar
		humrootpart = newChar:WaitForChild("HumanoidRootPart")
	end)
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
	
			seizureCoroutine = coroutine.create(function()
				while toggle do
					local jitter = Vector3.new(
						math.random(-1, 1),
						math.random(-1, 1),
						math.random(-1, 1)
					) * 0.2
	
					local rotation = CFrame.Angles(
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15))
					)
	
					if humrootpart then
						humrootpart.CFrame = humrootpart.CFrame + jitter
						humrootpart.CFrame = humrootpart.CFrame * rotation
					end
	
					task.wait(0.05)
				end
			end)
	
			coroutine.resume(seizureCoroutine)
		else
			buttonmodule.ColorOff(button)
		end
	end)
	
end
local function AFFGJ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.FreezeButton.FreezeScript
    local script = Instance.new("LocalScript")
    script.Name = "FreezeScript"
    script.Parent = Converted["_FreezeButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()  -- Ensure the character is loaded
	
	-- Function to safely get HumanoidRootPart
	local function getHumanoidRootPart()
		return char:FindFirstChild("HumanoidRootPart")
	end
	
	local function onCharacterAdded()
		char = plr.Character or plr.CharacterAdded:Wait()
	
		-- Wait for HumanoidRootPart to load on respawn
		local humrootpart = getHumanoidRootPart()
		while not humrootpart do
			humrootpart = getHumanoidRootPart()
			wait(0.1)
		end
	end
	
	-- Listen for respawn event and rebind HumanoidRootPart
	plr.CharacterAdded:Connect(onCharacterAdded)
	
	button.MouseButton1Up:Connect(function()
		local humrootpart = getHumanoidRootPart()
	
		-- Ensure HumanoidRootPart exists before toggling
		if humrootpart then
			humrootpart.Anchored = not humrootpart.Anchored
		else
			print("HumanoidRootPart not found!")
			return
		end
	
		-- Handle the toggle logic for the button color and notification
		if toggle == false then
			buttonmodule.ColorOn(button)
			notifmodule.Notification("Warning", "May break w/ Fake Lag ⚠️!", 3)
		else
			buttonmodule.ColorOff(button)
		end
		toggle = not toggle
	end)
	
end
local function CGPSXXM_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.XRayButton.XRayScript
    local script = Instance.new("LocalScript")
    script.Name = "XRayScript"
    script.Parent = Converted["_XRayButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local button = script.Parent
	local toggle = false
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	button.MouseButton1Up:Connect(function()
		-- Toggle the state
		toggle = not toggle
	
		-- Fix button color logic
		if toggle then
			buttonmodule.ColorOn(script.Parent)
		else
			buttonmodule.ColorOff(script.Parent)
		end
	
		-- Get the updated character
		local character = getCharacter()
	
		-- Ensure we are excluding the player's HumanoidRootPart from transparency changes
		for _, v in pairs(game.Workspace:GetDescendants()) do
			if v:IsA("Model") and v.Name ~= player.Name then  -- Exclude player's model
				for _, part in pairs(v:GetChildren()) do
					if part:IsA("BasePart") then
						-- Adjust transparency of models in the workspace
						part.Transparency = toggle and 0.5 or 0
					end
				end
			elseif v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then  -- Exclude HumanoidRootPart
				-- Adjust transparency of parts in the workspace
				v.Transparency = toggle and 0.5 or 0
			end
		end
	
		-- Handle the transparency of the player's HumanoidRootPart separately if needed
		local humRootPart = character:FindFirstChild("HumanoidRootPart")
		if humRootPart then
			-- Don't modify the HumanoidRootPart transparency
			humRootPart.Transparency = 1  -- Set transparency as needed, or skip this step if not necessary
		end
	end)
	
end
local function SWCCJ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.JumpPowerButton.JumpPowerScript
    local script = Instance.new("LocalScript")
    script.Name = "JumpPowerScript"
    script.Parent = Converted["_JumpPowerButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	
	-- Wait for necessary parts
	local function getHumanoid()
		return character:WaitForChild("Humanoid")
	end
	
	local function getHumanoidRootPart()
		return character:WaitForChild("HumanoidRootPart")
	end
	
	local humanoid = getHumanoid()
	local humRootPart = getHumanoidRootPart()
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	btn.MouseButton1Up:Connect(function()
		-- Toggle the effect of jump power
		toggle = not toggle
	
		if toggle then
			humanoid.UseJumpPower = true
			textboxmodule.IntSetProperty(humanoid, "JumpPower")
		else
			humanoid.UseJumpPower = false
		end
	end)
	
	-- Handle character respawn (in case character resets)
	player.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		humanoid = getHumanoid()
		humRootPart = getHumanoidRootPart()
	end)
	
end
local function JPLZHI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.WalkSpeedButton.WalkspeedScript
    local script = Instance.new("LocalScript")
    script.Name = "WalkspeedScript"
    script.Parent = Converted["_WalkSpeedButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	-- Function to handle button click and update walk speed
	local function handleButtonClick()
		local character = getCharacter()  -- Always get the current character
		local humanoid = character:WaitForChild("Humanoid")
	
		-- Call the module function to set walk speed
		textboxmodule.IntSetProperty(humanoid, "WalkSpeed")
	end
	
	btn.MouseButton1Up:Connect(function()
		handleButtonClick()
	end)
	
	-- Listen for respawn event to update character and ensure functionality
	player.CharacterAdded:Connect(function()
		-- You might need to reset the state or rebind certain properties here if needed
	end)
	
end
local function WSQQOFZ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ToggleTexturesButton.TexturesButton
    local script = Instance.new("LocalScript")
    script.Name = "TexturesButton"
    script.Parent = Converted["_ToggleTexturesButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Button = script.Parent
	local toggleState = false -- false = visible, true = hidden
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Store original transparency so we can restore it
	local cachedAssets = {}
	
	local function setDecalsAndTexturesVisibility(visible)
		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("Decal") or obj:IsA("Texture") then
				-- Cache the original transparency if not already done
				if cachedAssets[obj] == nil then
					cachedAssets[obj] = obj.Transparency
				end
	
				-- Set transparency: 0 = visible, 1 = invisible
				obj.Transparency = visible and cachedAssets[obj] or 1
			end
		end
	end
	
	-- Function to re-apply state after the character respawns
	local function resetVisibilityOnRespawn()
		local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
		character:WaitForChild("HumanoidRootPart") -- Ensures the character has respawned
		setDecalsAndTexturesVisibility(not toggleState) -- reapply the visibility state
	end
	
	-- Listen for player respawn to reset the visibility correctly
	game.Players.LocalPlayer.CharacterAdded:Connect(resetVisibilityOnRespawn)
	
	Button.MouseButton1Click:Connect(function()
		toggleState = not toggleState
		setDecalsAndTexturesVisibility(not toggleState) -- true = show, false = hide
	
		if toggleState then
			buttonmodule.ColorOn(Button)
		else
			buttonmodule.ColorOff(Button)
		end
	end)
	
end
local function GTLWI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.InfJump.InfJumpScript
    local script = Instance.new("LocalScript")
    script.Name = "InfJumpScript"
    script.Parent = Converted["_InfJump"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local userInputService = game:GetService("UserInputService")
	local toggle = false
	local jumpConnection -- Variable to store the connection
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Function to handle the jump logic
	local function onJumpRequest(input)
		-- Ensure the character is properly loaded before attempting to access Humanoid
		local humanoid = character:FindFirstChild("Humanoid")
		if toggle and input.KeyCode == Enum.KeyCode.Space and humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
	
	-- Handles toggling the button color and the toggle state
	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then
			toggle = true
			buttonmodule.ColorOn(script.Parent)
			jumpConnection = userInputService.InputBegan:Connect(onJumpRequest)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)
			if jumpConnection then
				jumpConnection:Disconnect() 
			end
		end
	end)
	
	-- Reconnect when the character respawns
	player.CharacterAdded:Connect(function(newCharacter)
		-- Update the character reference
		character = newCharacter
	
		-- If toggle is on, reconnect the jump connection
		if toggle then
			jumpConnection = userInputService.InputBegan:Connect(onJumpRequest)
		end
	end)
	
end
local function LHIW_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.SwimInAirButton.SwimInAirScript
    local script = Instance.new("LocalScript")
    script.Name = "SwimInAirScript"
    script.Parent = Converted["_SwimInAirButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local terrain = workspace.Terrain
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notification = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local toggled = false
	local updateConnection
	local waterSize = Vector3.new(4, 7, 10)
	local waterLifetime = 1.5 -- seconds
	local activeWaterCFrames = {}
	
	-- Function to clear all tracked water blocks
	local function clearAllWater()
		for _, cframe in ipairs(activeWaterCFrames) do
			terrain:FillBlock(cframe, waterSize, Enum.Material.Air)
		end
		activeWaterCFrames = {}
	end
	
	-- Update character reference when the player resets
	player.CharacterAdded:Connect(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:WaitForChild("HumanoidRootPart")
	end)
	
	button.MouseButton1Click:Connect(function()
		toggled = not toggled
	
		if toggled then
			updateConnection = RunService.RenderStepped:Connect(function()
				local character = player.Character or player.CharacterAdded:Wait()
				local hrp = character:FindFirstChild("HumanoidRootPart")
				buttonmodule.ColorOn(script.Parent)
				game.Workspace.Terrain.WaterReflectance = 0
				game.Workspace.Terrain.WaterTransparency = 1
	
				if hrp then
					local cframe = hrp.CFrame
					terrain:FillBlock(cframe, waterSize, Enum.Material.Water)
					table.insert(activeWaterCFrames, cframe)
	
					-- Schedule this block to be removed after waterLifetime
					task.delay(waterLifetime, function()
						terrain:FillBlock(cframe, waterSize, Enum.Material.Air)
	
						-- Clean up from the list
						for i, cf in ipairs(activeWaterCFrames) do
							if cf == cframe then
								table.remove(activeWaterCFrames, i)
								break
							end
						end
					end)
				end
			end)
		else
			if updateConnection then
				updateConnection:Disconnect()
				updateConnection = nil
			end
			clearAllWater()
	
			game.Workspace.Terrain.WaterReflectance = 1
			game.Workspace.Terrain.WaterTransparency = 0
			buttonmodule.ColorOff(script.Parent)
		end
	end)
	
	script.Parent.MouseButton1Up:Connect(function()
		if toggled == true then
			notification.Notification("AirSwim", "sorry about how it looks :(", 3)
		end
	end)
	
end
local function BQOXLAZ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.GravityButton.GravityScript
    local script = Instance.new("LocalScript")
    script.Name = "GravityScript"
    script.Parent = Converted["_GravityButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	
	btn.MouseButton1Up:Connect(function()
		textboxmodule.IntSetProperty(workspace, "Gravity")
	end)
end
local function EANW_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.SitButton.SitScript
    local script = Instance.new("LocalScript")
    script.Name = "SitScript"
    script.Parent = Converted["_SitButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local plr = game:GetService("Players").LocalPlayer
	local currentCharacter = plr.Character or plr.CharacterAdded:Wait()
	
	-- Always get updated character after a reset
	plr.CharacterAdded:Connect(function(char)
		currentCharacter = char
	end)
	
	script.Parent.MouseButton1Up:Connect(function()
		local hum = currentCharacter:FindFirstChild("Humanoid")
		if hum then
			hum.Sit = not hum.Sit
		end
	end)
	
end
local function JGJN_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ParalyzeButton.ParalyzeScript
    local script = Instance.new("LocalScript")
    script.Name = "ParalyzeScript"
    script.Parent = Converted["_ParalyzeButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local RunService = game:GetService("RunService")
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local function onCharacterAdded()
		local char = getCharacter()
		local hum = char:FindFirstChild("Humanoid")
		local humrootpart = char:FindFirstChild("HumanoidRootPart")
	
		-- Check if character is R6 or R15 by looking for "UpperTorso" or "Torso"
		local torso
		if char:FindFirstChild("UpperTorso") then
			torso = char:FindFirstChild("UpperTorso") -- R15 has UpperTorso
		elseif char:FindFirstChild("Torso") then
			torso = char:FindFirstChild("Torso") -- R6 has Torso
		end
	
		-- Button click event
		button.MouseButton1Up:Connect(function()
			if toggle == false then
				buttonmodule.ColorOn(button)
	
				if hum and humrootpart and torso then
					-- Create a BodyVelocity object to apply an upward force
					local bodyVelocity = Instance.new("BodyVelocity")
					bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- High force to ensure movement
					bodyVelocity.Velocity = Vector3.new(0, 50, 0)  -- Apply upward velocity
					bodyVelocity.Parent = humrootpart
	
					-- Wait for the player to reach 5 studs above their starting position
					local initialHeight = humrootpart.Position.Y
					local reachedHeight = false
					local heartbeatConnection
	
					heartbeatConnection = RunService.Heartbeat:Connect(function()
						if humrootpart.Position.Y - initialHeight >= 5 then
							reachedHeight = true
						end
					end)
	
					-- Wait until the height is reached
					while not reachedHeight do
						wait(0.1)
					end
	
					-- Once the player reaches the target height, stop them by enabling PlatformStand
					hum.PlatformStand = true
	
					-- Remove the BodyVelocity to stop any further motion
					bodyVelocity:Destroy()
					heartbeatConnection:Disconnect() -- Stop the heartbeat connection
				end
			else
				-- If toggled off, disable PlatformStand
				if hum then
					hum.PlatformStand = false
				end
				buttonmodule.ColorOff(button)
			end
	
			toggle = not toggle
		end)
	end
	
	-- Connect to CharacterAdded to handle respawn
	plr.CharacterAdded:Connect(onCharacterAdded)
	
	-- Initialize when the script first runs
	if plr.Character then
		onCharacterAdded()
	end
	
end
local function SEWN_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.HelicopterButton.HelicopterScript
    local script = Instance.new("LocalScript")
    script.Name = "HelicopterScript"
    script.Parent = Converted["_HelicopterButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	local humrootpart
	local spinConnection
	local helicopteraudio
	
	-- Function to handle button click and toggle the spin effect
	local function initCharacter()
		-- Ensure the character and HumanoidRootPart are loaded
		local char = plr.Character or plr.CharacterAdded:Wait()
		humrootpart = char:WaitForChild("HumanoidRootPart")
	end
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
			humrootpart.Anchored = true
	
			local spinAngle = 0
	
			-- Connect to Heartbeat to handle continuous spin and upward movement
			spinConnection = game:GetService("RunService").Heartbeat:Connect(function(dt)
				spinAngle += math.rad(720) * dt -- Fast spin
	
				local pos = humrootpart.Position
				local newY = pos.Y + 15 * dt -- Move upward
	
				-- Set the new position and spin angle
				humrootpart.CFrame = CFrame.new(pos.X, newY, pos.Z)
					* CFrame.Angles(math.rad(-90), 0, 0)  -- Lie face down
					* CFrame.Angles(0, 0, spinAngle)     -- Spin like rotor
			end)
	
			-- Add helicopter sound effect
			helicopteraudio = Instance.new("Sound", humrootpart)
			helicopteraudio.SoundId = "rbxassetid://686885384"
			helicopteraudio.Looped = true
			helicopteraudio:Play()
			helicopteraudio.Name = "helicopteraudio"
		else
			-- Reset button color and stop effect
			buttonmodule.ColorOff(button)
	
			-- Destroy the sound when toggled off
			if helicopteraudio then
				helicopteraudio:Destroy()
				helicopteraudio = nil
			end
	
			-- Disconnect spin connection and reset Anchored state
			if spinConnection then
				spinConnection:Disconnect()
				spinConnection = nil
			end
	
			humrootpart.Anchored = false
		end
	end)
	
	-- Reattach the connection if the character respawns
	plr.CharacterAdded:Connect(function()
		-- Cleanup any previous connections and effects
		if spinConnection then
			spinConnection:Disconnect()
			spinConnection = nil
		end
		if helicopteraudio then
			helicopteraudio:Destroy()
			helicopteraudio = nil
		end
	
		-- Re-initialize HumanoidRootPart after respawn
		initCharacter()
	end)
	
	-- Initialize HumanoidRootPart for the first time
	initCharacter()
	
end
local function MJCD_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.MoonwalkButton.MoonwalkScript
    local script = Instance.new("LocalScript")
    script.Name = "MoonwalkScript"
    script.Parent = Converted["_MoonwalkButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	
	-- Function to get the character and ensure it's loaded
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	-- Initial character setup
	local char = getCharacter()
	
	-- Function to handle character respawn
	plr.CharacterAdded:Connect(function()
		char = getCharacter()  -- Update character reference
	end)
	
	button.MouseButton1Up:Connect(function()
		local hum = char:WaitForChild("Humanoid")
		if toggle == false then
			if hum then
				buttonmodule.ColorOn(button)
				hum.AutoRotate = false
				notifmodule.Notification("Warning", "MOVE BACKWARDS ‼️", 3)
			end
		else
			if hum then
				hum.AutoRotate = true
				buttonmodule.ColorOff(button)
			end
		end
	
		toggle = not toggle
	end)
	
end
local function COQLIJF_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.SeizureButton.SeizureScript
    local script = Instance.new("LocalScript")
    script.Name = "SeizureScript"
    script.Parent = Converted["_SeizureButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local toggle = false
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	local plr = game:GetService("Players").LocalPlayer
	
	-- Function to get the character and ensure it has Humanoid and HumanoidRootPart
	local function getCharacter()
		local char = plr.Character or plr.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local function resetCharacterReferences()
		-- Wait until character is fully loaded
		local char = getCharacter()
		local hum = char:WaitForChild("Humanoid")
		local humrootpart = char:WaitForChild("HumanoidRootPart")
		return hum, humrootpart
	end
	
	-- Seizure coroutine variable
	local seizureCoroutine = nil
	
	-- Function to stop seizure effect if toggle is off
	local function stopSeizure()
		if seizureCoroutine then
			-- Stop the coroutine
			coroutine.close(seizureCoroutine)
			seizureCoroutine = nil
		end
	end
	
	-- Initial character references
	local hum, humrootpart = resetCharacterReferences()
	
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		-- If the character references are invalid, reinitialize them
		if not hum or not humrootpart then
			hum, humrootpart = resetCharacterReferences()
		end
	
		if toggle then
			buttonmodule.ColorOn(button)
			hum.PlatformStand = true
	
			-- Create and start the seizure coroutine
			seizureCoroutine = coroutine.create(function()
				while toggle do
					-- Random jitter
					local jitter = Vector3.new(
						math.random(-1, 1),
						math.random(-1, 1),
						math.random(-1, 1)
					) * 0.3
	
					-- Random rotation
					local rotation = CFrame.Angles(
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15)),
						math.rad(math.random(-15, 15))
					)
	
					-- Apply jitter and rotation to HumanoidRootPart
					humrootpart.CFrame = humrootpart.CFrame + jitter
					humrootpart.CFrame = humrootpart.CFrame * rotation
	
					-- Small delay for jittering effect
					task.wait(0.05)
				end
			end)
	
			-- Resume the coroutine to start jittering
			coroutine.resume(seizureCoroutine)
		else
			-- When toggled off, stop the seizure effect and reset PlatformStand
			stopSeizure()
			buttonmodule.ColorOff(button)
			hum.PlatformStand = false
		end
	end)
	
	-- Handle character respawn to ensure proper setup
	plr.CharacterAdded:Connect(function()
		-- Reinitialize character references upon respawn
		hum, humrootpart = resetCharacterReferences()
	end)
	
end
local function AYVIDZS_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.NoclipButton.NoclipScript
    local script = Instance.new("LocalScript")
    script.Name = "NoclipScript"
    script.Parent = Converted["_NoclipButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local textButton = script.Parent
	local player = game.Players.LocalPlayer
	
	-- Ensure the character is properly loaded
	local function getCharacter()
		local char = player.Character or player.CharacterAdded:Wait()
		while not char:FindFirstChild("Humanoid") or not char:FindFirstChild("HumanoidRootPart") do
			char.ChildAdded:Wait()
		end
		return char
	end
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local isNoclipping = false
	local previousCollisionState = {}
	
	-- Function to save and disable collisions
	local function enableNoclip()
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				previousCollisionState[part] = part.CanCollide
				part.CanCollide = false
			end
		end
	end
	
	-- Function to restore collisions
	local function disableNoclip()
		for part, state in pairs(previousCollisionState) do
			if part:IsA("BasePart") then
				part.CanCollide = state
			end
		end
		previousCollisionState = {}  -- Reset the stored states
	end
	
	-- Update character on respawn
	local character = getCharacter()
	player.CharacterAdded:Connect(function()
		character = getCharacter()  -- Update character reference
	end)
	
	textButton.MouseButton1Click:Connect(function()
		isNoclipping = not isNoclipping
	
		if isNoclipping then
			buttonmodule.ColorOn(textButton)
			enableNoclip()
		else
			buttonmodule.ColorOff(textButton)
			disableNoclip()
		end
	end)
	
end
local function BMYRJA_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.FlyButton.FlyScript
    local script = Instance.new("LocalScript")
    script.Name = "FlyScript"
    script.Parent = Converted["_FlyButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	function Fly()
		local plr = game.Players.LocalPlayer
		local mouse = plr:GetMouse()
		local localplayer = plr
	
		if workspace:FindFirstChild("Core") then
			workspace.Core:Destroy()
		end
	
		local Core = Instance.new("Part")
		Core.CanCollide = false
		Core.Name = "Core"
		Core.Size = Vector3.new(0.05, 0.05, 0.05)
	
		spawn(function()
			Core.Parent = workspace
			local Weld = Instance.new("Weld", Core)
			Weld.Part0 = Core
	
			-- Dynamically check if the player is R6 or R15
			local torsoPart = localplayer.Character:FindFirstChild("UpperTorso") or localplayer.Character:FindFirstChild("Torso")
			Weld.Part1 = torsoPart
			Weld.C0 = CFrame.new(0, 0, 0)
		end)
	
		workspace:WaitForChild("Core")
	
		local torso = workspace.Core
		local flying = true
		local speed = 10
		local keys = {a = false, d = false, w = false, s = false}
		local e1, e2
	
		local function start()
			local pos = Instance.new("BodyPosition", torso)
			local gyro = Instance.new("BodyGyro", torso)
			pos.Name = "EPIXPOS"
			pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
			pos.position = torso.Position
			gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			gyro.cframe = torso.CFrame
	
			repeat
				wait()
				localplayer.Character.Humanoid.PlatformStand = true
				local new = gyro.cframe - gyro.cframe.p + pos.position
	
				if not keys.w and not keys.s and not keys.a and not keys.d then
					speed = 5
				end
	
				if keys.w then
					new = new + workspace.CurrentCamera.CFrame.LookVector * speed
					speed = speed + 0
				end
	
				if keys.s then
					new = new - workspace.CurrentCamera.CFrame.LookVector * speed
					speed = speed + 0
				end
	
				if keys.d then
					new = new * CFrame.new(speed, 0, 0)
					speed = speed + 0
				end
	
				if keys.a then
					new = new * CFrame.new(-speed, 0, 0)
					speed = speed + 0
				end
	
				if speed > 10 then
					speed = 5
				end
	
				pos.position = new.p
	
				if keys.w then
					gyro.cframe = workspace.CurrentCamera.CFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
				elseif keys.s then
					gyro.cframe = workspace.CurrentCamera.CFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
				else
					gyro.cframe = workspace.CurrentCamera.CFrame
				end
			until flying == false
	
			if gyro then gyro:Destroy() end
			if pos then pos:Destroy() end
			flying = false
			localplayer.Character.Humanoid.PlatformStand = false
			speed = 10
		end
	
		e1 = mouse.KeyDown:Connect(function(key)
			if not torso or not torso.Parent then 
				flying = false 
				e1:Disconnect() 
				e2:Disconnect() 
				return 
			end
	
			if key == "w" then
				keys.w = true
			elseif key == "s" then
				keys.s = true
			elseif key == "a" then
				keys.a = true
			elseif key == "d" then
				keys.d = true
			elseif key == "x" then
				if flying == true then
					flying = false
				else
					flying = true
					start()
				end
			end
		end)
	
		e2 = mouse.KeyUp:Connect(function(key)
			if key == "w" then
				keys.w = false
			elseif key == "s" then
				keys.s = false
			elseif key == "a" then
				keys.a = false
			elseif key == "d" then
				keys.d = false
			end
		end)
	
		start()
	end
	local notifmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	local debounce = false
	script.Parent.MouseButton1Up:Connect(function()
		if debounce == false then
			Fly()
			notifmodule.Notification("Warning", "After reset, may need to click button again.", 3)
			debounce = true
		end
	end)
	game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
		debounce = false
		game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	end)
	
end
local function SEMZ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.AntiVoidButton.AntivoidScript
    local script = Instance.new("LocalScript")
    script.Name = "AntivoidScript"
    script.Parent = Converted["_AntiVoidButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local button = script.Parent
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local TweenService = game:GetService("TweenService")
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local player = Players.LocalPlayer
	local lastSafeCFrame = nil
	local fallThresholdY = -50
	local antiVoidEnabled = false
	local connection = nil
	
	local debounceTime = 2 -- Time in seconds between showing warnings
	local canShowWarning = true -- Flag for controlling the warning debounce
	
	-- UI Setup
	local function createUI()
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "AntiVoidUI"
		screenGui.ResetOnSpawn = false
		screenGui.Parent = player:WaitForChild("PlayerGui")
	
		local warning = Instance.new("TextLabel")
		warning.Name = "VoidWarning"
		warning.Size = UDim2.new(0.5, 0, 0.1, 0)
		warning.Position = UDim2.new(0.25, 0, 0.4, 0)
		warning.BackgroundTransparency = 0.4
		warning.BackgroundColor3 = Color3.new(0, 0, 0)
		warning.TextColor3 = Color3.new(1, 0.2, 0.2)
		warning.Font = Enum.Font.GothamBold
		warning.TextScaled = true
		warning.Text = "Void Detected! Returning to Safe Ground..."
		warning.Visible = false
		warning.Parent = screenGui
	
		return warning
	end
	
	local warningLabel = createUI()
	
	local function showWarning()
		if not canShowWarning then return end
	
		canShowWarning = false
		warningLabel.Visible = true
		warningLabel.TextTransparency = 1
		warningLabel.TextStrokeTransparency = 1
	
		local tweenIn = TweenService:Create(warningLabel, TweenInfo.new(0.3), {
			TextTransparency = 0,
			TextStrokeTransparency = 0.3
		})
	
		local tweenOut = TweenService:Create(warningLabel, TweenInfo.new(0.5), {
			TextTransparency = 1,
			TextStrokeTransparency = 1
		})
	
		tweenIn:Play()
		tweenIn.Completed:Wait()
		wait(1)
		tweenOut:Play()
		tweenOut.Completed:Wait()
		warningLabel.Visible = false
	
		-- Reset debounce after a delay
		wait(debounceTime)
		canShowWarning = true
	end
	
	local function enableAntiVoid(character)
		local humanoid = character:WaitForChild("Humanoid", 5)
		local rootPart = character:WaitForChild("HumanoidRootPart", 5)
	
		if not humanoid or not rootPart then return end
	
		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	
		connection = RunService.RenderStepped:Connect(function()
			if not antiVoidEnabled then return end
	
			-- Raycast downward to check if feet are over ground
			local rayOrigin = rootPart.Position
			local rayDirection = Vector3.new(0, -4, 0)
	
			local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
			if result and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
				lastSafeCFrame = rootPart.CFrame
			end
	
			-- Void detection and recovery
			if humanoid:GetState() == Enum.HumanoidStateType.Freefall and rootPart.Position.Y < fallThresholdY then
				if lastSafeCFrame then
					rootPart.CFrame = lastSafeCFrame + Vector3.new(0, 3, 0)
					showWarning()
					warn("Void detected — Teleported to grounded position.")
				end
			end
		end)
	end
	
	local function onCharacterAdded(char)
		if antiVoidEnabled then
			enableAntiVoid(char)
		end
	end
	
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
	player.CharacterAdded:Connect(onCharacterAdded)
	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	
	-- Toggle system
	button.MouseButton1Click:Connect(function()
		antiVoidEnabled = not antiVoidEnabled
		
	
		if antiVoidEnabled then
			warn("Anti-Void Enabled")
			notificationmodule.Notification("WARNING ⚠️", "FLASH WARNING (Use fly incase‼️)", 3)
			buttonmodule.ColorOn(script.Parent)
			if player.Character then
				enableAntiVoid(player.Character)
			end
		else
			warn("Anti-Void Disabled")
			buttonmodule.ColorOff(script.Parent)
			if connection then
				connection:Disconnect()
				connection = nil
			end
		end
	end)
	
end
local function JGUW_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ChatSpam.ChatSpamScript
    local script = Instance.new("LocalScript")
    script.Name = "ChatSpamScript"
    script.Parent = Converted["_ChatSpam"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	
	local toggle = false
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox
	
	local TextChatService = game:GetService("TextChatService")
	local chatChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
	
	-- Toggle on button click
	btn.MouseButton1Up:Connect(function()
		toggle = not toggle
		btn.Text = toggle and "Stop Spamming" or "Chat Spam"
		buttonmodule.ColorOff(btn)
	
		if toggle then
	
			textboxmodule.SetProperty(textbox, "Text")
			textbox.Text = ""
			buttonmodule.ColorOn(btn)
		end
	end)
	
	-- Use TextBoxModule to allow editing the textbox
	
	
	-- Repeating task to send messages
	task.spawn(function()
		while true do
			if toggle then
				local message = textbox.Text
				if message and message ~= "" then
					chatChannel:SendAsync(message)
				end
			end
			task.wait(0.4) -- adjust for spam rate
		end
	end)
	
end
local function WSKJNGO_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ChatlogButton.ChatlogScriptToggle
    local script = Instance.new("LocalScript")
    script.Name = "ChatlogScriptToggle"
    script.Parent = Converted["_ChatlogButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local player = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local btn = script.Parent
	
	local toggled = false
	
	local chatlogframe = script.Parent.Parent.Parent.Parent.Parent.Parent.ChatLog
	
	btn.MouseButton1Up:Connect(function()
		chatlogframe.Visible = not chatlogframe.Visible
	
		if chatlogframe.Visible then
			buttonmodule.ColorOn(script.Parent)
		else
			buttonmodule.ColorOff(script.Parent)
		end
	end)
	
end
local function DMQOAK_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ClickToMove.ClickScript
    local script = Instance.new("LocalScript")
    script.Name = "ClickScript"
    script.Parent = Converted["_ClickToMove"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local button = script.Parent
	local toggle = false
	
	local module = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Toggle Teleport Mode
	button.MouseButton1Click:Connect(function()
		toggle = not toggle
		if toggle then
			module.ColorOn(button)
		else
			module.ColorOff(button)
		end
	end)
	
	-- Teleport Logic
	mouse.Button1Down:Connect(function()
		if toggle then
			local char = player.Character or player.CharacterAdded:Wait()
			local hrp = char:WaitForChild("HumanoidRootPart")
			local pos = mouse.Hit and mouse.Hit.Position
			if pos then
				hrp.CFrame = CFrame.new(pos + Vector3.new(0, 3, 0))
			end
		end
	end)
	
end
local function PVIP_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.DashButton.DashScript
    local script = Instance.new("LocalScript")
    script.Name = "DashScript"
    script.Parent = Converted["_DashButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	-- LocalScript in your TextButton
	
	local button = script.Parent
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local toggle = false
	local dashDistance = 10
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Update character on respawn
	player.CharacterAdded:Connect(function(char)
		character = char
	end)
	
	-- Toggle system for enabling and disabling dash
	button.MouseButton1Up:Connect(function()
		toggle = not toggle
	
		if toggle then
			buttonmodule.ColorOn(button)
		else
			buttonmodule.ColorOff(button)
		end
	end)
	
	-- Dash function
	local function dash()
		if toggle and character and character:FindFirstChild("HumanoidRootPart") then
			local camera = workspace.CurrentCamera
			local dashDirection = camera.CFrame.LookVector
			local dashPosition = character.HumanoidRootPart.Position + dashDirection * dashDistance
	
			character:SetPrimaryPartCFrame(CFrame.new(dashPosition))
		end
	end
	
	-- Detect Q key
	local UserInputService = game:GetService("UserInputService")
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.Q then
			dash()
		end
	end)
	
end
local function LLXPWF_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ESP.ESPscriptnew
    local script = Instance.new("LocalScript")
    script.Name = "ESPscriptnew"
    script.Parent = Converted["_ESP"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	-- Fancy ESP Toggle Button Script with Username, Distance, and Toggle GUI
	-- Must be a LocalScript inside a TextButton
	
	local button = script.Parent
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local localPlayer = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Global ESP API
	_G.FancyESP = _G.FancyESP or {}
	local ESP = _G.FancyESP
	
	ESP.settings = setmetatable({
		enabled = false,
		boxColor = Color3.fromRGB(255, 0, 0),
		showUsername = true,
		showDistance = true
	}, {
		__index = function(t, k) return rawget(t, k) end,
		__newindex = function(t, k, v) rawset(t, k, v) end
	})
	
	local espTargets = {}
	local lastUpdated = 0
	local connection
	
	local function isTargetModel(model)
		return model:IsA("Model") and model:FindFirstChild("Humanoid") and model:FindFirstChild("HumanoidRootPart")
	end
	
	local function createESP(model)
		if espTargets[model] then return end
	
		local root = model:FindFirstChild("HumanoidRootPart")
		if not root then
			model.ChildAdded:Once(function(child)
				if child.Name == "HumanoidRootPart" and isTargetModel(model) then
					createESP(model)
				end
			end)
			return
		end
	
		local box = Instance.new("BoxHandleAdornment")
		box.Name = "FancyESPBox"
		box.Adornee = root
		box.Size = Vector3.new(4, 6, 1)
		box.Color3 = ESP.settings.boxColor
		box.AlwaysOnTop = true
		box.ZIndex = 5
		box.Transparency = 0.5
		box.Parent = workspace
	
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "FancyESPLabel"
		billboard.Adornee = root
		billboard.Size = UDim2.new(0, 100, 0, 50)
		billboard.StudsOffset = Vector3.new(0, 5, 0)
		billboard.AlwaysOnTop = true
		billboard.Parent = workspace
	
		local nameLabel = Instance.new("TextLabel")
		nameLabel.Name = "Name"
		nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
		nameLabel.Position = UDim2.new(0, 0, 0, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.TextSize = 26
		nameLabel.Font = Enum.Font.SourceSansBold
		nameLabel.TextColor3 = Color3.new(1, 1, 1)
		nameLabel.TextStrokeTransparency = 0.5
		nameLabel.Text = model.Name
		nameLabel.Parent = billboard
	
		local distanceLabel = Instance.new("TextLabel")
		distanceLabel.Name = "Distance"
		distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
		distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
		distanceLabel.BackgroundTransparency = 1
		distanceLabel.TextSize = 18
		distanceLabel.Font = Enum.Font.SourceSans
		distanceLabel.TextColor3 = Color3.fromRGB(180, 255, 180)
		distanceLabel.TextStrokeTransparency = 0.7
		distanceLabel.Text = ""
		distanceLabel.Parent = billboard
	
		local humanoid = model:FindFirstChild("Humanoid")
		if humanoid then
			humanoid.Died:Connect(function()
				if espTargets[model] then
					espTargets[model].box:Destroy()
					espTargets[model].label:Destroy()
					espTargets[model] = nil
				end
			end)
	
			model:WaitForChild("HumanoidRootPart").AncestryChanged:Connect(function(_, parent)
				if not parent and espTargets[model] then
					espTargets[model].box:Destroy()
					espTargets[model].label:Destroy()
					espTargets[model] = nil
				end
			end)
		end
	
		espTargets[model] = {
			box = box,
			label = billboard,
			distance = distanceLabel,
			root = root,
			humanoid = humanoid,
			nameLabel = nameLabel
		}
	end
	
	function ESP:Destroy()
		for _, data in pairs(espTargets) do
			if data.box then data.box:Destroy() end
			if data.label then data.label:Destroy() end
		end
		espTargets = {}
	end
	
	local function startESP()
		connection = RunService.RenderStepped:Connect(function()
			if tick() - lastUpdated > 0.5 then
				lastUpdated = tick()
				for _, player in ipairs(Players:GetPlayers()) do
					if player ~= localPlayer and player.Character then
						local root = player.Character:FindFirstChild("HumanoidRootPart")
						if root and (localPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude < 100 then
							createESP(player.Character)
						end
					end
				end
				for _, model in ipairs(workspace:GetDescendants()) do
					if isTargetModel(model) and not Players:GetPlayerFromCharacter(model) then
						local root = model:FindFirstChild("HumanoidRootPart")
						if root and (localPlayer.Character.HumanoidRootPart.Position - root.Position).Magnitude < 100 then
							createESP(model)
						end
					end
				end
				for model, data in pairs(espTargets) do
					if model and data.root and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
						local distance = (localPlayer.Character.HumanoidRootPart.Position - data.root.Position).Magnitude
						data.distance.Text = ESP.settings.showDistance and math.floor(distance) .. " studs" or ""
						local scale = math.clamp(50 / distance, 0.5, 1.5)
						data.label.Size = UDim2.new(0, 100 * scale, 0, 50 * scale)
						data.nameLabel.Text = ESP.settings.showUsername and model.Name or ""
					end
				end
			end
		end)
	end
	
	-- Cleanup on character death
	local function onCharacterAdded(char)
		local hum = char:WaitForChild("Humanoid")
		hum.Died:Connect(function()
			ESP:Destroy()
			if connection then connection:Disconnect() end
			espGui.Enabled = false
			buttonmodule.ColorOff(button)
			ESP.settings.enabled = false
		end)
	end
	if localPlayer.Character then onCharacterAdded(localPlayer.Character) end
	localPlayer.CharacterAdded:Connect(onCharacterAdded)
	
	-- GUI controls
	local espGui = Instance.new("ScreenGui")
	espGui.Name = "ESPSettingsGui"
	espGui.Parent = localPlayer:WaitForChild("PlayerGui")
	espGui.Enabled = false
	
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 200, 0, 150)
	frame.Position = UDim2.new(0, 10, 0, 10)
	frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	frame.BackgroundTransparency = 0.3
	frame.Parent = espGui
	
	local usernameToggle = Instance.new("TextButton")
	usernameToggle.Size = UDim2.new(0, 180, 0, 30)
	usernameToggle.Position = UDim2.new(0, 10, 0, 10)
	usernameToggle.Text = "Username: ON"
	usernameToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	usernameToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	usernameToggle.Parent = frame
	
	local distanceToggle = Instance.new("TextButton")
	distanceToggle.Size = UDim2.new(0, 180, 0, 30)
	distanceToggle.Position = UDim2.new(0, 10, 0, 50)
	distanceToggle.Text = "Distance: ON"
	distanceToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	distanceToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	distanceToggle.Parent = frame
	
	usernameToggle.MouseButton1Click:Connect(function()
		ESP.settings.showUsername = not ESP.settings.showUsername
		usernameToggle.Text = ESP.settings.showUsername and "Username: ON" or "Username: OFF"
	end)
	
	distanceToggle.MouseButton1Click:Connect(function()
		ESP.settings.showDistance = not ESP.settings.showDistance
		distanceToggle.Text = ESP.settings.showDistance and "Distance: ON" or "Distance: OFF"
	end)
	
	button.MouseButton1Click:Connect(function()
		ESP.settings.enabled = not ESP.settings.enabled
		if ESP.settings.enabled then
			startESP()
			buttonmodule.ColorOn(button)
			espGui.Enabled = true
		else
			ESP:Destroy()
			if connection then connection:Disconnect() end
			buttonmodule.ColorOff(button)
			espGui.Enabled = false
		end
	end)
end
local function XSYCA_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.ESP.ESPscript
    local script = Instance.new("LocalScript")
    script.Name = "ESPscript"
    script.Parent = Converted["_ESP"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Players = game:GetService("Players")
	local localPlayer = Players.LocalPlayer
	local button = script.Parent
	local esp = false
	local espLoop = nil
	
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	-- Function to apply highlight to a character
	local function applyHighlight(character)
		local existingHighlight = character:FindFirstChild("lol")
		if existingHighlight then
			existingHighlight:Destroy()
		end
	
		local highlight = Instance.new("Highlight")
		highlight.Name = "lol"
		highlight.FillColor = Color3.new(1, 1, 0)
		highlight.OutlineColor = Color3.new(1, 0, 0)
		highlight.Parent = character
		highlight.FillTransparency = 1
	end
	
	-- Function to remove all ESP highlights
	local function removeAllHighlights()
		for _, v in ipairs(workspace:GetDescendants()) do
			if v:IsA("Highlight") and v.Name == "lol" then
				v:Destroy()
			end
		end
	end
	
	-- Toggle ESP
	button.MouseButton1Up:Connect(function()
		esp = not esp
	
		if esp then
			buttonmodule.ColorOn(script.Parent)
			espLoop = task.spawn(function()
				while esp do
					for _, player in ipairs(Players:GetPlayers()) do
						if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
							applyHighlight(player.Character)
						end
					end
					task.wait(1)
				end
			end)
		else
	
			removeAllHighlights()
			buttonmodule.ColorOff(script.Parent)
		end
	end)
	
end
local function SPBPEM_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.FakeLagButton.FakeLagScript
    local script = Instance.new("LocalScript")
    script.Name = "FakeLagScript"
    script.Parent = Converted["_FakeLagButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local player = Players.LocalPlayer
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local btn = script.Parent
	
	local toggled = false
	local oldGravity = workspace.Gravity
	local renderConnection
	local mainLoop
	
	-- Store the current character reference and update on reset
	local character = player.Character or player.CharacterAdded:Wait()
	player.CharacterAdded:Connect(function(char)
		character = char
	end)
	
	btn.MouseButton1Up:Connect(function()
		toggled = not toggled
	
		if toggled then
			buttonmodule.ColorOn(btn)
			workspace.Gravity = 100
	
			mainLoop = task.spawn(function()
				while toggled do
					local char = character
					local hum = char and char:FindFirstChild("Humanoid")
					local hrp = char and char:FindFirstChild("HumanoidRootPart")
	
					if hum and hrp then
						local lastPos = hrp.Position
	
						task.wait(math.random(0.4, 0.9))
						hrp.Anchored = not hrp.Anchored
	
						if math.random() < 0.05 then
							task.wait(0.4)
							hrp.CFrame = CFrame.new(lastPos)
						end
	
						if renderConnection then
							renderConnection:Disconnect()
						end
	
						renderConnection = RunService.RenderStepped:Connect(function()
							if hum:GetState() == Enum.HumanoidStateType.Jumping or hum:GetState() == Enum.HumanoidStateType.Freefall then
								if math.random() < 0.6 then
									hrp.Anchored = not hrp.Anchored
								end
							end
						end)
					end
	
					task.wait(math.random(0.1, 0.3))
				end
			end)
		else
			buttonmodule.ColorOff(btn)
	
			if renderConnection then
				renderConnection:Disconnect()
				renderConnection = nil
			end
	
			if mainLoop then
				task.cancel(mainLoop)
				mainLoop = nil
			end
	
			local char = character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then
				hrp.Anchored = false
			end
	
			workspace.Gravity = oldGravity
		end
	end)
	
end
local function NTYSFDS_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.FieldOfViewButton.FOVscript
    local script = Instance.new("LocalScript")
    script.Name = "FOVscript"
    script.Parent = Converted["_FieldOfViewButton"]
    local req = require
    local require = function(obj)
        local fake = fake_module_scripts[obj]
        if fake then
            return fake()
        end
        return req(obj)
    end

	local player = game.Players.LocalPlayer
	
	local textboxmodule = require(script.Parent.Parent.Parent.Parent.TextBoxModule)
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	
	local btn = script.Parent
	local textbox = script.Parent.Parent.Parent.Parent.TextBoxs.TextBoxFrame.TextBox

	btn.MouseButton1Up:Connect(function()
		local camera = workspace.CurrentCamera
		if camera then
			textboxmodule.IntSetProperty(camera, "FieldOfView")
		end
	end)

end
local function YWOLWHF_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.General.AntiFlingButton.AntiFlingScript
	local script = Instance.new("LocalScript")
	script.Name = "AntiFlingScript"
	script.Parent = Converted["_AntiFlingButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game.Players.LocalPlayer
	local button = script.Parent
	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)

	-- Toggle state
	local toggleAntiFling = false

	-- High density anti-fling physical properties
	local antiFlingProperties = PhysicalProperties.new(1000, 0.3, 0.5)
	-- Roblox's default for Plastic
	local defaultProperties = PhysicalProperties.new(0.7, 0.3, 0.5)

	-- Function to apply properties to all character parts
	local function applyPhysicalProperties(char, props)
		for _, part in ipairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CustomPhysicalProperties = props
			end
		end
	end

	-- Enable/Disable Anti-Fling
	local function enableAntiFling(char)
		applyPhysicalProperties(char, antiFlingProperties)
	end

	local function disableAntiFling(char)
		applyPhysicalProperties(char, defaultProperties)
	end

	-- Button click toggles anti-fling
	button.MouseButton1Up:Connect(function()
		toggleAntiFling = not toggleAntiFling
		button.BorderSizePixel = toggleAntiFling and 2 or 0

		local char = plr.Character or plr.CharacterAdded:Wait()
		char:WaitForChild("HumanoidRootPart")

		if toggleAntiFling then
			enableAntiFling(char)
		else
			disableAntiFling(char)
		end
	end)

	-- Reapply on respawn
	plr.CharacterAdded:Connect(function(char)
		char:WaitForChild("HumanoidRootPart")
		if toggleAntiFling then
			enableAntiFling(char)
		end
	end)

end
local function RFVJQ_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Notes.TextBox.NotesSaver
	local script = Instance.new("LocalScript")
	script.Name = "NotesSaver"
	script.Parent = Converted["_TextBox2"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local HttpService = game:GetService("HttpService")
	local FILE_NAME = "textbox_content.json"

	local textbox = script.Parent  -- Reference to the TextBox this LocalScript is placed in.

	-- Function to save the text to a file (for Studio testing)
	local function saveText(text)
		local data = {
			content = text
		}
		writefile(FILE_NAME, HttpService:JSONEncode(data))  -- Save to a file in Studio.
	end

	-- Function to load the text from the file (for Studio testing)
	local function loadText()
		if isfile(FILE_NAME) then
			local data = HttpService:JSONDecode(readfile(FILE_NAME))  -- Read from the file in Studio.
			return data.content
		end
		return ""  -- Default to an empty string if no saved content is found.
	end

	-- Load saved text when the script starts
	local savedText = loadText()
	textbox.Text = savedText  -- Set the TextBox's text to the saved value on start.

	-- Function to save text every 3 seconds
	while true do
		wait(3)  -- Wait for 3 seconds before saving.
		saveText(textbox.Text)  -- Save the current text in the TextBox
	end

end
local function EVUQXQO_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Settings.Buttons.Panic.AntiFlingScript
	local script = Instance.new("LocalScript")
	script.Name = "AntiFlingScript"
	script.Parent = Converted["_Panic"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game.Players.LocalPlayer
	local button = script.Parent

	local gui = plr.PlayerGui:FindFirstChild("VEXGUI")


	button.MouseButton1Up:Connect(function()
		gui:Destroy()
	end)




end
local function AJMFYL_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Settings.Buttons.DiscordLink.DiscordLinkScript
	local script = Instance.new("LocalScript")
	script.Name = "DiscordLinkScript"
	script.Parent = Converted["_DiscordLink"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local btn = script.Parent

	btn.MouseButton1Click:Connect(function()
		setclipboard("soon bruh 😭")
	end)

end
local function RJVKGSR_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.DihButton.ppscript
	local script = Instance.new("LocalScript")
	script.Name = "ppscript"
	script.Parent = Converted["_DihButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local button = script.Parent

	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)
	local Buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)

	local toggle = false

	-- Save original clothing
	local originalShirt, originalPants, originalShirtGraphic

	button.MouseButton1Up:Connect(function()
		local char = player.Character

		if toggle == false then
			notificationmodule.Notification("Warning", "NSFW ‼️", 3)
			Buttonmodule.ColorOn(script.Parent)

			local pp = Instance.new("Part", workspace)
			pp.Name = "ppLol"

			local lowertorso = char:FindFirstChild("LowerTorso")

			local weld1 = Instance.new("Weld", pp)
			weld1.Part0 = pp
			weld1.Part1 = lowertorso

			pp.Size = Vector3.new(3.303, 0.376, 0.752)
			pp.Orientation = Vector3.new(0, 90, 0)
			pp.BrickColor = char["Body Colors"].HeadColor
			pp.CanCollide = false
			weld1.C0 = CFrame.new(1.80, 0.5, -pp.Size.Z / 1 - -0.75) * CFrame.Angles(0, math.rad(90), 0)

			for _, v in pairs(char:GetDescendants()) do
				if v:IsA("MeshPart") then
					v.BrickColor = char["Body Colors"].HeadColor
				end
			end

			-- Save clothing
			local shirt = char:FindFirstChildOfClass("Shirt")
			if shirt then
				originalShirt = shirt:Clone()
				shirt:Destroy()
			end

			local pants = char:FindFirstChildOfClass("Pants")
			if pants then
				originalPants = pants:Clone()
				pants:Destroy()
			end

			local graphic = char:FindFirstChild("Shirt Graphic")
			if graphic then
				originalShirtGraphic = graphic:Clone()
				graphic:Destroy()
			end

		else
			-- Remove fake part
			local part = workspace:FindFirstChild("ppLol")
			if part then
				part:Destroy()
			end

			-- Reapply clothing
			if originalShirt then
				originalShirt:Clone().Parent = char
			end

			if originalPants then
				originalPants:Clone().Parent = char
			end

			if originalShirtGraphic then
				originalShirtGraphic:Clone().Parent = char
			end

			Buttonmodule.ColorOff(script.Parent)
		end

		toggle = not toggle
	end)

end
local function BBOQN_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.RainbowSkinButton.RainbowSkinScript
	local script = Instance.new("LocalScript")
	script.Name = "RainbowSkinScript"
	script.Parent = Converted["_RainbowSkinButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local button = script.Parent
	local runService = game:GetService("RunService")
	local Buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)

	local toggle = false
	local connection
	local char
	local skintone

	-- Function to update character references
	local function updateCharacter()
		char = player.Character or player.CharacterAdded:Wait()
		skintone = char:WaitForChild("Body Colors")
	end

	-- Listen for character respawn
	player.CharacterAdded:Connect(function()
		if connection then
			connection:Disconnect()
			connection = nil
		end
		toggle = false
		Buttonmodule.ColorOff(script.Parent)
		updateCharacter()
	end)

	-- Initialize character
	updateCharacter()

	button.MouseButton1Up:Connect(function()
		if not toggle then
			Buttonmodule.ColorOn(script.Parent)

			local bodyParts = {}
			for _, part in pairs(char:GetChildren()) do
				if part:IsA("BasePart") then
					table.insert(bodyParts, part)
				end
			end

			local hue = 0
			connection = runService.RenderStepped:Connect(function(deltaTime)
				hue = (hue + deltaTime / 2) % 1
				local color = Color3.fromHSV(hue, 1, 1)

				for _, part in pairs(char:GetChildren()) do
					if part:IsA("BasePart") then
						part.Color = color
					end
				end
			end)
		else
			if connection then
				connection:Disconnect()
				connection = nil
			end

			Buttonmodule.ColorOff(script.Parent)

			for _, part in pairs(char:GetChildren()) do
				if part:IsA("BasePart") then
					part.BrickColor = skintone.HeadColor
				end
			end
		end

		toggle = not toggle
	end)

end
local function QPNM_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.FartButton.fartscript
	local script = Instance.new("LocalScript")
	script.Name = "fartscript"
	script.Parent = Converted["_FartButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local debounce = false

	button.MouseButton1Up:Connect(function()
		if not debounce then
			debounce = true
			local player = game.Players.LocalPlayer
			local char = player.Character or player.CharacterAdded:Wait()
			local humanoidRootPart = char:WaitForChild("LowerTorso")

			local audio = Instance.new("Sound", script.Parent)
			audio.SoundId = "rbxassetid://9059590824"
			audio:Play()

			-- Create a new part behind the HumanoidRootPart to attach the smoke
			local smokePart = Instance.new("Part")
			smokePart.Size = Vector3.new(1, 1, 1)
			smokePart.CanCollide = false
			smokePart.Anchored = true
			smokePart.Transparency = 1 -- Make the part invisible
			smokePart.CFrame = humanoidRootPart.CFrame * CFrame.new(0, 0, 2) -- Initial position behind the character
			smokePart.Parent = char

			-- Create a Smoke emitter and parent it to the smokePart
			local smoke = Instance.new("Smoke")
			smoke.Color = Color3.new(0.247059, 0.388235, 0.168627)
			smoke.Size = 0.3
			smoke.Opacity = 0.5
			smoke.RiseVelocity = 5
			smoke.Parent = smokePart

			-- Update the smoke position every 0.5 seconds for 10 seconds
			for i = 1, 20 do
				smokePart.CFrame = humanoidRootPart.CFrame * CFrame.new(0, 0, 2)
				wait(0.2)
			end

			-- Clean up
			smokePart:Destroy()	
			audio:Destroy()
			debounce = false
		end
	end)

end
local function PROXFI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.NightButton.NightScript
	local script = Instance.new("LocalScript")
	script.Name = "NightScript"
	script.Parent = Converted["_NightButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local lighting = game:GetService("Lighting")

	button.MouseButton1Up:Connect(function()
		lighting.TimeOfDay = "3:00"
	end)
end
local function PRMBPY_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.DayButton.DayScript
	local script = Instance.new("LocalScript")
	script.Name = "DayScript"
	script.Parent = Converted["_DayButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local button = script.Parent
	local lighting = game:GetService("Lighting")

	button.MouseButton1Up:Connect(function()
		lighting.TimeOfDay = "14:00"
	end)
end
local function OCNMMOI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.RemoveFogButton.RemoveFog
	local script = Instance.new("LocalScript")
	script.Name = "RemoveFog"
	script.Parent = Converted["_RemoveFogButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local button = script.Parent
	local toggle = false

	local lighting = game:GetService("Lighting")

	local module = require(script.Parent.Parent.Parent.Parent.ButtonModule)

	-- Toggle Teleport Mode
	button.MouseButton1Click:Connect(function()
		toggle = not toggle
		local origfog1 = game:GetService("Lighting").FogStart
		local origfog2 = game:GetService("Lighting").FogEnd
		if toggle then
			module.ColorOn(button)
			lighting.FogStart = math.huge
			lighting.FogEnd = math.huge


		else
			module.ColorOff(button)
			lighting.FogStart = origfog1
			lighting.FogEnd = origfog2

		end
	end)
end
local function TXMX_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.ClickToDeleteButton.clicktodeletescript
	local script = Instance.new("LocalScript")
	script.Name = "clicktodeletescript"
	script.Parent = Converted["_ClickToDeleteButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local toggle = false

	local previousTarget = nil
	local moveConnection = nil
	local changeConnection = nil
	local deleteConnection = nil

	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)

	local function highlightTarget(target)
		-- Remove highlight from the previous target if it exists
		if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
			previousTarget.DestroyOutline:Destroy()
		end

		-- Highlight the new target
		if target and target:IsA("BasePart") then
			local highlight = Instance.new("Highlight", target)
			highlight.Name = "DestroyOutline"
			highlight.FillColor = Color3.new(1, 0, 0) -- Red fill color
			highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline color
			highlight.DepthMode = Enum.HighlightDepthMode.Occluded -- Respect depth (not always on top)
			previousTarget = target
		else
			previousTarget = nil
		end
	end

	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then
			toggle = true
			buttonmodule.ColorOn(script.Parent)
			-- Connect to the Mouse's Move event
			moveConnection = mouse.Move:Connect(function()
				local target = mouse.Target
				highlightTarget(target)
			end)

			-- Connect to the Mouse's Button1Up event for deleting parts
			deleteConnection = mouse.Button1Up:Connect(function()
				if toggle and mouse.Target then
					mouse.Target:Destroy()
				end
			end)

			-- Connect to the Mouse's Changed event to remove the highlight if necessary
			changeConnection = mouse.Changed:Connect(function()
				local target = mouse.Target

				-- If the mouse moves away from the target, remove the highlight
				if not target then
					highlightTarget(nil)
				end
			end)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)
			-- Disconnect the events when toggled off
			if moveConnection then
				moveConnection:Disconnect()
				moveConnection = nil
			end
			if changeConnection then
				changeConnection:Disconnect()
				changeConnection = nil
			end
			if deleteConnection then
				deleteConnection:Disconnect()
				deleteConnection = nil
			end

			-- Remove the highlight if it exists
			if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
				previousTarget.DestroyOutline:Destroy()
				previousTarget = nil
			end
		end
	end)

end
local function RRKYCI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.VexFrame.Tabs.Client.ClickToCollisionButton.clicktodeletescript
	local script = Instance.new("LocalScript")
	script.Name = "clicktodeletescript"
	script.Parent = Converted["_ClickToCollisionButton"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local toggle = false

	local previousTarget = nil
	local moveConnection = nil
	local changeConnection = nil
	local deleteConnection = nil

	local buttonmodule = require(script.Parent.Parent.Parent.Parent.ButtonModule)
	local notificationmodule = require(script.Parent.Parent.Parent.Parent.NotificationModule)

	local function highlightTarget(target)
		-- Remove highlight from the previous target if it exists
		if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
			previousTarget.DestroyOutline:Destroy()
		end

		-- Highlight the new target
		if target and target:IsA("BasePart") then
			local highlight = Instance.new("Highlight", target)
			highlight.Name = "DestroyOutline"

			if target.CanCollide then
				-- Orange for CanCollide ON
				highlight.FillColor = Color3.fromRGB(255, 170, 0) -- Orange
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255) -- White outline
			else
				-- Blue for CanCollide OFF
				highlight.FillColor = Color3.fromRGB(0, 170, 255) -- Bright blue
				highlight.OutlineColor = Color3.fromRGB(200, 200, 255) -- Soft blue-white outline
			end

			highlight.DepthMode = Enum.HighlightDepthMode.Occluded
			previousTarget = target
		else
			previousTarget = nil
		end
	end

	script.Parent.MouseButton1Up:Connect(function()
		if toggle == false then

			notificationmodule.GuiNotification("Color Meaning", "🟠 = Collision On, 🔵 = Collision Off ", 3)

			toggle = true
			buttonmodule.ColorOn(script.Parent)

			moveConnection = mouse.Move:Connect(function()
				local target = mouse.Target
				highlightTarget(target)
			end)

			deleteConnection = mouse.Button1Up:Connect(function()
				if toggle and mouse.Target then
					mouse.Target.CanCollide = not mouse.Target.CanCollide
					highlightTarget(mouse.Target) -- Update highlight color
				end
			end)

			changeConnection = mouse.Changed:Connect(function()
				local target = mouse.Target
				if not target then
					highlightTarget(nil)
				end
			end)
		else
			toggle = false
			buttonmodule.ColorOff(script.Parent)

			if moveConnection then moveConnection:Disconnect() moveConnection = nil end
			if changeConnection then changeConnection:Disconnect() changeConnection = nil end
			if deleteConnection then deleteConnection:Disconnect() deleteConnection = nil end

			if previousTarget and previousTarget:FindFirstChild("DestroyOutline") then
				previousTarget.DestroyOutline:Destroy()
				previousTarget = nil
			end
		end
	end)

end
local function IUHQUI_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.Drag
	local script = Instance.new("LocalScript")
	script.Name = "Drag"
	script.Parent = Converted["_Main"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UserInputService = game:GetService('UserInputService')

	local frame = script.Parent

	local leadFrame = Instance.new('Frame') do
		leadFrame.AnchorPoint = frame.AnchorPoint
		leadFrame.Position = frame.Position
		leadFrame.Size = frame.Size
		leadFrame.Name = `Lead {frame.Name}`
		leadFrame.Visible = false
		leadFrame.Parent = frame.Parent
	end

	local screenGui = frame:FindFirstAncestorOfClass('ScreenGui')

	local inputChanged = nil
	local inputEnded = nil

	local function getBoundsRelations(guiObject : GuiObject)
		local bounds = screenGui.AbsoluteSize
		local topLeft = screenGui.IgnoreGuiInset and guiObject.AbsolutePosition + Vector2.new(0, 36) or guiObject.AbsolutePosition
		local bottomRight = topLeft + guiObject.AbsoluteSize

		local boundRelations = {
			Top = topLeft.Y < 0 and math.abs(topLeft.Y) or nil,
			Left = topLeft.X < 0 and math.abs(topLeft.X) or nil,
			Right = bottomRight.X > bounds.X and math.abs(bottomRight.X - bounds.X) or nil,
			Bottom = bottomRight.Y > bounds.Y and math.abs(bottomRight.Y - bounds.Y) or nil,
		}

		return (not boundRelations.Top
			and not boundRelations.Bottom
			and not boundRelations.Left
			and not boundRelations.Right), boundRelations
	end

	frame.InputBegan:Connect(function(inputObject : InputObject)
		if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then

			local lastMousePosition = UserInputService:GetMouseLocation()
			local goalPosition = frame.Position

			inputChanged = UserInputService.InputChanged:Connect(function(input : InputObject, event : boolean)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					local currentMousePosition = UserInputService:GetMouseLocation()
					local mouseDelta = currentMousePosition - lastMousePosition

					goalPosition += UDim2.fromOffset(mouseDelta.X, mouseDelta.Y)

					leadFrame.Position = goalPosition

					local isInBounds, relations = getBoundsRelations(leadFrame)

					if not isInBounds then
						local x = (relations.Left or 0) - (relations.Right or 0)
						local y = (relations.Top or 0) - (relations.Bottom or 0)

						goalPosition += UDim2.fromOffset(x, y)
					end

					frame.Position = goalPosition
					lastMousePosition = currentMousePosition
				end
			end)

			inputEnded = frame.InputEnded:Connect(function(input : InputObject)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					inputChanged:Disconnect()
					inputChanged = nil

					inputEnded:Disconnect()
					inputEnded = nil
				end
			end)
		end
	end)

	frame.Destroying:Once(function()

		leadFrame = leadFrame:Destroy()

		if inputChanged  then
			inputChanged:Disconnect()
			inputChanged = nil
		end

		if inputEnded then
			inputEnded:Disconnect()
			inputEnded = nil
		end
	end)
end
local function AZFTVR_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.OpenAndClose
	local script = Instance.new("LocalScript")
	script.Name = "OpenAndClose"
	script.Parent = Converted["_Main"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local ts = game:GetService("TweenService")

	local closeButton = script.Parent.Parent.Main:WaitForChild("Close")
	local main = script.Parent.Parent:FindFirstChild("Main")
	local frame = script.Parent:WaitForChild("VexFrame")
	local tabs = frame:WaitForChild("Tabs")
	local buttons = tabs.VexButtons.ScrollingFrame

	-- Sound
	local sound = Instance.new("Sound", workspace)
	sound.SoundId = "rbxassetid://1843027392"
	sound:Play()

	-- Toggle open/close state
	local closed = false
	closeButton.MouseButton1Up:Connect(function()
		if closed == false then
			for _, child in pairs(tabs:GetChildren()) do
				if child:IsA("Frame") then
					child.Visible = false
				end
			end
			for _, child in pairs(tabs:GetChildren()) do
				if child:IsA("ScrollingFrame") then
					child.Visible = false
				end
			end
			frame.Visible = false
		else
			frame.Visible = true
			tabs:FindFirstChild("Home").Visible = true
		end
		closed = not closed
	end)

	-- Button logic for TextButtons and buttons in ScrollingFrame
	local function setupButtonLogic(button)
		if button:IsA("TextButton") then
			button.MouseButton1Up:Connect(function()
				local frameName = button.Name:gsub("Button", "") -- Remove 'Button' suffix to get frame name

				-- Hide all frames first
				for _, tab in pairs(tabs:GetChildren()) do
					if tab:IsA("Frame") then
						tab.Visible = false
					end
				end

				-- Hide ScrollingFrame only if it's not the one clicked
				for _, scrollFrame in pairs(tabs:GetChildren()) do
					if scrollFrame:IsA("ScrollingFrame") and scrollFrame ~= buttons then
						scrollFrame.Visible = false
					end
				end

				-- Show the corresponding target frame based on the button clicked
				local targetFrame = tabs:FindFirstChild(frameName)
				if targetFrame then
					targetFrame.Visible = true
				end

				-- Show the specific scrolling frame if the target frame is inside it
				if targetFrame and targetFrame:IsA("ScrollingFrame") then
					targetFrame.Visible = true
				end
			end)
		end
	end

	-- Set up button logic for the buttons in ScrollingFrame
	for _, button in pairs(buttons:GetChildren()) do
		setupButtonLogic(button)
	end

	-- Set up button logic for any future buttons added to the ScrollingFrame
	buttons.ChildAdded:Connect(function(child)
		setupButtonLogic(child)
	end)

end
local function ZADAPC_fake_script() -- Fake Script: StarterGui.VEXGUI.Main.FPS.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_FPS"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local RunService = game:GetService("RunService")
	local player = game.Players.LocalPlayer

	local fpsLabel = script.Parent

	-- Update every frame
	RunService.RenderStepped:Connect(function(deltaTime)
		local fps = math.floor(1 / deltaTime)
		fpsLabel.Text = "FPS: " .. fps
	end)

end
local function XHGXLEO_fake_script() -- Fake Script: StarterGui.VEXGUI.Logo.LocalScript
	local script = Instance.new("LocalScript")
	script.Name = "LocalScript"
	script.Parent = Converted["_Logo"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local imageLabel = game.Players.LocalPlayer.PlayerGui.VEXGUI:WaitForChild("Logo") -- Assuming the image is the parent
	local aspectRatio = 1 -- 500 / 500 = 1
	local ts = game:GetService("TweenService")

	local ti = TweenInfo.new(3.5, Enum.EasingStyle.Cubic, Enum.EasingDirection.In)


	-- Create the UIAspectRatioConstraint
	local aspectConstraint = Instance.new("UIAspectRatioConstraint")
	aspectConstraint.AspectRatio = aspectRatio
	aspectConstraint.Parent = imageLabel

	-- Set anchor point to center
	imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)

	-- Set size and center position
	imageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)

	if imageLabel then
		imageLabel.Visible = true
		imageLabel.Size = UDim2.new(0, 0, 0, 0)
		ts:Create(imageLabel, ti, {Size = UDim2.new(1, 0, 1, 0)}):Play()
	end
end
local function UUBPBO_fake_script() -- Fake Script: StarterGui.VEXGUI.ChatLog.Drag
	local script = Instance.new("LocalScript")
	script.Name = "Drag"
	script.Parent = Converted["_ChatLog"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UserInputService = game:GetService('UserInputService')

	local frame = script.Parent

	local leadFrame = Instance.new('Frame') do
		leadFrame.AnchorPoint = frame.AnchorPoint
		leadFrame.Position = frame.Position
		leadFrame.Size = frame.Size
		leadFrame.Name = `Lead {frame.Name}`
		leadFrame.Visible = false
		leadFrame.Parent = frame.Parent
	end

	local screenGui = frame:FindFirstAncestorOfClass('ScreenGui')

	local inputChanged = nil
	local inputEnded = nil

	local function getBoundsRelations(guiObject : GuiObject)
		local bounds = screenGui.AbsoluteSize
		local topLeft = screenGui.IgnoreGuiInset and guiObject.AbsolutePosition + Vector2.new(0, 36) or guiObject.AbsolutePosition
		local bottomRight = topLeft + guiObject.AbsoluteSize

		local boundRelations = {
			Top = topLeft.Y < 0 and math.abs(topLeft.Y) or nil,
			Left = topLeft.X < 0 and math.abs(topLeft.X) or nil,
			Right = bottomRight.X > bounds.X and math.abs(bottomRight.X - bounds.X) or nil,
			Bottom = bottomRight.Y > bounds.Y and math.abs(bottomRight.Y - bounds.Y) or nil,
		}

		return (not boundRelations.Top
			and not boundRelations.Bottom
			and not boundRelations.Left
			and not boundRelations.Right), boundRelations
	end

	frame.InputBegan:Connect(function(inputObject : InputObject)
		if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then

			local lastMousePosition = UserInputService:GetMouseLocation()
			local goalPosition = frame.Position

			inputChanged = UserInputService.InputChanged:Connect(function(input : InputObject, event : boolean)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					local currentMousePosition = UserInputService:GetMouseLocation()
					local mouseDelta = currentMousePosition - lastMousePosition

					goalPosition += UDim2.fromOffset(mouseDelta.X, mouseDelta.Y)

					leadFrame.Position = goalPosition

					local isInBounds, relations = getBoundsRelations(leadFrame)

					if not isInBounds then
						local x = (relations.Left or 0) - (relations.Right or 0)
						local y = (relations.Top or 0) - (relations.Bottom or 0)

						goalPosition += UDim2.fromOffset(x, y)
					end

					frame.Position = goalPosition
					lastMousePosition = currentMousePosition
				end
			end)

			inputEnded = frame.InputEnded:Connect(function(input : InputObject)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					inputChanged:Disconnect()
					inputChanged = nil

					inputEnded:Disconnect()
					inputEnded = nil
				end
			end)
		end
	end)

	frame.Destroying:Once(function()

		leadFrame = leadFrame:Destroy()

		if inputChanged  then
			inputChanged:Disconnect()
			inputChanged = nil
		end

		if inputEnded then
			inputEnded:Disconnect()
			inputEnded = nil
		end
	end)
end
local function WVVRCJ_fake_script() -- Fake Script: StarterGui.VEXGUI.ChatLog.ScrollingMainFrame.ChatLogger
	local script = Instance.new("LocalScript")
	script.Name = "ChatLogger"
	script.Parent = Converted["_ScrollingMainFrame"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local Players = game:GetService("Players")
	local TextChatService = game:GetService("TextChatService")

	local localPlayer = Players.LocalPlayer
	local playerGui = localPlayer:WaitForChild("PlayerGui")

	if playerGui:FindFirstChild("ChatLogGui") then
		playerGui:FindFirstChild("ChatLogGui"):Destroy()
	end

	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "ChatLogGui"
	screenGui.ResetOnSpawn = false
	screenGui.Parent = playerGui

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Name = "ChatLog"
	scrollingFrame.Size = UDim2.new(1, 0, 12.785, 0)
	scrollingFrame.Position = UDim2.new(0, 0, 1, 0)
	scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	scrollingFrame.BackgroundTransparency = 0.5
	scrollingFrame.BackgroundColor3 = Color3.fromRGB(48,48,48)
	scrollingFrame.BorderSizePixel = 0
	scrollingFrame.ScrollBarThickness = 6
	scrollingFrame.Parent = script.Parent.Parent

	local layout = Instance.new("UIListLayout")
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Padding = UDim.new(0, 4)
	layout.Parent = scrollingFrame

	local function isCommandMessage(message)
		local firstChar = string.sub(message, 1, 1)
		return firstChar == ":" or firstChar == ";" or firstChar == "/" or firstChar == "." or firstChar == "!" or firstChar == "?"
	end

	local runservice = game:GetService("RunService")

	local function createTooltip(text, messageLabel)
		local tooltip = Instance.new("TextLabel")
		tooltip.Size = UDim2.new(0, 300, 0, 40)
		tooltip.BackgroundTransparency = 0.5
		tooltip.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		tooltip.TextColor3 = Color3.fromRGB(255, 255, 255)
		tooltip.TextSize = 14
		tooltip.TextWrapped = true
		tooltip.Text = text
		tooltip.Font = Enum.Font.SourceSans
		tooltip.Parent = screenGui

		runservice.RenderStepped:Connect(function()
			tooltip.Position = UDim2.new(0, localPlayer:GetMouse().X + 10, 0, localPlayer:GetMouse().Y + 10)
		end)

		messageLabel.MouseLeave:Connect(function()
			tooltip:Destroy()
		end)
	end

	local function addChatMessage(speakerName, messageText)
		local messageLabel = Instance.new("TextLabel")
		messageLabel.Size = UDim2.new(1, -10, 0, 20)
		messageLabel.BackgroundTransparency = 1
		messageLabel.TextXAlignment = Enum.TextXAlignment.Left
		messageLabel.Font = Enum.Font.SourceSans
		messageLabel.TextSize = 16
		messageLabel.TextWrapped = true
		messageLabel.TextTruncate = Enum.TextTruncate.AtEnd
		messageLabel.RichText = true
		messageLabel.Text = "<b>" .. speakerName .. "</b>: " .. messageText
		messageLabel.TextColor3 = isCommandMessage(messageText) and Color3.fromRGB(255, 85, 85) or Color3.fromRGB(255, 255, 255)
		messageLabel.Parent = scrollingFrame

		if messageText:len() > 40 then
			messageLabel.MouseEnter:Connect(function()
				createTooltip(messageText, messageLabel)
			end)
		end

		task.wait()
		scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
		scrollingFrame.CanvasPosition = Vector2.new(0, scrollingFrame.CanvasSize.Y.Offset)
	end

	local loggedMessageIds = {}

	TextChatService.OnIncomingMessage = function(message)
		if message.TextSource then
			if not loggedMessageIds[message.MessageId] then
				loggedMessageIds[message.MessageId] = true
				local player = Players:GetPlayerByUserId(message.TextSource.UserId)
				if player then
					local isWhisper = message.TextChannel and message.TextChannel.Name:match("^RBXWhisper:%d+_%d+$")
					local prefix = isWhisper and "[PM] " or ""
					addChatMessage(prefix .. player.Name, message.Text)
				end
			end
		end
	end

end
local function BHBL_fake_script() -- Fake Script: StarterGui.VEXGUI.ReExecute
	local script = Instance.new("LocalScript")
	script.Name = "ReExecute"
	script.Parent = Converted["_VEXGUI"]
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local plr = game:GetService("Players").LocalPlayer
	local GUI = script.Parent
	local function onCharacterAdded(char)
		local hum = char:WaitForChild("Humanoid")
		hum.Died:Connect(function()
			local deathText = GUI:WaitForChild("DeathText")
			deathText.Visible = true
			wait(3)
			deathText.Text = "Wait.."
			wait(5)
			local newGUI = GUI:Clone()
			newGUI.Parent = GUI.Parent
			GUI:Destroy()
		end)
	end

	if plr.Character then
		onCharacterAdded(plr.Character)
	end

	plr.CharacterAdded:Connect(onCharacterAdded)

end

coroutine.wrap(NPFOF_fake_script)()
coroutine.wrap(HLOA_fake_script)()
coroutine.wrap(QEJTGP_fake_script)()
coroutine.wrap(EEPNG_fake_script)()
coroutine.wrap(XOYGX_fake_script)()
coroutine.wrap(MJBJ_fake_script)()
coroutine.wrap(DYVVOS_fake_script)()
coroutine.wrap(AFFGJ_fake_script)()
coroutine.wrap(CGPSXXM_fake_script)()
coroutine.wrap(SWCCJ_fake_script)()
coroutine.wrap(JPLZHI_fake_script)()
coroutine.wrap(WSQQOFZ_fake_script)()
coroutine.wrap(GTLWI_fake_script)()
coroutine.wrap(LHIW_fake_script)()
coroutine.wrap(BQOXLAZ_fake_script)()
coroutine.wrap(EANW_fake_script)()
coroutine.wrap(JGJN_fake_script)()
coroutine.wrap(SEWN_fake_script)()
coroutine.wrap(MJCD_fake_script)()
coroutine.wrap(COQLIJF_fake_script)()
coroutine.wrap(AYVIDZS_fake_script)()
coroutine.wrap(BMYRJA_fake_script)()
coroutine.wrap(SEMZ_fake_script)()
coroutine.wrap(JGUW_fake_script)()
coroutine.wrap(WSKJNGO_fake_script)()
coroutine.wrap(DMQOAK_fake_script)()
coroutine.wrap(PVIP_fake_script)()
coroutine.wrap(LLXPWF_fake_script)()
coroutine.wrap(XSYCA_fake_script)()
coroutine.wrap(SPBPEM_fake_script)()
coroutine.wrap(NTYSFDS_fake_script)()
coroutine.wrap(YWOLWHF_fake_script)()
coroutine.wrap(RFVJQ_fake_script)()
coroutine.wrap(EVUQXQO_fake_script)()
coroutine.wrap(AJMFYL_fake_script)()
coroutine.wrap(RJVKGSR_fake_script)()
coroutine.wrap(BBOQN_fake_script)()
coroutine.wrap(QPNM_fake_script)()
coroutine.wrap(PROXFI_fake_script)()
coroutine.wrap(PRMBPY_fake_script)()
coroutine.wrap(OCNMMOI_fake_script)()
coroutine.wrap(TXMX_fake_script)()
coroutine.wrap(RRKYCI_fake_script)()
coroutine.wrap(IUHQUI_fake_script)()
coroutine.wrap(AZFTVR_fake_script)()
coroutine.wrap(ZADAPC_fake_script)()
coroutine.wrap(XHGXLEO_fake_script)()
coroutine.wrap(UUBPBO_fake_script)()
coroutine.wrap(WVVRCJ_fake_script)()
coroutine.wrap(BHBL_fake_script)()-- Please leave these comments in and leave credit, it took me a while to make this
